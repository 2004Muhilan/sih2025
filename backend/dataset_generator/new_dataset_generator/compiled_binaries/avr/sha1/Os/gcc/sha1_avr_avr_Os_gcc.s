	.file	"sha1_avr.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	sha1_init_avr
	.type	sha1_init_avr, @function
sha1_init_avr:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	movw r30,r24
	ldi r24,lo8(1)
	ldi r25,lo8(35)
	ldi r26,lo8(69)
	ldi r27,lo8(103)
	st Z,r24
	std Z+1,r25
	std Z+2,r26
	std Z+3,r27
	ldi r24,lo8(-119)
	ldi r25,lo8(-85)
	ldi r26,lo8(-51)
	ldi r27,lo8(-17)
	std Z+4,r24
	std Z+5,r25
	std Z+6,r26
	std Z+7,r27
	ldi r24,lo8(-2)
	ldi r25,lo8(-36)
	ldi r26,lo8(-70)
	ldi r27,lo8(-104)
	std Z+8,r24
	std Z+9,r25
	std Z+10,r26
	std Z+11,r27
	ldi r24,lo8(118)
	ldi r25,lo8(84)
	ldi r26,lo8(50)
	ldi r27,lo8(16)
	std Z+12,r24
	std Z+13,r25
	std Z+14,r26
	std Z+15,r27
	ldi r24,lo8(-16)
	ldi r25,lo8(-31)
	ldi r26,lo8(-46)
	ldi r27,lo8(-61)
	std Z+16,r24
	std Z+17,r25
	std Z+18,r26
	std Z+19,r27
	subi r30,-84
	sbci r31,-1
	std Z+1,__zero_reg__
	st Z,__zero_reg__
/* epilogue start */
	ret
	.size	sha1_init_avr, .-sha1_init_avr
.global	sha1_transform_avr
	.type	sha1_transform_avr, @function
sha1_transform_avr:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,92
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 92 */
/* stack size = 110 */
.L__stack_usage = 110
	adiw r28,91-62
	std Y+63,r25
	std Y+62,r24
	sbiw r28,91-62
	movw r26,r24
	ld r8,X+
	ld r9,X+
	ld r10,X+
	ld r11,X
	sbiw r26,3
	adiw r28,69-60
	std Y+60,r8
	std Y+61,r9
	std Y+62,r10
	std Y+63,r11
	sbiw r28,69-60
	adiw r26,4
	ld r8,X+
	ld r9,X+
	ld r10,X+
	ld r11,X
	sbiw r26,4+3
	adiw r28,73-60
	std Y+60,r8
	std Y+61,r9
	std Y+62,r10
	std Y+63,r11
	sbiw r28,73-60
	adiw r26,8
	ld r8,X+
	ld r9,X+
	ld r10,X+
	ld r11,X
	sbiw r26,8+3
	adiw r28,77-60
	std Y+60,r8
	std Y+61,r9
	std Y+62,r10
	std Y+63,r11
	sbiw r28,77-60
	adiw r26,12
	ld r8,X+
	ld r9,X+
	ld r10,X+
	ld r11,X
	sbiw r26,12+3
	adiw r28,81-60
	std Y+60,r8
	std Y+61,r9
	std Y+62,r10
	std Y+63,r11
	sbiw r28,81-60
	adiw r26,16
	ld r8,X+
	ld r9,X+
	ld r10,X+
	ld r11,X
	sbiw r26,16+3
	adiw r28,85-60
	std Y+60,r8
	std Y+61,r9
	std Y+62,r10
	std Y+63,r11
	sbiw r28,85-60
	movw r16,r22
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	movw r20,r22
	subi r20,-64
	sbci r21,-1
.L3:
	movw r30,r16
	ldd r25,Z+2
	ldd r24,Z+3
	movw r12,r24
	lsl r25
	sbc r14,r14
	sbc r15,r15
	movw r26,r18
	st X+,r12
	st X+,r13
	st X+,r14
	st X+,r15
	movw r18,r26
	subi r16,-4
	sbci r17,-1
	cp r20,r16
	cpc r21,r17
	brne .L3
	adiw r28,85-60
	ldd r8,Y+60
	ldd r9,Y+61
	ldd r10,Y+62
	ldd r11,Y+63
	sbiw r28,85-60
	adiw r28,65-60
	std Y+60,r8
	std Y+61,r9
	std Y+62,r10
	std Y+63,r11
	sbiw r28,65-60
	adiw r28,81-60
	ldd r24,Y+60
	ldd r25,Y+61
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,81-60
	adiw r28,77-60
	ldd r4,Y+60
	ldd r5,Y+61
	ldd r6,Y+62
	ldd r7,Y+63
	sbiw r28,77-60
	adiw r28,73-60
	ldd r12,Y+60
	ldd r13,Y+61
	ldd r14,Y+62
	ldd r15,Y+63
	sbiw r28,73-60
	adiw r28,69-60
	ldd r16,Y+60
	ldd r17,Y+61
	ldd r18,Y+62
	ldd r19,Y+63
	sbiw r28,69-60
	mov r3,__zero_reg__
	mov r2,__zero_reg__
.L4:
	movw r22,r2
	andi r22,15
	clr r23
	lsl r22
	rol r23
	lsl r22
	rol r23
	clr r10
	inc r10
	mov r11,__zero_reg__
	add r10,r28
	adc r11,r29
	add r10,r22
	adc r11,r23
	adiw r28,89-62
	std Y+63,r11
	std Y+62,r10
	sbiw r28,89-62
	movw r22,r18
	movw r20,r16
	ldi r30,27
	1:
	lsr r23
	ror r22
	ror r21
	ror r20
	dec r30
	brne 1b
	movw r8,r16
	movw r10,r18
	ldi r31,5
	1:
	lsl r8
	rol r9
	rol r10
	rol r11
	dec r31
	brne 1b
	or r8,r20
	or r9,r21
	or r10,r22
	or r11,r23
	ldi r20,103
	sub r8,r20
	ldi r20,-122
	sbc r9,r20
	ldi r20,125
	sbc r10,r20
	ldi r20,-91
	sbc r11,r20
	adiw r28,89-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,89-62
	ld r20,Z
	ldd r21,Z+1
	ldd r22,Z+2
	ldd r23,Z+3
	add r8,r20
	adc r9,r21
	adc r10,r22
	adc r11,r23
	movw r22,r6
	movw r20,r4
	eor r20,r24
	eor r21,r25
	eor r22,r26
	eor r23,r27
	and r20,r12
	and r21,r13
	and r22,r14
	and r23,r15
	eor r20,r24
	eor r21,r25
	eor r22,r26
	eor r23,r27
	add r20,r8
	adc r21,r9
	adc r22,r10
	adc r23,r11
	adiw r28,65-60
	ldd r8,Y+60
	ldd r9,Y+61
	ldd r10,Y+62
	ldd r11,Y+63
	sbiw r28,65-60
	add r20,r8
	adc r21,r9
	adc r22,r10
	adc r23,r11
	movw r8,r12
	movw r10,r14
	ldi r30,2
	1:
	lsr r11
	ror r10
	ror r9
	ror r8
	dec r30
	brne 1b
	adiw r28,65-60
	std Y+60,r8
	std Y+61,r9
	std Y+62,r10
	std Y+63,r11
	sbiw r28,65-60
	movw r8,r12
	movw r10,r14
	ldi r31,30
	1:
	lsl r8
	rol r9
	rol r10
	rol r11
	dec r31
	brne 1b
	adiw r28,65-60
	ldd r12,Y+60
	ldd r13,Y+61
	ldd r14,Y+62
	ldd r15,Y+63
	sbiw r28,65-60
	or r8,r12
	or r9,r13
	or r10,r14
	or r11,r15
	ldi r30,-1
	sub r2,r30
	sbc r3,r30
	movw r12,r16
	movw r14,r18
	adiw r28,65-60
	std Y+60,r24
	std Y+61,r25
	std Y+62,r26
	std Y+63,r27
	sbiw r28,65-60
	ldi r31,20
	cp r2,r31
	cpc r3,__zero_reg__
	breq .+2
	rjmp .L5
	adiw r28,69-60
	ldd r12,Y+60
	ldd r13,Y+61
	ldd r14,Y+62
	ldd r15,Y+63
	sbiw r28,69-60
	add r20,r12
	adc r21,r13
	adc r22,r14
	adc r23,r15
	adiw r28,91-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,91-62
	st Z,r20
	std Z+1,r21
	std Z+2,r22
	std Z+3,r23
	adiw r28,73-60
	ldd r12,Y+60
	ldd r13,Y+61
	ldd r14,Y+62
	ldd r15,Y+63
	sbiw r28,73-60
	add r16,r12
	adc r17,r13
	adc r18,r14
	adc r19,r15
	std Z+4,r16
	std Z+5,r17
	std Z+6,r18
	std Z+7,r19
	adiw r28,77-60
	ldd r12,Y+60
	ldd r13,Y+61
	ldd r14,Y+62
	ldd r15,Y+63
	sbiw r28,77-60
	add r8,r12
	adc r9,r13
	adc r10,r14
	adc r11,r15
	std Z+8,r8
	std Z+9,r9
	std Z+10,r10
	std Z+11,r11
	adiw r28,81-60
	ldd r20,Y+60
	ldd r21,Y+61
	ldd r22,Y+62
	ldd r23,Y+63
	sbiw r28,81-60
	add r20,r4
	adc r21,r5
	adc r22,r6
	adc r23,r7
	std Z+12,r20
	std Z+13,r21
	std Z+14,r22
	std Z+15,r23
	adiw r28,85-60
	ldd r8,Y+60
	ldd r9,Y+61
	ldd r10,Y+62
	ldd r11,Y+63
	sbiw r28,85-60
	add r24,r8
	adc r25,r9
	adc r26,r10
	adc r27,r11
	std Z+16,r24
	std Z+17,r25
	std Z+18,r26
	std Z+19,r27
/* epilogue start */
	subi r28,-92
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L5:
	movw r26,r6
	movw r24,r4
	movw r4,r8
	movw r6,r10
	movw r16,r20
	movw r18,r22
	rjmp .L4
	.size	sha1_transform_avr, .-sha1_transform_avr
	.ident	"GCC: (GNU) 7.3.0"
