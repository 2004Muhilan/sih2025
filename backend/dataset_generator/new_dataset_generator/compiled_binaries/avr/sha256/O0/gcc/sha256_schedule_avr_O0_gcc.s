	.file	"sha256_schedule.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	sha256_message_schedule
	.type	sha256_message_schedule, @function
sha256_message_schedule:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 16 */
/* stack size = 22 */
.L__stack_usage = 22
	std Y+14,r25
	std Y+13,r24
	std Y+16,r23
	std Y+15,r22
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	rjmp .L2
.L3:
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r18,Y+13
	ldd r19,Y+14
	add r24,r18
	adc r25,r19
	ldd r18,Y+1
	ldd r19,Y+2
	lsl r18
	rol r19
	lsl r18
	rol r19
	ldd r20,Y+15
	ldd r21,Y+16
	add r18,r20
	adc r19,r21
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	movw r30,r18
	st Z,r24
	std Z+1,r25
	std Z+2,r26
	std Z+3,r27
	ldd r24,Y+1
	ldd r25,Y+2
	adiw r24,1
	std Y+2,r25
	std Y+1,r24
.L2:
	ldd r24,Y+1
	ldd r25,Y+2
	sbiw r24,16
	brlt .L3
	ldi r24,lo8(16)
	ldi r25,0
	std Y+4,r25
	std Y+3,r24
	rjmp .L4
.L5:
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,15
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r18,Y+15
	ldd r19,Y+16
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	movw r14,r24
	movw r16,r26
	set
	bld __zero_reg__,7-1
	1:
	lsr r17
	ror r16
	ror r15
	ror r14
	lsr __zero_reg__
	brne 1b
	movw r18,r24
	movw r20,r26
	mov r0,r17
	ldi r17,25
	1:
	lsl r18
	rol r19
	rol r20
	rol r21
	dec r17
	brne 1b
	mov r17,r0
	or r18,r14
	or r19,r15
	or r20,r16
	or r21,r17
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,15
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r22,Y+15
	ldd r23,Y+16
	add r24,r22
	adc r25,r23
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	movw r14,r24
	movw r16,r26
	mov r0,r29
	ldi r29,14
	1:
	lsl r14
	rol r15
	rol r16
	rol r17
	dec r29
	brne 1b
	mov r29,r0
	mov r0,r23
	ldi r23,18
	1:
	lsr r27
	ror r26
	ror r25
	ror r24
	dec r23
	brne 1b
	mov r23,r0
	or r24,r14
	or r25,r15
	or r26,r16
	or r27,r17
	eor r18,r24
	eor r19,r25
	eor r20,r26
	eor r21,r27
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,15
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r22,Y+15
	ldd r23,Y+16
	add r24,r22
	adc r25,r23
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	set
	bld __zero_reg__,3-1
	1:
	lsr r27
	ror r26
	ror r25
	ror r24
	lsr __zero_reg__
	brne 1b
	eor r24,r18
	eor r25,r19
	eor r26,r20
	eor r27,r21
	std Y+5,r24
	std Y+6,r25
	std Y+7,r26
	std Y+8,r27
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,2
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r18,Y+15
	ldd r19,Y+16
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	movw r14,r24
	movw r16,r26
	mov r0,r29
	ldi r29,15
	1:
	lsl r14
	rol r15
	rol r16
	rol r17
	dec r29
	brne 1b
	mov r29,r0
	movw r18,r24
	movw r20,r26
	mov r0,r17
	ldi r17,17
	1:
	lsr r21
	ror r20
	ror r19
	ror r18
	dec r17
	brne 1b
	mov r17,r0
	or r18,r14
	or r19,r15
	or r20,r16
	or r21,r17
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,2
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r22,Y+15
	ldd r23,Y+16
	add r24,r22
	adc r25,r23
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	movw r14,r24
	movw r16,r26
	mov r0,r29
	ldi r29,13
	1:
	lsl r14
	rol r15
	rol r16
	rol r17
	dec r29
	brne 1b
	mov r29,r0
	mov r0,r23
	ldi r23,19
	1:
	lsr r27
	ror r26
	ror r25
	ror r24
	dec r23
	brne 1b
	mov r23,r0
	or r24,r14
	or r25,r15
	or r26,r16
	or r27,r17
	eor r18,r24
	eor r19,r25
	eor r20,r26
	eor r21,r27
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,2
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r22,Y+15
	ldd r23,Y+16
	add r24,r22
	adc r25,r23
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	mov r0,r23
	ldi r23,10
	1:
	lsr r27
	ror r26
	ror r25
	ror r24
	dec r23
	brne 1b
	mov r23,r0
	eor r24,r18
	eor r25,r19
	eor r26,r20
	eor r27,r21
	std Y+9,r24
	std Y+10,r25
	std Y+11,r26
	std Y+12,r27
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,16
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r18,Y+15
	ldd r19,Y+16
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r20,Z+2
	ldd r21,Z+3
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r26,Y+7
	ldd r27,Y+8
	add r18,r24
	adc r19,r25
	adc r20,r26
	adc r21,r27
	ldd r24,Y+3
	ldd r25,Y+4
	subi r24,7
	sbci r25,-64
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r22,Y+15
	ldd r23,Y+16
	add r24,r22
	adc r25,r23
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	add r18,r24
	adc r19,r25
	adc r20,r26
	adc r21,r27
	ldd r24,Y+3
	ldd r25,Y+4
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r22,Y+15
	ldd r23,Y+16
	add r22,r24
	adc r23,r25
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r26,Y+11
	ldd r27,Y+12
	add r24,r18
	adc r25,r19
	adc r26,r20
	adc r27,r21
	movw r30,r22
	st Z,r24
	std Z+1,r25
	std Z+2,r26
	std Z+3,r27
	ldd r24,Y+3
	ldd r25,Y+4
	adiw r24,1
	std Y+4,r25
	std Y+3,r24
.L4:
	ldd r24,Y+3
	ldd r25,Y+4
	cpi r24,64
	cpc r25,__zero_reg__
	brge .+2
	rjmp .L5
	nop
/* epilogue start */
	adiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	sha256_message_schedule, .-sha256_message_schedule
	.ident	"GCC: (GNU) 7.3.0"
