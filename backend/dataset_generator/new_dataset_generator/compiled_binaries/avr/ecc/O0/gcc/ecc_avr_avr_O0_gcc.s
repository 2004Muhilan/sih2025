	.file	"ecc_avr.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	ecc_point_add_avr
	.type	ecc_point_add_avr, @function
ecc_point_add_avr:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,44
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 44 */
/* stack size = 62 */
.L__stack_usage = 62
	std Y+29,r18
	std Y+30,r19
	std Y+31,r20
	std Y+32,r21
	std Y+33,r22
	std Y+34,r23
	std Y+35,r24
	std Y+36,r25
	std Y+37,r10
	std Y+38,r11
	std Y+39,r12
	std Y+40,r13
	std Y+41,r14
	std Y+42,r15
	std Y+43,r16
	std Y+44,r17
	ldd r18,Y+37
	ldd r19,Y+38
	ldd r20,Y+39
	ldd r21,Y+40
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r26,Y+31
	ldd r27,Y+32
	cp r24,r18
	cpc r25,r19
	cpc r26,r20
	cpc r27,r21
	brlo .+2
	rjmp .L2
	ldd r18,Y+37
	ldd r19,Y+38
	ldd r20,Y+39
	ldd r21,Y+40
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r26,Y+31
	ldd r27,Y+32
	movw r14,r18
	movw r16,r20
	sub r14,r24
	sbc r15,r25
	sbc r16,r26
	sbc r17,r27
	movw r26,r16
	movw r24,r14
	std Y+1,r24
	std Y+2,r25
	std Y+3,r26
	std Y+4,r27
	ldd r18,Y+41
	ldd r19,Y+42
	ldd r20,Y+43
	ldd r21,Y+44
	ldd r24,Y+33
	ldd r25,Y+34
	ldd r26,Y+35
	ldd r27,Y+36
	movw r14,r18
	movw r16,r20
	sub r14,r24
	sbc r15,r25
	sbc r16,r26
	sbc r17,r27
	movw r26,r16
	movw r24,r14
	std Y+5,r24
	std Y+6,r25
	std Y+7,r26
	std Y+8,r27
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r26,Y+7
	ldd r27,Y+8
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	movw r22,r24
	movw r24,r26
	call __udivmodsi4
	movw r26,r20
	movw r24,r18
	adiw r28,65-60
	ldd r18,Y+60
	ldd r19,Y+61
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,65-60
	movw r22,r24
	movw r24,r26
	call __udivmodsi4
	movw r26,r24
	movw r24,r22
	std Y+9,r24
	std Y+10,r25
	std Y+11,r26
	std Y+12,r27
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r26,Y+11
	ldd r27,Y+12
	movw r22,r24
	movw r24,r26
	call __mulsi3
	movw r18,r22
	movw r20,r24
	ldd r24,Y+29
	ldd r25,Y+30
	ldd r26,Y+31
	ldd r27,Y+32
	sub r18,r24
	sbc r19,r25
	sbc r20,r26
	sbc r21,r27
	ldd r24,Y+37
	ldd r25,Y+38
	ldd r26,Y+39
	ldd r27,Y+40
	movw r14,r18
	movw r16,r20
	sub r14,r24
	sbc r15,r25
	sbc r16,r26
	sbc r17,r27
	movw r26,r16
	movw r24,r14
	adiw r28,65-60
	ldd r18,Y+60
	ldd r19,Y+61
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,65-60
	movw r22,r24
	movw r24,r26
	call __udivmodsi4
	movw r26,r24
	movw r24,r22
	std Y+21,r24
	std Y+22,r25
	std Y+23,r26
	std Y+24,r27
	ldd r18,Y+29
	ldd r19,Y+30
	ldd r20,Y+31
	ldd r21,Y+32
	ldd r24,Y+21
	ldd r25,Y+22
	ldd r26,Y+23
	ldd r27,Y+24
	sub r18,r24
	sbc r19,r25
	sbc r20,r26
	sbc r21,r27
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r26,Y+11
	ldd r27,Y+12
	movw r22,r24
	movw r24,r26
	call __mulsi3
	movw r18,r22
	movw r20,r24
	ldd r24,Y+33
	ldd r25,Y+34
	ldd r26,Y+35
	ldd r27,Y+36
	movw r14,r18
	movw r16,r20
	sub r14,r24
	sbc r15,r25
	sbc r16,r26
	sbc r17,r27
	movw r26,r16
	movw r24,r14
	adiw r28,65-60
	ldd r18,Y+60
	ldd r19,Y+61
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,65-60
	movw r22,r24
	movw r24,r26
	call __udivmodsi4
	movw r26,r24
	movw r24,r22
	std Y+25,r24
	std Y+26,r25
	std Y+27,r26
	std Y+28,r27
	rjmp .L3
.L2:
	ldi r24,lo8(8)
	movw r30,r28
	adiw r30,29
	movw r26,r28
	adiw r26,21
	0:
	ld r0,Z+
	st X+,r0
	dec r24
	brne 0b
.L3:
	ldi r24,lo8(8)
	movw r30,r28
	adiw r30,21
	movw r26,r28
	adiw r26,13
	0:
	ld r0,Z+
	st X+,r0
	dec r24
	brne 0b
	ldi r23,0
	ldd r23,Y+13
	ldi r22,0
	ldd r22,Y+14
	ldi r21,0
	ldd r21,Y+15
	ldi r20,0
	ldd r20,Y+16
	ldi r19,0
	ldd r19,Y+17
	ldi r18,0
	ldd r18,Y+18
	ldi r25,0
	ldd r25,Y+19
	ldi r24,0
	ldd r24,Y+20
	mov r2,r23
	mov r3,r22
	mov r4,r21
	mov r5,r20
	mov r6,r19
	mov r7,r18
	mov r8,r25
	mov r9,r24
	mov r10,r2
	mov r11,r3
	mov r12,r4
	mov r13,r5
	mov r14,r6
	mov r15,r7
	mov r16,r8
	mov r17,r9
	mov r18,r10
	mov r19,r11
	mov r20,r12
	mov r21,r13
	mov r22,r14
	mov r23,r15
	mov r24,r16
	mov r25,r17
/* epilogue start */
	adiw r28,44
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
	.size	ecc_point_add_avr, .-ecc_point_add_avr
.global	ecc_scalar_mult_avr
	.type	ecc_scalar_mult_avr, @function
ecc_scalar_mult_avr:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,34
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 34 */
/* stack size = 52 */
.L__stack_usage = 52
	std Y+25,r18
	std Y+26,r19
	std Y+27,r20
	std Y+28,r21
	std Y+29,r22
	std Y+30,r23
	std Y+31,r24
	std Y+32,r25
	std Y+34,r17
	std Y+33,r16
	std Y+9,__zero_reg__
	std Y+10,__zero_reg__
	std Y+11,__zero_reg__
	std Y+12,__zero_reg__
	std Y+13,__zero_reg__
	std Y+14,__zero_reg__
	std Y+15,__zero_reg__
	std Y+16,__zero_reg__
	ldi r24,lo8(8)
	movw r30,r28
	adiw r30,25
	movw r26,r28
	adiw r26,17
	0:
	ld r0,Z+
	st X+,r0
	dec r24
	brne 0b
	rjmp .L6
.L8:
	ldd r24,Y+33
	ldd r25,Y+34
	andi r24,1
	clr r25
	or r24,r25
	breq .L7
	push __zero_reg__
	push __zero_reg__
	ldi r24,lo8(-1)
	push r24
	ldi r24,lo8(-15)
	push r24
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	call ecc_point_add_avr
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	mov r18,r10
	mov r19,r11
	mov r20,r12
	mov r21,r13
	mov r22,r14
	mov r23,r15
	mov r24,r16
	mov r25,r17
	std Y+9,r18
	std Y+10,r19
	std Y+11,r20
	std Y+12,r21
	std Y+13,r22
	std Y+14,r23
	std Y+15,r24
	std Y+16,r25
.L7:
	push __zero_reg__
	push __zero_reg__
	ldi r24,lo8(-1)
	push r24
	ldi r24,lo8(-15)
	push r24
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
	call ecc_point_add_avr
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	mov r18,r10
	mov r19,r11
	mov r20,r12
	mov r21,r13
	mov r22,r14
	mov r23,r15
	mov r24,r16
	mov r25,r17
	std Y+17,r18
	std Y+18,r19
	std Y+19,r20
	std Y+20,r21
	std Y+21,r22
	std Y+22,r23
	std Y+23,r24
	std Y+24,r25
	ldd r24,Y+33
	ldd r25,Y+34
	lsr r25
	ror r24
	std Y+34,r25
	std Y+33,r24
.L6:
	ldd r24,Y+33
	ldd r25,Y+34
	or r24,r25
	breq .+2
	rjmp .L8
	ldi r18,lo8(8)
	movw r30,r28
	adiw r30,9
	movw r24,r28
	adiw r24,1
	movw r26,r24
	0:
	ld r0,Z+
	st X+,r0
	dec r18
	brne 0b
	ldi r23,0
	ldd r23,Y+1
	ldi r22,0
	ldd r22,Y+2
	ldi r21,0
	ldd r21,Y+3
	ldi r20,0
	ldd r20,Y+4
	ldi r19,0
	ldd r19,Y+5
	ldi r18,0
	ldd r18,Y+6
	ldi r25,0
	ldd r25,Y+7
	ldi r24,0
	ldd r24,Y+8
	mov r2,r23
	mov r3,r22
	mov r4,r21
	mov r5,r20
	mov r6,r19
	mov r7,r18
	mov r8,r25
	mov r9,r24
	mov r10,r2
	mov r11,r3
	mov r12,r4
	mov r13,r5
	mov r14,r6
	mov r15,r7
	mov r16,r8
	mov r17,r9
	mov r18,r10
	mov r19,r11
	mov r20,r12
	mov r21,r13
	mov r22,r14
	mov r23,r15
	mov r24,r16
	mov r25,r17
/* epilogue start */
	adiw r28,34
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
	.size	ecc_scalar_mult_avr, .-ecc_scalar_mult_avr
	.ident	"GCC: (GNU) 7.3.0"
