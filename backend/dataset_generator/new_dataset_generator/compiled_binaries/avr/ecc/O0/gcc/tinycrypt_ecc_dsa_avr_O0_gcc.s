	.file	"tinycrypt_ecc_dsa.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
	.section	.rodata
	.type	curve_secp256r1, @object
	.size	curve_secp256r1, 90
curve_secp256r1:
	.byte	8
	.byte	32
	.word	256
	.word	-1
	.word	-1
	.word	-1
	.word	0
	.word	0
	.word	0
	.word	1
	.word	-1
	.word	9553
	.word	-13630
	.word	-24956
	.word	-1363
	.word	-1
	.word	-1
	.word	0
	.word	-1
	.word	-15722
	.word	14661
	.word	13216
	.word	32129
	.word	16626
	.word	-6427
	.word	16967
	.word	-11790
	.word	20981
	.word	16488
	.word	24270
	.word	13143
	.word	-25066
	.word	-5302
	.word	32667
	.word	17122
	.word	24651
	.word	15422
	.word	-20234
	.word	1712
	.word	-31044
	.word	-17067
	.word	-27673
	.word	13784
	.word	gs(double_jacobian_default)
	.word	gs(x_side_default)
	.word	gs(vli_mmod_fast_secp256r1)
	.text
	.type	bits2int, @function
bits2int:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,20
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 20 */
/* stack size = 22 */
.L__stack_usage = 22
	std Y+14,r25
	std Y+13,r24
	std Y+16,r23
	std Y+15,r22
	std Y+18,r21
	std Y+17,r20
	std Y+20,r19
	std Y+19,r18
	ldd r24,Y+19
	ldd r25,Y+20
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,7
	tst r25
	brge .L2
	adiw r24,7
.L2:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+19
	ldd r25,Y+20
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,31
	tst r25
	brge .L3
	adiw r24,31
.L3:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	std Y+8,r25
	std Y+7,r24
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r24,Y+5
	ldd r25,Y+6
	cp r24,r18
	cpc r25,r19
	brsh .L4
	ldd r24,Y+5
	ldd r25,Y+6
	std Y+18,r25
	std Y+17,r24
.L4:
	ldd r18,Y+7
	ldd r24,Y+13
	ldd r25,Y+14
	mov r22,r18
	call uECC_vli_clear
	ldd r20,Y+17
	ldd r21,Y+18
	ldd r18,Y+15
	ldd r19,Y+16
	ldd r24,Y+13
	ldd r25,Y+14
	movw r22,r18
	call uECC_vli_bytesToNative
	ldd r24,Y+17
	ldd r25,Y+18
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r18,Y+19
	ldd r19,Y+20
	movw r30,r18
	ldd r18,Z+2
	ldd r19,Z+3
	cp r18,r24
	cpc r19,r25
	brlo .+2
	rjmp .L9
	ldd r24,Y+17
	ldd r25,Y+18
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	ldd r18,Y+19
	ldd r19,Y+20
	movw r30,r18
	ldd r18,Z+2
	ldd r19,Z+3
	sub r24,r18
	sbc r25,r19
	std Y+10,r25
	std Y+9,r24
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	ldd r24,Y+7
	ldd r25,Y+8
	lsl r24
	rol r25
	ldd r18,Y+13
	ldd r19,Y+14
	add r24,r18
	adc r25,r19
	std Y+4,r25
	std Y+3,r24
	rjmp .L7
.L8:
	ldd r24,Y+3
	ldd r25,Y+4
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+11
	ldd r25,Y+12
	movw r18,r24
	ldd r0,Y+9
	rjmp 2f
	1:
	lsr r19
	ror r18
	2:
	dec r0
	brpl 1b
	ldd r24,Y+1
	ldd r25,Y+2
	or r18,r24
	or r19,r25
	ldd r24,Y+3
	ldd r25,Y+4
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldi r18,lo8(32)
	ldi r19,0
	ldd r24,Y+9
	ldd r25,Y+10
	sub r18,r24
	sbc r19,r25
	ldd r24,Y+11
	ldd r25,Y+12
	rjmp 2f
	1:
	lsl r24
	rol r25
	2:
	dec r18
	brpl 1b
	std Y+2,r25
	std Y+1,r24
.L7:
	ldd r24,Y+3
	ldd r25,Y+4
	movw r18,r24
	subi r18,2
	sbc r19,__zero_reg__
	std Y+4,r19
	std Y+3,r18
	ldd r18,Y+13
	ldd r19,Y+14
	cp r18,r24
	cpc r19,r25
	brlo .L8
	ldd r20,Y+7
	ldd r24,Y+19
	ldd r25,Y+20
	adiw r24,20
	ldd r18,Y+13
	ldd r19,Y+14
	movw r22,r18
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	breq .L1
	ldd r18,Y+7
	ldd r24,Y+19
	ldd r25,Y+20
	movw r20,r24
	subi r20,-20
	sbci r21,-1
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+13
	ldd r25,Y+14
	call uECC_vli_sub
	rjmp .L1
.L9:
	nop
.L1:
/* epilogue start */
	adiw r28,20
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	bits2int, .-bits2int
.global	uECC_sign_with_k
	.type	uECC_sign_with_k, @function
uECC_sign_with_k:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,86
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 86 */
/* stack size = 92 */
.L__stack_usage = 92
	movw r30,r28
	subi r30,-75
	sbci r31,-1
	std Z+1,r25
	st Z,r24
	movw r24,r28
	subi r24,-77
	sbci r25,-1
	movw r26,r24
	st X+,r22
	st X,r23
	movw r24,r28
	subi r24,-79
	sbci r25,-1
	movw r30,r24
	std Z+1,r21
	st Z,r20
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r26,r24
	st X+,r18
	st X,r19
	movw r24,r28
	subi r24,-83
	sbci r25,-1
	movw r30,r24
	std Z+1,r17
	st Z,r16
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	st X+,r14
	st X,r15
	movw r24,r28
	adiw r24,7
	std Y+40,r25
	std Y+39,r24
	movw r24,r28
	adiw r24,23
	std Y+42,r25
	std Y+41,r24
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	ld r24,X
	std Y+1,r24
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,2
	ld r24,X+
	ld r25,X
	adiw r24,31
	tst r25
	brge .L11
	adiw r24,31
.L11:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	std Y+2,r24
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,2
	ld r24,X+
	ld r25,X
	std Y+4,r25
	std Y+3,r24
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r22,Y+1
	call uECC_vli_isZero
	or r24,r25
	brne .L12
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r20,Y+2
	movw r22,r24
	movw r24,r18
	call uECC_vli_cmp
	cpi r24,lo8(1)
	breq .L13
.L12:
	ldi r24,0
	ldi r25,0
	rjmp .L21
.L13:
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r18,X+
	ld r19,X
	movw r20,r28
	subi r20,-23
	sbci r21,-1
	movw r22,r28
	subi r22,-7
	sbci r23,-1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	call regularize_k
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+3
	ldd r25,Y+4
	movw r30,r24
	adiw r30,1
	ldi r18,lo8(1)
	ldd r24,Y+5
	ldd r25,Y+6
	or r24,r25
	breq .L15
	ldi r18,0
.L15:
	mov r24,r18
	ldi r25,0
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,38
	movw r26,r24
	ld r20,X+
	ld r21,X
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r22,r24
	subi r22,-36
	sbci r23,-1
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r18,X+
	ld r19,X
	movw r24,r28
	adiw r24,43
	movw r14,r18
	movw r16,r30
	ldi r18,0
	ldi r19,0
	call EccPoint_mult
	movw r24,r28
	adiw r24,43
	ldd r22,Y+1
	call uECC_vli_isZero
	or r24,r25
	breq .L16
	ldi r24,0
	ldi r25,0
	rjmp .L21
.L16:
	call uECC_get_rng
	or r24,r25
	brne .L17
	movw r24,r28
	adiw r24,7
	ldd r22,Y+2
	call uECC_vli_clear
	ldi r24,lo8(1)
	ldi r25,0
	std Y+8,r25
	std Y+7,r24
	rjmp .L18
.L17:
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r24,r28
	adiw r24,7
	ldd r20,Y+2
	movw r22,r18
	call uECC_generate_random_int
	or r24,r25
	brne .L18
	ldi r24,0
	ldi r25,0
	rjmp .L21
.L18:
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r20,r28
	subi r20,-7
	sbci r21,-1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r30,r24
	ld r22,Z
	ldd r23,Z+1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	ldd r16,Y+2
	call uECC_vli_modMult
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r20,r24
	subi r20,-20
	sbci r21,-1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r26,r24
	ld r22,X+
	ld r23,X
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r18,Y+2
	call uECC_vli_modInv
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r20,r28
	subi r20,-7
	sbci r21,-1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r30,r24
	ld r22,Z
	ldd r23,Z+1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	ldd r16,Y+2
	call uECC_vli_modMult
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,1
	ld r24,X
	mov r18,r24
	lsl r24
	sbc r19,r19
	movw r20,r28
	subi r20,-43
	sbci r21,-1
	movw r24,r28
	subi r24,-83
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r22,r18
	call uECC_vli_nativeToBytes
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,7
	tst r25
	brge .L19
	adiw r24,7
.L19:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	movw r20,r24
	movw r24,r28
	subi r24,-75
	sbci r25,-1
	movw r26,r24
	ld r18,X+
	ld r19,X
	movw r24,r28
	adiw r24,7
	movw r22,r18
	call uECC_vli_bytesToNative
	ldd r24,Y+2
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,22
	movw r30,r24
	std Z+1,__zero_reg__
	st Z,__zero_reg__
	movw r18,r28
	subi r18,-43
	sbci r19,-1
	movw r24,r28
	adiw r24,23
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r20,r28
	subi r20,-23
	sbci r21,-1
	movw r22,r28
	subi r22,-7
	sbci r23,-1
	movw r24,r28
	adiw r24,23
	ldd r16,Y+2
	call uECC_vli_modMult
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r24,r28
	subi r24,-79
	sbci r25,-1
	movw r26,r24
	ld r20,X+
	ld r21,X
	movw r24,r28
	subi r24,-77
	sbci r25,-1
	movw r30,r24
	ld r22,Z
	ldd r23,Z+1
	movw r24,r28
	adiw r24,7
	call bits2int
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r20,r28
	subi r20,-23
	sbci r21,-1
	movw r22,r28
	subi r22,-7
	sbci r23,-1
	movw r24,r28
	adiw r24,23
	ldd r16,Y+2
	call uECC_vli_modAdd
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r24,r28
	subi r24,-81
	sbci r25,-1
	movw r26,r24
	ld r20,X+
	ld r21,X
	movw r22,r28
	subi r22,-23
	sbci r23,-1
	movw r24,r28
	adiw r24,23
	ldd r16,Y+2
	call uECC_vli_modMult
	movw r24,r28
	adiw r24,23
	ldd r22,Y+2
	call uECC_vli_numBits
	movw r18,r24
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,1
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	cp r24,r18
	cpc r25,r19
	brge .L20
	ldi r24,0
	ldi r25,0
	rjmp .L21
.L20:
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,1
	ld r24,X
	mov r22,r24
	lsl r24
	sbc r23,r23
	movw r24,r28
	subi r24,-85
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,1
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r18,r28
	subi r18,-83
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	add r24,r18
	adc r25,r19
	movw r18,r28
	subi r18,-23
	sbci r19,-1
	movw r20,r18
	call uECC_vli_nativeToBytes
	ldi r24,lo8(1)
	ldi r25,0
.L21:
/* epilogue start */
	subi r28,-86
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	uECC_sign_with_k, .-uECC_sign_with_k
.global	uECC_sign
	.type	uECC_sign, @function
uECC_sign:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,62
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 62 */
/* stack size = 68 */
.L__stack_usage = 68
	std Y+54,r25
	std Y+53,r24
	std Y+56,r23
	std Y+55,r22
	std Y+58,r21
	std Y+57,r20
	std Y+60,r19
	std Y+59,r18
	std Y+62,r17
	std Y+61,r16
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	rjmp .L23
.L29:
	call uECC_get_rng
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+3
	ldd r25,Y+4
	or r24,r25
	breq .L24
	movw r24,r28
	adiw r24,5
	ldd r18,Y+3
	ldd r19,Y+4
	ldi r22,lo8(64)
	ldi r23,0
	movw r30,r18
	icall
	or r24,r25
	brne .L25
.L24:
	ldi r24,0
	ldi r25,0
	rjmp .L30
.L25:
	ldd r24,Y+61
	ldd r25,Y+62
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,31
	tst r25
	brge .L27
	adiw r24,31
.L27:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	mov r18,r24
	ldd r24,Y+61
	ldd r25,Y+62
	movw r20,r24
	subi r20,-20
	sbci r21,-1
	movw r22,r28
	subi r22,-5
	sbci r23,-1
	movw r24,r28
	adiw r24,37
	call uECC_vli_mmod
	ldd r26,Y+61
	ldd r27,Y+62
	ldd r30,Y+59
	ldd r31,Y+60
	movw r18,r28
	subi r18,-37
	sbci r19,-1
	ldd r20,Y+57
	ldd r21,Y+58
	ldd r22,Y+55
	ldd r23,Y+56
	ldd r24,Y+53
	ldd r25,Y+54
	movw r14,r26
	movw r16,r30
	call uECC_sign_with_k
	or r24,r25
	breq .L28
	ldi r24,lo8(1)
	ldi r25,0
	rjmp .L30
.L28:
	ldd r24,Y+1
	ldd r25,Y+2
	adiw r24,1
	std Y+2,r25
	std Y+1,r24
.L23:
	ldd r24,Y+1
	ldd r25,Y+2
	cpi r24,64
	cpc r25,__zero_reg__
	brsh .+2
	rjmp .L29
	ldi r24,0
	ldi r25,0
.L30:
/* epilogue start */
	adiw r28,62
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	uECC_sign, .-uECC_sign
	.type	smax, @function
smax:
	push r28
	push r29
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 4 */
/* stack size = 6 */
.L__stack_usage = 6
	std Y+2,r25
	std Y+1,r24
	std Y+4,r23
	std Y+3,r22
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	cp r24,r18
	cpc r25,r19
	brge .L33
	movw r24,r18
.L33:
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	smax, .-smax
.global	uECC_verify
	.type	uECC_verify, @function
uECC_verify:
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,-4
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 252 */
/* stack size = 256 */
.L__stack_usage = 256
	movw r30,r28
	subi r30,13
	sbci r31,-1
	std Z+1,r25
	st Z,r24
	movw r24,r28
	subi r24,11
	sbci r25,-1
	movw r26,r24
	st X+,r22
	st X,r23
	movw r24,r28
	subi r24,9
	sbci r25,-1
	movw r30,r24
	std Z+1,r21
	st Z,r20
	movw r24,r28
	subi r24,7
	sbci r25,-1
	movw r26,r24
	st X+,r18
	st X,r19
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	std Z+1,r17
	st Z,r16
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r30,r24
	ld r24,Z
	std Y+3,r24
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,31
	tst r25
	brge .L35
	adiw r24,31
.L35:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	std Y+4,r24
	ldd r24,Y+4
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	movw r18,r28
	subi r18,-91
	sbci r19,-1
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	st X+,__zero_reg__
	st X,__zero_reg__
	ldd r24,Y+4
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	movw r18,r28
	subi r18,45
	sbci r19,-1
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r30,r24
	std Z+1,__zero_reg__
	st Z,__zero_reg__
	ldd r24,Y+4
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	movw r18,r28
	subi r18,29
	sbci r19,-1
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	st X+,__zero_reg__
	st X,__zero_reg__
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,1
	ld r24,X
	mov r20,r24
	lsl r24
	sbc r21,r21
	movw r24,r28
	subi r24,13
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r24,r28
	subi r24,77
	sbci r25,-1
	movw r22,r18
	call uECC_vli_bytesToNative
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r30,r24
	ldd r24,Z+1
	mov r20,r24
	lsl r24
	sbc r21,r21
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r30,r24
	ldd r24,Z+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r18,r28
	subi r18,13
	sbci r19,-1
	movw r26,r18
	ld r18,X+
	ld r19,X
	movw r22,r18
	add r22,r24
	adc r23,r25
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,77
	sbci r19,-1
	add r24,r18
	adc r25,r19
	call uECC_vli_bytesToNative
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r26,r24
	adiw r26,1
	ld r24,X
	mov r20,r24
	lsl r24
	sbc r21,r21
	movw r24,r28
	subi r24,7
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r24,r28
	subi r24,45
	sbci r25,-1
	movw r22,r18
	call uECC_vli_bytesToNative
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r30,r24
	ldd r24,Z+1
	mov r20,r24
	lsl r24
	sbc r21,r21
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r30,r24
	ldd r24,Z+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r18,r28
	subi r18,7
	sbci r19,-1
	movw r26,r18
	ld r18,X+
	ld r19,X
	add r18,r24
	adc r19,r25
	movw r24,r28
	subi r24,29
	sbci r25,-1
	movw r22,r18
	call uECC_vli_bytesToNative
	movw r24,r28
	subi r24,45
	sbci r25,-1
	ldd r22,Y+3
	call uECC_vli_isZero
	or r24,r25
	brne .L36
	movw r24,r28
	subi r24,29
	sbci r25,-1
	ldd r22,Y+3
	call uECC_vli_isZero
	or r24,r25
	breq .L37
.L36:
	ldi r24,0
	ldi r25,0
	rjmp .L52
.L37:
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	adiw r24,20
	movw r18,r28
	subi r18,45
	sbci r19,-1
	ldd r20,Y+4
	movw r22,r18
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	brne .L39
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	adiw r24,20
	movw r18,r28
	subi r18,29
	sbci r19,-1
	ldd r20,Y+4
	movw r22,r18
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	breq .L40
.L39:
	ldi r24,0
	ldi r25,0
	rjmp .L52
.L40:
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r20,r24
	subi r20,-20
	sbci r21,-1
	movw r22,r28
	subi r22,29
	sbci r23,-1
	movw r24,r28
	adiw r24,43
	ldd r18,Y+4
	call uECC_vli_modInv
	ldd r24,Y+4
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,10
	movw r26,r24
	st X+,__zero_reg__
	st X,__zero_reg__
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r24,r28
	subi r24,9
	sbci r25,-1
	movw r26,r24
	ld r20,X+
	ld r21,X
	movw r24,r28
	subi r24,11
	sbci r25,-1
	movw r30,r24
	ld r22,Z
	ldd r23,Z+1
	movw r24,r28
	adiw r24,11
	call bits2int
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r20,r28
	subi r20,-43
	sbci r21,-1
	movw r22,r28
	subi r22,-11
	sbci r23,-1
	movw r24,r28
	adiw r24,11
	ldd r16,Y+4
	call uECC_vli_modMult
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r18,r24
	subi r18,-20
	sbci r19,-1
	movw r20,r28
	subi r20,-43
	sbci r21,-1
	movw r22,r28
	subi r22,45
	sbci r23,-1
	movw r24,r28
	adiw r24,27
	ldd r16,Y+4
	call uECC_vli_modMult
	movw r18,r28
	subi r18,77
	sbci r19,-1
	movw r24,r28
	adiw r24,59
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,77
	sbci r19,-1
	movw r22,r18
	add r22,r24
	adc r23,r25
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-59
	sbci r19,-1
	add r24,r18
	adc r25,r19
	ldd r20,Y+3
	call uECC_vli_set
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-36
	sbci r19,-1
	movw r24,r28
	subi r24,-123
	sbci r25,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r18,r24
	subi r18,-36
	sbci r19,-1
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	add r18,r24
	adc r19,r25
	movw r24,r28
	subi r24,117
	sbci r25,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-123
	sbci r21,-1
	movw r22,r28
	subi r22,-59
	sbci r23,-1
	movw r24,r28
	adiw r24,43
	ldd r16,Y+3
	call uECC_vli_modSub
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-59
	sbci r19,-1
	add r18,r24
	adc r19,r25
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r30,X+
	ld r31,X
	movw r20,r28
	subi r20,-59
	sbci r21,-1
	movw r22,r28
	subi r22,117
	sbci r23,-1
	movw r24,r28
	subi r24,-123
	sbci r25,-1
	movw r16,r30
	call XYcZ_add
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r20,r24
	subi r20,-4
	sbci r21,-1
	movw r22,r28
	subi r22,-43
	sbci r23,-1
	movw r24,r28
	adiw r24,43
	ldd r18,Y+3
	call uECC_vli_modInv
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-59
	sbci r19,-1
	movw r22,r18
	add r22,r24
	adc r23,r25
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r18,X+
	ld r19,X
	movw r20,r28
	subi r20,-43
	sbci r21,-1
	movw r24,r28
	adiw r24,59
	call apply_z
	movw r24,r28
	subi r24,85
	sbci r25,-1
	movw r30,r24
	std Z+1,__zero_reg__
	st Z,__zero_reg__
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r18,r24
	subi r18,-36
	sbci r19,-1
	movw r24,r28
	subi r24,85
	sbci r25,-1
	movw r30,r24
	std Z+3,r19
	std Z+2,r18
	movw r24,r28
	subi r24,85
	sbci r25,-1
	movw r18,r28
	subi r18,77
	sbci r19,-1
	movw r26,r24
	adiw r26,4+1
	st X,r19
	st -X,r18
	sbiw r26,4
	movw r24,r28
	subi r24,85
	sbci r25,-1
	movw r18,r28
	subi r18,-59
	sbci r19,-1
	movw r30,r24
	std Z+7,r19
	std Z+6,r18
	movw r24,r28
	adiw r24,27
	ldd r22,Y+4
	call uECC_vli_numBits
	movw r16,r24
	movw r24,r28
	adiw r24,11
	ldd r22,Y+4
	call uECC_vli_numBits
	movw r22,r16
	call smax
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+5
	ldd r25,Y+6
	movw r18,r24
	subi r18,1
	sbc r19,__zero_reg__
	movw r24,r28
	adiw r24,11
	movw r22,r18
	call uECC_vli_testBit
	ldi r18,lo8(1)
	or r24,r25
	brne .L41
	ldi r18,0
.L41:
	mov r16,r18
	ldi r17,0
	ldd r24,Y+5
	ldd r25,Y+6
	movw r18,r24
	subi r18,1
	sbc r19,__zero_reg__
	movw r24,r28
	adiw r24,27
	movw r22,r18
	call uECC_vli_testBit
	or r24,r25
	breq .L42
	ldi r24,lo8(2)
	ldi r25,0
	rjmp .L43
.L42:
	ldi r24,0
	ldi r25,0
.L43:
	or r24,r16
	or r25,r17
	movw r18,r28
	subi r18,85
	sbci r19,-1
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r24,X+
	ld r25,X
	std Y+8,r25
	std Y+7,r24
	ldd r18,Y+7
	ldd r19,Y+8
	movw r24,r28
	subi r24,-91
	sbci r25,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+7
	ldd r19,Y+8
	add r18,r24
	adc r19,r25
	movw r24,r28
	subi r24,-107
	sbci r25,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	movw r24,r28
	adiw r24,43
	ldd r22,Y+3
	call uECC_vli_clear
	ldi r24,lo8(1)
	ldi r25,0
	std Y+44,r25
	std Y+43,r24
	ldd r24,Y+5
	ldd r25,Y+6
	sbiw r24,2
	std Y+2,r25
	std Y+1,r24
	rjmp .L44
.L49:
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	subi r24,-84
	sbci r25,-1
	movw r26,r24
	ld r30,X+
	ld r31,X
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r18,X+
	ld r19,X
	movw r20,r28
	subi r20,-43
	sbci r21,-1
	movw r22,r28
	subi r22,-107
	sbci r23,-1
	movw r24,r28
	subi r24,-91
	sbci r25,-1
	icall
	ldd r18,Y+1
	ldd r19,Y+2
	movw r24,r28
	adiw r24,11
	movw r22,r18
	call uECC_vli_testBit
	ldi r18,lo8(1)
	or r24,r25
	brne .L45
	ldi r18,0
.L45:
	mov r16,r18
	ldi r17,0
	ldd r18,Y+1
	ldd r19,Y+2
	movw r24,r28
	adiw r24,27
	movw r22,r18
	call uECC_vli_testBit
	or r24,r25
	breq .L46
	ldi r24,lo8(2)
	ldi r25,0
	rjmp .L47
.L46:
	ldi r24,0
	ldi r25,0
.L47:
	or r24,r16
	or r25,r17
	std Y+10,r25
	std Y+9,r24
	movw r18,r28
	subi r18,85
	sbci r19,-1
	ldd r24,Y+9
	ldd r25,Y+10
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	std Y+8,r25
	std Y+7,r24
	ldd r24,Y+7
	ldd r25,Y+8
	or r24,r25
	brne .+2
	rjmp .L48
	ldd r18,Y+7
	ldd r19,Y+8
	movw r24,r28
	subi r24,-123
	sbci r25,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+7
	ldd r19,Y+8
	add r18,r24
	adc r19,r25
	movw r24,r28
	subi r24,117
	sbci r25,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r18,X+
	ld r19,X
	movw r20,r28
	subi r20,-43
	sbci r21,-1
	movw r22,r28
	subi r22,117
	sbci r23,-1
	movw r24,r28
	subi r24,-123
	sbci r25,-1
	call apply_z
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-123
	sbci r21,-1
	movw r22,r28
	subi r22,-91
	sbci r23,-1
	movw r24,r28
	subi r24,101
	sbci r25,-1
	ldd r16,Y+3
	call uECC_vli_modSub
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r30,X+
	ld r31,X
	movw r18,r28
	subi r18,-107
	sbci r19,-1
	movw r20,r28
	subi r20,-91
	sbci r21,-1
	movw r22,r28
	subi r22,117
	sbci r23,-1
	movw r24,r28
	subi r24,-123
	sbci r25,-1
	movw r16,r30
	call XYcZ_add
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r20,r28
	subi r20,101
	sbci r21,-1
	movw r22,r28
	subi r22,-43
	sbci r23,-1
	movw r24,r28
	adiw r24,43
	call uECC_vli_modMult_fast
.L48:
	ldd r24,Y+1
	ldd r25,Y+2
	sbiw r24,1
	std Y+2,r25
	std Y+1,r24
.L44:
	ldd r24,Y+1
	ldd r25,Y+2
	tst r25
	brlt .+2
	rjmp .L49
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r20,r24
	subi r20,-4
	sbci r21,-1
	movw r22,r28
	subi r22,-43
	sbci r23,-1
	movw r24,r28
	adiw r24,43
	ldd r18,Y+3
	call uECC_vli_modInv
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r20,r28
	subi r20,-43
	sbci r21,-1
	movw r22,r28
	subi r22,-107
	sbci r23,-1
	movw r24,r28
	subi r24,-91
	sbci r25,-1
	call apply_z
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r26,r24
	ld r24,X+
	ld r25,X
	adiw r24,20
	movw r18,r28
	subi r18,-91
	sbci r19,-1
	ldd r20,Y+4
	movw r22,r18
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	breq .L50
	movw r24,r28
	subi r24,5
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r20,r24
	subi r20,-20
	sbci r21,-1
	movw r22,r28
	subi r22,-91
	sbci r23,-1
	movw r24,r28
	subi r24,-91
	sbci r25,-1
	ldd r18,Y+4
	call uECC_vli_sub
.L50:
	movw r18,r28
	subi r18,45
	sbci r19,-1
	movw r24,r28
	subi r24,-91
	sbci r25,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_equal
	ldi r18,lo8(1)
	or r24,r25
	breq .L51
	ldi r18,0
.L51:
	mov r24,r18
	ldi r25,0
.L52:
/* epilogue start */
	subi r28,4
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	ret
	.size	uECC_verify, .-uECC_verify
	.ident	"GCC: (GNU) 7.3.0"
.global __do_copy_data
