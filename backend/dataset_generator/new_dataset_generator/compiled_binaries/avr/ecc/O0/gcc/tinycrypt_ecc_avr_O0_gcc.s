	.file	"tinycrypt_ecc.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
	.section	.rodata
	.type	curve_secp256r1, @object
	.size	curve_secp256r1, 90
curve_secp256r1:
	.byte	8
	.byte	32
	.word	256
	.word	-1
	.word	-1
	.word	-1
	.word	0
	.word	0
	.word	0
	.word	1
	.word	-1
	.word	9553
	.word	-13630
	.word	-24956
	.word	-1363
	.word	-1
	.word	-1
	.word	0
	.word	-1
	.word	-15722
	.word	14661
	.word	13216
	.word	32129
	.word	16626
	.word	-6427
	.word	16967
	.word	-11790
	.word	20981
	.word	16488
	.word	24270
	.word	13143
	.word	-25066
	.word	-5302
	.word	32667
	.word	17122
	.word	24651
	.word	15422
	.word	-20234
	.word	1712
	.word	-31044
	.word	-17067
	.word	-27673
	.word	13784
	.word	gs(double_jacobian_default)
	.word	gs(x_side_default)
	.word	gs(vli_mmod_fast_secp256r1)
	.data
	.type	g_rng_function, @object
	.size	g_rng_function, 2
g_rng_function:
	.word	gs(default_CSPRNG)
	.text
.global	uECC_set_rng
	.type	uECC_set_rng, @function
uECC_set_rng:
	push r28
	push r29
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 2 */
/* stack size = 4 */
.L__stack_usage = 4
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+1
	ldd r25,Y+2
	sts g_rng_function+1,r25
	sts g_rng_function,r24
	nop
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	uECC_set_rng, .-uECC_set_rng
.global	uECC_get_rng
	.type	uECC_get_rng, @function
uECC_get_rng:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 0 */
/* stack size = 2 */
.L__stack_usage = 2
	lds r24,g_rng_function
	lds r25,g_rng_function+1
/* epilogue start */
	pop r29
	pop r28
	ret
	.size	uECC_get_rng, .-uECC_get_rng
.global	uECC_curve_private_key_size
	.type	uECC_curve_private_key_size, @function
uECC_curve_private_key_size:
	push r28
	push r29
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 2 */
/* stack size = 4 */
.L__stack_usage = 4
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+1
	ldd r25,Y+2
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,7
	tst r25
	brge .L5
	adiw r24,7
.L5:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	uECC_curve_private_key_size, .-uECC_curve_private_key_size
.global	uECC_curve_public_key_size
	.type	uECC_curve_public_key_size, @function
uECC_curve_public_key_size:
	push r28
	push r29
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 2 */
/* stack size = 4 */
.L__stack_usage = 4
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+1
	ldd r25,Y+2
	movw r30,r24
	ldd r24,Z+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	uECC_curve_public_key_size, .-uECC_curve_public_key_size
.global	uECC_vli_clear
	.type	uECC_vli_clear, @function
uECC_vli_clear:
	push r28
	push r29
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 4 */
/* stack size = 6 */
.L__stack_usage = 6
	std Y+3,r25
	std Y+2,r24
	std Y+4,r22
	std Y+1,__zero_reg__
	rjmp .L10
.L11:
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+2
	ldd r19,Y+3
	add r24,r18
	adc r25,r19
	movw r30,r24
	std Z+1,__zero_reg__
	st Z,__zero_reg__
	ldd r24,Y+1
	subi r24,lo8(-(1))
	std Y+1,r24
.L10:
	ldd r25,Y+1
	ldd r24,Y+4
	cp r25,r24
	brlt .L11
	nop
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	uECC_vli_clear, .-uECC_vli_clear
.global	uECC_vli_isZero
	.type	uECC_vli_isZero, @function
uECC_vli_isZero:
	push r28
	push r29
	rcall .
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 6 */
/* stack size = 8 */
.L__stack_usage = 8
	std Y+5,r25
	std Y+4,r24
	std Y+6,r22
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	std Y+3,__zero_reg__
	rjmp .L13
.L14:
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+4
	ldd r19,Y+5
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r18,Y+1
	ldd r19,Y+2
	or r24,r18
	or r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+3
	subi r24,lo8(-(1))
	std Y+3,r24
.L13:
	ldd r25,Y+3
	ldd r24,Y+6
	cp r25,r24
	brlt .L14
	ldi r18,lo8(1)
	ldd r24,Y+1
	ldd r25,Y+2
	or r24,r25
	breq .L15
	ldi r18,0
.L15:
	mov r24,r18
	ldi r25,0
/* epilogue start */
	adiw r28,6
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_isZero, .-uECC_vli_isZero
.global	uECC_vli_testBit
	.type	uECC_vli_testBit, @function
uECC_vli_testBit:
	push r28
	push r29
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 4 */
/* stack size = 6 */
.L__stack_usage = 6
	std Y+2,r25
	std Y+1,r24
	std Y+4,r23
	std Y+3,r22
	ldd r24,Y+3
	ldd r25,Y+4
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	lsl r24
	rol r25
	ldd r18,Y+1
	ldd r19,Y+2
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+3
	ldd r25,Y+4
	movw r20,r24
	andi r20,31
	clr r21
	ldi r24,lo8(1)
	ldi r25,0
	rjmp 2f
	1:
	lsl r24
	rol r25
	2:
	dec r20
	brpl 1b
	and r24,r18
	and r25,r19
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	uECC_vli_testBit, .-uECC_vli_testBit
	.type	vli_numDigits, @function
vli_numDigits:
	push r28
	push r29
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 4 */
/* stack size = 6 */
.L__stack_usage = 6
	std Y+3,r25
	std Y+2,r24
	std Y+4,r22
	ldd r24,Y+4
	subi r24,lo8(-(-1))
	std Y+1,r24
	rjmp .L20
.L22:
	ldd r24,Y+1
	subi r24,lo8(-(-1))
	std Y+1,r24
.L20:
	ldd r24,Y+1
	tst r24
	brlt .L21
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+2
	ldd r19,Y+3
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	or r24,r25
	breq .L22
.L21:
	ldd r24,Y+1
	subi r24,lo8(-(1))
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	vli_numDigits, .-vli_numDigits
.global	uECC_vli_numBits
	.type	uECC_vli_numBits, @function
uECC_vli_numBits:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,8
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 8 */
/* stack size = 10 */
.L__stack_usage = 10
	std Y+7,r25
	std Y+6,r24
	std Y+8,r22
	ldd r24,Y+6
	ldd r25,Y+7
	ldd r22,Y+8
	call vli_numDigits
	std Y+5,r24
	ldd r24,Y+5
	tst r24
	brne .L25
	ldi r24,0
	ldi r25,0
	rjmp .L26
.L25:
	ldd r24,Y+5
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	subi r24,1
	sbci r25,-128
	lsl r24
	rol r25
	ldd r18,Y+6
	ldd r19,Y+7
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	std Y+4,r25
	std Y+3,r24
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	rjmp .L27
.L28:
	ldd r24,Y+3
	ldd r25,Y+4
	lsr r25
	ror r24
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+1
	ldd r25,Y+2
	adiw r24,1
	std Y+2,r25
	std Y+1,r24
.L27:
	ldd r24,Y+3
	ldd r25,Y+4
	or r24,r25
	brne .L28
	ldd r24,Y+5
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	lsl r24
	rol r25
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
.L26:
/* epilogue start */
	adiw r28,8
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_numBits, .-uECC_vli_numBits
.global	uECC_vli_set
	.type	uECC_vli_set, @function
uECC_vli_set:
	push r28
	push r29
	rcall .
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 6 */
/* stack size = 8 */
.L__stack_usage = 8
	std Y+3,r25
	std Y+2,r24
	std Y+5,r23
	std Y+4,r22
	std Y+6,r20
	std Y+1,__zero_reg__
	rjmp .L30
.L31:
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+4
	ldd r19,Y+5
	add r18,r24
	adc r19,r25
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r20,Y+2
	ldd r21,Y+3
	add r24,r20
	adc r25,r21
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+1
	subi r24,lo8(-(1))
	std Y+1,r24
.L30:
	ldd r25,Y+1
	ldd r24,Y+6
	cp r25,r24
	brlt .L31
	nop
/* epilogue start */
	adiw r28,6
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_set, .-uECC_vli_set
.global	uECC_vli_cmp_unsafe
	.type	uECC_vli_cmp_unsafe, @function
uECC_vli_cmp_unsafe:
	push r28
	push r29
	rcall .
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 6 */
/* stack size = 8 */
.L__stack_usage = 8
	std Y+3,r25
	std Y+2,r24
	std Y+5,r23
	std Y+4,r22
	std Y+6,r20
	ldd r24,Y+6
	subi r24,lo8(-(-1))
	std Y+1,r24
	rjmp .L33
.L37:
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+2
	ldd r19,Y+3
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r20,Y+4
	ldd r21,Y+5
	add r24,r20
	adc r25,r21
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	cp r24,r18
	cpc r25,r19
	brsh .L34
	ldi r24,lo8(1)
	rjmp .L35
.L34:
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+2
	ldd r19,Y+3
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r20,Y+4
	ldd r21,Y+5
	add r24,r20
	adc r25,r21
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	cp r18,r24
	cpc r19,r25
	brsh .L36
	ldi r24,lo8(-1)
	rjmp .L35
.L36:
	ldd r24,Y+1
	subi r24,lo8(-(-1))
	std Y+1,r24
.L33:
	ldd r24,Y+1
	tst r24
	brlt .+2
	rjmp .L37
	ldi r24,0
.L35:
/* epilogue start */
	adiw r28,6
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_cmp_unsafe, .-uECC_vli_cmp_unsafe
.global	uECC_vli_equal
	.type	uECC_vli_equal, @function
uECC_vli_equal:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,8
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 8 */
/* stack size = 10 */
.L__stack_usage = 10
	std Y+5,r25
	std Y+4,r24
	std Y+7,r23
	std Y+6,r22
	std Y+8,r20
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	ldd r24,Y+8
	subi r24,lo8(-(-1))
	std Y+3,r24
	rjmp .L39
.L40:
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+4
	ldd r19,Y+5
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r20,Y+6
	ldd r21,Y+7
	add r24,r20
	adc r25,r21
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	eor r24,r18
	eor r25,r19
	ldd r18,Y+1
	ldd r19,Y+2
	or r24,r18
	or r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+3
	subi r24,lo8(-(-1))
	std Y+3,r24
.L39:
	ldd r24,Y+3
	tst r24
	brge .L40
	ldi r18,lo8(1)
	ldd r24,Y+1
	ldd r25,Y+2
	or r24,r25
	brne .L41
	ldi r18,0
.L41:
	mov r24,r18
	ldi r25,0
/* epilogue start */
	adiw r28,8
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_equal, .-uECC_vli_equal
.global	cond_set
	.type	cond_set, @function
cond_set:
	push r28
	push r29
	rcall .
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 6 */
/* stack size = 8 */
.L__stack_usage = 8
	std Y+2,r25
	std Y+1,r24
	std Y+4,r23
	std Y+3,r22
	std Y+6,r21
	std Y+5,r20
	ldd r20,Y+1
	ldd r21,Y+2
	ldd r24,Y+5
	ldd r25,Y+6
	mul r20,r24
	movw r18,r0
	mul r20,r25
	add r19,r0
	mul r21,r24
	add r19,r0
	clr r1
	ldi r20,lo8(1)
	ldd r24,Y+5
	ldd r25,Y+6
	or r24,r25
	breq .L44
	ldi r20,0
.L44:
	mov r22,r20
	ldi r23,0
	ldd r20,Y+3
	ldd r21,Y+4
	mul r22,r20
	movw r24,r0
	mul r22,r21
	add r25,r0
	mul r23,r20
	add r25,r0
	clr r1
	or r24,r18
	or r25,r19
/* epilogue start */
	adiw r28,6
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	cond_set, .-cond_set
.global	uECC_vli_sub
	.type	uECC_vli_sub, @function
uECC_vli_sub:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,14
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 14 */
/* stack size = 16 */
.L__stack_usage = 16
	std Y+9,r25
	std Y+8,r24
	std Y+11,r23
	std Y+10,r22
	std Y+13,r21
	std Y+12,r20
	std Y+14,r18
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	std Y+3,__zero_reg__
	rjmp .L47
.L50:
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+10
	ldd r19,Y+11
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r20,Y+12
	ldd r21,Y+13
	add r24,r20
	adc r25,r21
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	sub r18,r24
	sbc r19,r25
	ldd r24,Y+1
	ldd r25,Y+2
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	std Y+5,r25
	std Y+4,r24
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+10
	ldd r19,Y+11
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldi r20,lo8(1)
	ldd r18,Y+4
	ldd r19,Y+5
	cp r24,r18
	cpc r25,r19
	brlo .L48
	ldi r20,0
.L48:
	mov r24,r20
	ldi r25,0
	std Y+7,r25
	std Y+6,r24
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+10
	ldd r19,Y+11
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldi r20,lo8(1)
	ldd r18,Y+4
	ldd r19,Y+5
	cp r18,r24
	cpc r19,r25
	brne .L49
	ldi r20,0
.L49:
	mov r20,r20
	ldi r21,0
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r24,Y+6
	ldd r25,Y+7
	movw r22,r18
	call cond_set
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+8
	ldd r19,Y+9
	add r24,r18
	adc r25,r19
	ldd r18,Y+4
	ldd r19,Y+5
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+3
	subi r24,lo8(-(1))
	std Y+3,r24
.L47:
	ldd r25,Y+3
	ldd r24,Y+14
	cp r25,r24
	brge .+2
	rjmp .L50
	ldd r24,Y+1
	ldd r25,Y+2
/* epilogue start */
	adiw r28,14
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_sub, .-uECC_vli_sub
	.type	uECC_vli_add, @function
uECC_vli_add:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,14
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 14 */
/* stack size = 16 */
.L__stack_usage = 16
	std Y+9,r25
	std Y+8,r24
	std Y+11,r23
	std Y+10,r22
	std Y+13,r21
	std Y+12,r20
	std Y+14,r18
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	std Y+3,__zero_reg__
	rjmp .L53
.L56:
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+10
	ldd r19,Y+11
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r20,Y+12
	ldd r21,Y+13
	add r24,r20
	adc r25,r21
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	add r24,r18
	adc r25,r19
	ldd r18,Y+1
	ldd r19,Y+2
	add r24,r18
	adc r25,r19
	std Y+5,r25
	std Y+4,r24
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+10
	ldd r19,Y+11
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldi r20,lo8(1)
	ldd r18,Y+4
	ldd r19,Y+5
	cp r18,r24
	cpc r19,r25
	brlo .L54
	ldi r20,0
.L54:
	mov r24,r20
	ldi r25,0
	std Y+7,r25
	std Y+6,r24
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+10
	ldd r19,Y+11
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldi r20,lo8(1)
	ldd r18,Y+4
	ldd r19,Y+5
	cp r18,r24
	cpc r19,r25
	brne .L55
	ldi r20,0
.L55:
	mov r20,r20
	ldi r21,0
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r24,Y+6
	ldd r25,Y+7
	movw r22,r18
	call cond_set
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+8
	ldd r19,Y+9
	add r24,r18
	adc r25,r19
	ldd r18,Y+4
	ldd r19,Y+5
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+3
	subi r24,lo8(-(1))
	std Y+3,r24
.L53:
	ldd r25,Y+3
	ldd r24,Y+14
	cp r25,r24
	brge .+2
	rjmp .L56
	ldd r24,Y+1
	ldd r25,Y+2
/* epilogue start */
	adiw r28,14
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_add, .-uECC_vli_add
.global	uECC_vli_cmp
	.type	uECC_vli_cmp, @function
uECC_vli_cmp:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,25
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 25 */
/* stack size = 27 */
.L__stack_usage = 27
	std Y+22,r25
	std Y+21,r24
	std Y+24,r23
	std Y+23,r22
	std Y+25,r20
	ldd r20,Y+23
	ldd r21,Y+24
	ldd r22,Y+21
	ldd r23,Y+22
	movw r24,r28
	adiw r24,5
	ldd r18,Y+25
	call uECC_vli_sub
	ldi r18,lo8(1)
	or r24,r25
	brne .L59
	ldi r18,0
.L59:
	mov r24,r18
	ldi r25,0
	std Y+2,r25
	std Y+1,r24
	movw r24,r28
	adiw r24,5
	ldd r22,Y+25
	call uECC_vli_isZero
	std Y+4,r25
	std Y+3,r24
	ldi r18,lo8(1)
	ldd r24,Y+3
	ldd r25,Y+4
	or r24,r25
	breq .L60
	ldi r18,0
.L60:
	mov r25,r18
	ldd r24,Y+1
	lsl r24
	mov r18,r25
	sub r18,r24
	mov r24,r18
/* epilogue start */
	adiw r28,25
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_cmp, .-uECC_vli_cmp
	.type	uECC_vli_rshift1, @function
uECC_vli_rshift1:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,9
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 9 */
/* stack size = 11 */
.L__stack_usage = 11
	std Y+8,r25
	std Y+7,r24
	std Y+9,r22
	ldd r24,Y+7
	ldd r25,Y+8
	std Y+4,r25
	std Y+3,r24
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	ldd r24,Y+9
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+7
	ldd r19,Y+8
	add r24,r18
	adc r25,r19
	std Y+8,r25
	std Y+7,r24
	rjmp .L63
.L64:
	ldd r24,Y+7
	ldd r25,Y+8
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+5
	ldd r25,Y+6
	movw r18,r24
	lsr r19
	ror r18
	ldd r24,Y+1
	ldd r25,Y+2
	or r18,r24
	or r19,r25
	ldd r24,Y+7
	ldd r25,Y+8
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldi r18,lo8(31)
	ldi r19,0
	ldd r24,Y+5
	ldd r25,Y+6
	rjmp 2f
	1:
	lsl r24
	rol r25
	2:
	dec r18
	brpl 1b
	std Y+2,r25
	std Y+1,r24
.L63:
	ldd r24,Y+7
	ldd r25,Y+8
	movw r18,r24
	subi r18,2
	sbc r19,__zero_reg__
	std Y+8,r19
	std Y+7,r18
	ldd r18,Y+3
	ldd r19,Y+4
	cp r18,r24
	cpc r19,r25
	brlo .L64
	nop
/* epilogue start */
	adiw r28,9
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_rshift1, .-uECC_vli_rshift1
.global	__muldi3
	.type	muladd, @function
muladd:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,26
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 26 */
/* stack size = 44 */
.L__stack_usage = 44
	std Y+18,r25
	std Y+17,r24
	std Y+20,r23
	std Y+19,r22
	std Y+22,r21
	std Y+21,r20
	std Y+24,r19
	std Y+23,r18
	std Y+26,r17
	std Y+25,r16
	ldd r24,Y+17
	ldd r25,Y+18
	movw r2,r24
	mov r4,__zero_reg__
	mov r5,__zero_reg__
	mov r6,__zero_reg__
	mov r7,__zero_reg__
	movw r8,r6
	ldd r24,Y+19
	ldd r25,Y+20
	movw r18,r24
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	movw r24,r22
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	mov r18,r2
	mov r19,r3
	mov r20,r4
	mov r21,r5
	mov r22,r6
	mov r23,r7
	mov r24,r8
	mov r25,r9
	call __muldi3
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	std Y+1,r10
	std Y+2,r11
	std Y+3,r12
	std Y+4,r13
	std Y+5,r14
	std Y+6,r15
	std Y+7,r16
	std Y+8,r17
	ldd r24,Y+23
	ldd r25,Y+24
	movw r26,r24
	ld r24,X+
	ld r25,X
	movw r10,r24
	mov r12,__zero_reg__
	mov r13,__zero_reg__
	mov r14,__zero_reg__
	mov r15,__zero_reg__
	movw r16,r14
	mov r18,r10
	mov r19,r11
	mov r20,r12
	mov r21,r13
	mov r22,r14
	mov r23,r15
	mov r24,r16
	mov r25,r17
	ldi r16,lo8(32)
	call __ashldi3
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r18,r24
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	movw r24,r22
	mov r30,r10
	or r30,r18
	std Y+9,r30
	mov r30,r11
	or r30,r19
	std Y+10,r30
	mov r30,r12
	or r30,r20
	std Y+11,r30
	mov r30,r13
	or r30,r21
	std Y+12,r30
	mov r30,r14
	or r30,r22
	std Y+13,r30
	mov r30,r15
	or r30,r23
	std Y+14,r30
	mov r30,r16
	or r30,r24
	std Y+15,r30
	mov r24,r17
	or r24,r25
	std Y+16,r24
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	ldd r10,Y+1
	ldd r11,Y+2
	ldd r12,Y+3
	ldd r13,Y+4
	ldd r14,Y+5
	ldd r15,Y+6
	ldd r16,Y+7
	ldd r17,Y+8
	call __adddi3
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	std Y+9,r10
	std Y+10,r11
	std Y+11,r12
	std Y+12,r13
	std Y+13,r14
	std Y+14,r15
	std Y+15,r16
	std Y+16,r17
	ldd r24,Y+25
	ldd r25,Y+26
	movw r26,r24
	ld r30,X+
	ld r31,X
	ldi r26,lo8(1)
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	ldd r2,Y+1
	ldd r3,Y+2
	ldd r4,Y+3
	ldd r5,Y+4
	ldd r6,Y+5
	ldd r7,Y+6
	ldd r8,Y+7
	ldd r9,Y+8
	mov r18,r10
	mov r19,r11
	mov r20,r12
	mov r21,r13
	mov r22,r14
	mov r23,r15
	mov r24,r16
	mov r25,r17
	mov r10,r2
	mov r11,r3
	mov r12,r4
	mov r13,r5
	mov r14,r6
	mov r15,r7
	mov r16,r8
	mov r17,r9
	call __cmpdi2
	brlo .L66
	ldi r26,0
.L66:
	mov r24,r26
	ldi r25,0
	movw r18,r30
	add r18,r24
	adc r19,r25
	ldd r24,Y+25
	ldd r25,Y+26
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	ldi r16,lo8(32)
	call __lshrdi3
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	movw r18,r10
	ldd r24,Y+23
	ldd r25,Y+24
	movw r26,r24
	st X+,r18
	st X,r19
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	std Z+1,r19
	st Z,r18
	nop
/* epilogue start */
	adiw r28,26
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
	.size	muladd, .-muladd
	.type	uECC_vli_mult, @function
uECC_vli_mult:
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,15
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 15 */
/* stack size = 19 */
.L__stack_usage = 19
	std Y+10,r25
	std Y+9,r24
	std Y+12,r23
	std Y+11,r22
	std Y+14,r21
	std Y+13,r20
	std Y+15,r18
	std Y+4,__zero_reg__
	std Y+3,__zero_reg__
	std Y+6,__zero_reg__
	std Y+5,__zero_reg__
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	std Y+2,__zero_reg__
	rjmp .L68
.L71:
	std Y+1,__zero_reg__
	rjmp .L69
.L70:
	ldd r24,Y+2
	mov r18,r24
	lsl r24
	sbc r19,r19
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	lsl r24
	rol r25
	ldd r18,Y+13
	ldd r19,Y+14
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r22,Z
	ldd r23,Z+1
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+11
	ldd r19,Y+12
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r30,r28
	adiw r30,7
	movw r18,r28
	subi r18,-5
	sbci r19,-1
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	movw r16,r30
	call muladd
	ldd r24,Y+1
	subi r24,lo8(-(1))
	std Y+1,r24
.L69:
	ldd r25,Y+1
	ldd r24,Y+2
	cp r24,r25
	brge .L70
	ldd r24,Y+2
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+9
	ldd r19,Y+10
	add r24,r18
	adc r25,r19
	ldd r18,Y+3
	ldd r19,Y+4
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+5
	ldd r25,Y+6
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+7
	ldd r25,Y+8
	std Y+6,r25
	std Y+5,r24
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	ldd r24,Y+2
	subi r24,lo8(-(1))
	std Y+2,r24
.L68:
	ldd r25,Y+2
	ldd r24,Y+15
	cp r25,r24
	brge .+2
	rjmp .L71
	ldd r24,Y+15
	std Y+2,r24
	rjmp .L72
.L75:
	ldd r25,Y+2
	ldd r24,Y+15
	mov r31,r25
	sub r31,r24
	mov r24,r31
	subi r24,lo8(-(1))
	std Y+1,r24
	rjmp .L73
.L74:
	ldd r24,Y+2
	mov r18,r24
	lsl r24
	sbc r19,r19
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	lsl r24
	rol r25
	ldd r18,Y+13
	ldd r19,Y+14
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r22,Z
	ldd r23,Z+1
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+11
	ldd r19,Y+12
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r30,r28
	adiw r30,7
	movw r18,r28
	subi r18,-5
	sbci r19,-1
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	movw r16,r30
	call muladd
	ldd r24,Y+1
	subi r24,lo8(-(1))
	std Y+1,r24
.L73:
	ldd r25,Y+1
	ldd r24,Y+15
	cp r25,r24
	brlt .L74
	ldd r24,Y+2
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+9
	ldd r19,Y+10
	add r24,r18
	adc r25,r19
	ldd r18,Y+3
	ldd r19,Y+4
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+5
	ldd r25,Y+6
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+7
	ldd r25,Y+8
	std Y+6,r25
	std Y+5,r24
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	ldd r24,Y+2
	subi r24,lo8(-(1))
	std Y+2,r24
.L72:
	ldd r24,Y+2
	mov r18,r24
	lsl r24
	sbc r19,r19
	ldd r24,Y+15
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	sbiw r24,1
	cp r18,r24
	cpc r19,r25
	brge .+2
	rjmp .L75
	ldd r24,Y+15
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	sbiw r24,2
	ldd r18,Y+9
	ldd r19,Y+10
	add r24,r18
	adc r25,r19
	ldd r18,Y+3
	ldd r19,Y+4
	movw r30,r24
	std Z+1,r19
	st Z,r18
	nop
/* epilogue start */
	adiw r28,15
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	ret
	.size	uECC_vli_mult, .-uECC_vli_mult
.global	uECC_vli_modAdd
	.type	uECC_vli_modAdd, @function
uECC_vli_modAdd:
	push r16
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,11
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 11 */
/* stack size = 14 */
.L__stack_usage = 14
	std Y+4,r25
	std Y+3,r24
	std Y+6,r23
	std Y+5,r22
	std Y+8,r21
	std Y+7,r20
	std Y+10,r19
	std Y+9,r18
	std Y+11,r16
	ldd r20,Y+7
	ldd r21,Y+8
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+3
	ldd r25,Y+4
	ldd r18,Y+11
	call uECC_vli_add
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+1
	ldd r25,Y+2
	or r24,r25
	brne .L77
	ldd r18,Y+3
	ldd r19,Y+4
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r20,Y+11
	movw r22,r18
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	breq .L79
.L77:
	ldd r20,Y+9
	ldd r21,Y+10
	ldd r22,Y+3
	ldd r23,Y+4
	ldd r24,Y+3
	ldd r25,Y+4
	ldd r18,Y+11
	call uECC_vli_sub
.L79:
	nop
/* epilogue start */
	adiw r28,11
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r16
	ret
	.size	uECC_vli_modAdd, .-uECC_vli_modAdd
.global	uECC_vli_modSub
	.type	uECC_vli_modSub, @function
uECC_vli_modSub:
	push r16
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,11
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 11 */
/* stack size = 14 */
.L__stack_usage = 14
	std Y+4,r25
	std Y+3,r24
	std Y+6,r23
	std Y+5,r22
	std Y+8,r21
	std Y+7,r20
	std Y+10,r19
	std Y+9,r18
	std Y+11,r16
	ldd r20,Y+7
	ldd r21,Y+8
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+3
	ldd r25,Y+4
	ldd r18,Y+11
	call uECC_vli_sub
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+1
	ldd r25,Y+2
	or r24,r25
	breq .L82
	ldd r20,Y+9
	ldd r21,Y+10
	ldd r22,Y+3
	ldd r23,Y+4
	ldd r24,Y+3
	ldd r25,Y+4
	ldd r18,Y+11
	call uECC_vli_add
.L82:
	nop
/* epilogue start */
	adiw r28,11
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r16
	ret
	.size	uECC_vli_modSub, .-uECC_vli_modSub
.global	uECC_vli_mmod
	.type	uECC_vli_mmod, @function
uECC_vli_mmod:
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,88
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 88 */
/* stack size = 92 */
.L__stack_usage = 92
	movw r30,r28
	subi r30,-82
	sbci r31,-1
	std Z+1,r25
	st Z,r24
	movw r24,r28
	subi r24,-84
	sbci r25,-1
	movw r26,r24
	st X+,r22
	st X,r23
	movw r24,r28
	subi r24,-86
	sbci r25,-1
	movw r30,r24
	std Z+1,r21
	st Z,r20
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	st X,r18
	movw r24,r28
	subi r24,-78
	sbci r25,-1
	movw r18,r28
	subi r18,-46
	sbci r19,-1
	movw r30,r24
	std Z+1,r19
	st Z,r18
	movw r24,r28
	subi r24,-78
	sbci r25,-1
	movw r18,r28
	subi r18,-84
	sbci r19,-1
	movw r26,r18
	ld r18,X+
	ld r19,X
	movw r30,r24
	std Z+3,r19
	std Z+2,r18
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r16,r24
	clr __tmp_reg__
	lsr r17
	ror r16
	ror __tmp_reg__
	lsr r17
	ror r16
	ror __tmp_reg__
	mov r17,r16
	mov r16,__tmp_reg__
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r18,r28
	subi r18,-86
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	movw r26,r24
	ld r22,X
	movw r24,r18
	call uECC_vli_numBits
	movw r30,r16
	sub r30,r24
	sbc r31,r25
	movw r24,r30
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+3
	ldd r25,Y+4
	tst r25
	brge .L84
	adiw r24,31
.L84:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	std Y+10,r24
	ldd r24,Y+3
	ldd r25,Y+4
	andi r24,31
	andi r25,128
	tst r25
	brge .L85
	sbiw r24,1
	ori r24,224
	ori r25,255
	adiw r24,1
.L85:
	std Y+11,r24
	std Y+6,__zero_reg__
	std Y+5,__zero_reg__
	movw r24,r28
	adiw r24,14
	ldd r22,Y+10
	call uECC_vli_clear
	ldd r24,Y+11
	cp __zero_reg__,r24
	brlt .+2
	rjmp .L86
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	rjmp .L87
.L88:
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-86
	sbci r19,-1
	movw r26,r18
	ld r18,X+
	ld r19,X
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r18,Y+11
	mov __tmp_reg__,r18
	lsl r0
	sbc r19,r19
	movw r20,r24
	rjmp 2f
	1:
	lsl r20
	rol r21
	2:
	dec r18
	brpl 1b
	ldd r24,Y+10
	mov r18,r24
	lsl r24
	sbc r19,r19
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
	ldd r18,Y+5
	ldd r19,Y+6
	or r18,r20
	or r19,r21
	lsl r24
	rol r25
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	add r24,r20
	adc r25,r21
	adiw r24,13
	movw r26,r24
	st X+,r18
	st X,r19
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-86
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r24,X+
	ld r25,X
	ldd r18,Y+11
	mov __tmp_reg__,r18
	lsl r0
	sbc r19,r19
	ldi r20,lo8(32)
	ldi r21,0
	movw r30,r20
	sub r30,r18
	sbc r31,r19
	movw r18,r30
	rjmp 2f
	1:
	lsr r25
	ror r24
	2:
	dec r18
	brpl 1b
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+1
	ldd r25,Y+2
	adiw r24,1
	std Y+2,r25
	std Y+1,r24
.L87:
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	ldd r18,Y+1
	ldd r19,Y+2
	cp r18,r24
	cpc r19,r25
	brsh .+2
	rjmp .L88
	rjmp .L89
.L86:
	ldd r24,Y+10
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-14
	sbci r19,-1
	movw r30,r18
	add r30,r24
	adc r31,r25
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r18,r28
	subi r18,-86
	sbci r19,-1
	movw r26,r18
	ld r18,X+
	ld r19,X
	movw r26,r24
	ld r20,X
	movw r22,r18
	movw r24,r30
	call uECC_vli_set
.L89:
	ldi r24,lo8(1)
	ldi r25,0
	std Y+2,r25
	std Y+1,r24
	rjmp .L90
.L96:
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	std Y+9,__zero_reg__
	rjmp .L91
.L94:
	movw r18,r28
	subi r18,-78
	sbci r19,-1
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+9
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r18,X+
	ld r19,X
	ldd r24,Y+9
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	add r24,r20
	adc r25,r21
	adiw r24,13
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	sub r18,r24
	sbc r19,r25
	ldd r24,Y+7
	ldd r25,Y+8
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	std Y+13,r25
	std Y+12,r24
	movw r18,r28
	subi r18,-78
	sbci r19,-1
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r18,X+
	ld r19,X
	ldd r24,Y+9
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r18,Y+12
	ldd r19,Y+13
	cp r18,r24
	cpc r19,r25
	breq .L92
	movw r18,r28
	subi r18,-78
	sbci r19,-1
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r18,X+
	ld r19,X
	ldd r24,Y+9
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldi r20,lo8(1)
	ldd r18,Y+12
	ldd r19,Y+13
	cp r24,r18
	cpc r25,r19
	brlo .L93
	ldi r20,0
.L93:
	mov r24,r20
	ldi r25,0
	std Y+8,r25
	std Y+7,r24
.L92:
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+1
	ldd r25,Y+2
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	movw r18,r28
	subi r18,-78
	sbci r19,-1
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r18,X+
	ld r19,X
	ldd r24,Y+9
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	ldd r18,Y+12
	ldd r19,Y+13
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+9
	subi r24,lo8(-(1))
	std Y+9,r24
.L91:
	ldd r24,Y+9
	mov r18,r24
	lsl r24
	sbc r19,r19
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	cp r18,r24
	cpc r19,r25
	brge .+2
	rjmp .L94
	ldi r20,lo8(1)
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r24,Y+7
	ldd r25,Y+8
	cp r18,r24
	cpc r19,r25
	breq .L95
	ldi r20,0
.L95:
	mov r24,r20
	ldi r25,0
	std Y+2,r25
	std Y+1,r24
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r18,r28
	subi r18,-14
	sbci r19,-1
	movw r30,r24
	ld r22,Z
	movw r24,r18
	call uECC_vli_rshift1
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,13
	movw r30,r24
	ld r20,Z
	ldd r21,Z+1
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,13
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldi r18,lo8(31)
	ldi r19,0
	movw r22,r24
	rjmp 2f
	1:
	lsl r22
	rol r23
	2:
	dec r18
	brpl 1b
	movw r18,r22
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	sbiw r24,1
	or r18,r20
	or r19,r21
	lsl r24
	rol r25
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	add r24,r20
	adc r25,r21
	adiw r24,13
	movw r30,r24
	std Z+1,r19
	st Z,r18
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r26,r24
	ld r24,X
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-14
	sbci r19,-1
	add r18,r24
	adc r19,r25
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r30,r24
	ld r22,Z
	movw r24,r18
	call uECC_vli_rshift1
	ldd r24,Y+3
	ldd r25,Y+4
	sbiw r24,1
	std Y+4,r25
	std Y+3,r24
.L90:
	ldd r24,Y+3
	ldd r25,Y+4
	tst r25
	brlt .+2
	rjmp .L96
	movw r18,r28
	subi r18,-78
	sbci r19,-1
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r22,X+
	ld r23,X
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r18,r28
	subi r18,-82
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call uECC_vli_set
	nop
/* epilogue start */
	subi r28,-88
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	ret
	.size	uECC_vli_mmod, .-uECC_vli_mmod
.global	uECC_vli_modMult
	.type	uECC_vli_modMult, @function
uECC_vli_modMult:
	push r16
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,41
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 41 */
/* stack size = 44 */
.L__stack_usage = 44
	std Y+34,r25
	std Y+33,r24
	std Y+36,r23
	std Y+35,r22
	std Y+38,r21
	std Y+37,r20
	std Y+40,r19
	std Y+39,r18
	std Y+41,r16
	ldd r20,Y+37
	ldd r21,Y+38
	ldd r24,Y+35
	ldd r25,Y+36
	ldd r18,Y+41
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	ldd r20,Y+39
	ldd r21,Y+40
	ldd r24,Y+33
	ldd r25,Y+34
	ldd r18,Y+41
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	call uECC_vli_mmod
	nop
/* epilogue start */
	adiw r28,41
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r16
	ret
	.size	uECC_vli_modMult, .-uECC_vli_modMult
.global	uECC_vli_modMult_fast
	.type	uECC_vli_modMult_fast, @function
uECC_vli_modMult_fast:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,40
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 40 */
/* stack size = 42 */
.L__stack_usage = 42
	std Y+34,r25
	std Y+33,r24
	std Y+36,r23
	std Y+35,r22
	std Y+38,r21
	std Y+37,r20
	std Y+40,r19
	std Y+39,r18
	ldd r24,Y+39
	ldd r25,Y+40
	movw r30,r24
	ld r18,Z
	ldd r20,Y+37
	ldd r21,Y+38
	ldd r24,Y+35
	ldd r25,Y+36
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	ldd r24,Y+39
	ldd r25,Y+40
	subi r24,-88
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r24,Y+33
	ldd r25,Y+34
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	movw r22,r20
	movw r30,r18
	icall
	nop
/* epilogue start */
	adiw r28,40
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_modMult_fast, .-uECC_vli_modMult_fast
	.type	uECC_vli_modSquare_fast, @function
uECC_vli_modSquare_fast:
	push r28
	push r29
	rcall .
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 6 */
/* stack size = 8 */
.L__stack_usage = 8
	std Y+2,r25
	std Y+1,r24
	std Y+4,r23
	std Y+3,r22
	std Y+6,r21
	std Y+5,r20
	ldd r18,Y+5
	ldd r19,Y+6
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+3
	ldd r23,Y+4
	ldd r24,Y+1
	ldd r25,Y+2
	call uECC_vli_modMult_fast
	nop
/* epilogue start */
	adiw r28,6
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_modSquare_fast, .-uECC_vli_modSquare_fast
	.type	vli_modInv_update, @function
vli_modInv_update:
	push r28
	push r29
	rcall .
	rcall .
	rcall .
	push __zero_reg__
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 7 */
/* stack size = 9 */
.L__stack_usage = 9
	std Y+4,r25
	std Y+3,r24
	std Y+6,r23
	std Y+5,r22
	std Y+7,r20
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	ldd r24,Y+3
	ldd r25,Y+4
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	andi r24,1
	clr r25
	or r24,r25
	breq .L101
	ldd r20,Y+5
	ldd r21,Y+6
	ldd r22,Y+3
	ldd r23,Y+4
	ldd r24,Y+3
	ldd r25,Y+4
	ldd r18,Y+7
	call uECC_vli_add
	std Y+2,r25
	std Y+1,r24
.L101:
	ldd r24,Y+3
	ldd r25,Y+4
	ldd r22,Y+7
	call uECC_vli_rshift1
	ldd r24,Y+1
	ldd r25,Y+2
	or r24,r25
	breq .L103
	ldd r24,Y+7
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	subi r24,1
	sbci r25,-128
	lsl r24
	rol r25
	ldd r18,Y+3
	ldd r19,Y+4
	add r18,r24
	adc r19,r25
	ldd r24,Y+7
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	subi r24,1
	sbci r25,-128
	lsl r24
	rol r25
	ldd r20,Y+3
	ldd r21,Y+4
	add r24,r20
	adc r25,r21
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	movw r30,r24
	std Z+1,r19
	st Z,r18
.L103:
	nop
/* epilogue start */
	adiw r28,7
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	vli_modInv_update, .-vli_modInv_update
.global	uECC_vli_modInv
	.type	uECC_vli_modInv, @function
uECC_vli_modInv:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,72
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 72 */
/* stack size = 74 */
.L__stack_usage = 74
	movw r30,r28
	subi r30,-66
	sbci r31,-1
	std Z+1,r25
	st Z,r24
	movw r24,r28
	subi r24,-68
	sbci r25,-1
	movw r26,r24
	st X+,r22
	st X,r23
	movw r24,r28
	subi r24,-70
	sbci r25,-1
	movw r30,r24
	std Z+1,r21
	st Z,r20
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r26,r24
	st X,r18
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-68
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	movw r26,r24
	ld r22,X
	movw r24,r18
	call uECC_vli_isZero
	or r24,r25
	breq .L105
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-66
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	movw r26,r24
	ld r22,X
	movw r24,r18
	call uECC_vli_clear
	rjmp .L104
.L105:
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-68
	sbci r19,-1
	movw r30,r18
	ld r22,Z
	ldd r23,Z+1
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call uECC_vli_set
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-70
	sbci r19,-1
	movw r30,r18
	ld r22,Z
	ldd r23,Z+1
	movw r18,r28
	subi r18,-18
	sbci r19,-1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call uECC_vli_set
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-34
	sbci r19,-1
	movw r30,r24
	ld r22,Z
	movw r24,r18
	call uECC_vli_clear
	ldi r24,lo8(1)
	ldi r25,0
	std Y+35,r25
	std Y+34,r24
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-50
	sbci r19,-1
	movw r26,r24
	ld r22,X
	movw r24,r18
	call uECC_vli_clear
	rjmp .L107
.L113:
	ldd r24,Y+2
	ldd r25,Y+3
	andi r24,1
	clr r25
	or r24,r25
	brne .L108
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	movw r30,r24
	ld r22,Z
	movw r24,r18
	call uECC_vli_rshift1
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-70
	sbci r19,-1
	movw r26,r18
	ld r22,X+
	ld r23,X
	movw r18,r28
	subi r18,-34
	sbci r19,-1
	movw r30,r24
	ld r20,Z
	movw r24,r18
	call vli_modInv_update
	rjmp .L107
.L108:
	ldd r24,Y+18
	ldd r25,Y+19
	andi r24,1
	clr r25
	or r24,r25
	brne .L109
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-18
	sbci r19,-1
	movw r26,r24
	ld r22,X
	movw r24,r18
	call uECC_vli_rshift1
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-70
	sbci r19,-1
	movw r30,r18
	ld r22,Z
	ldd r23,Z+1
	movw r18,r28
	subi r18,-50
	sbci r19,-1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call vli_modInv_update
	rjmp .L107
.L109:
	ldd r24,Y+1
	cp __zero_reg__,r24
	brlt .+2
	rjmp .L110
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r20,r28
	subi r20,-18
	sbci r21,-1
	movw r22,r28
	subi r22,-2
	sbci r23,-1
	movw r30,r28
	adiw r30,2
	movw r26,r24
	ld r18,X
	movw r24,r30
	call uECC_vli_sub
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	movw r30,r24
	ld r22,Z
	movw r24,r18
	call uECC_vli_rshift1
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r22,r28
	subi r22,-50
	sbci r23,-1
	movw r18,r28
	subi r18,-34
	sbci r19,-1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call uECC_vli_cmp_unsafe
	tst r24
	brge .L111
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-70
	sbci r19,-1
	movw r30,r18
	ld r20,Z
	ldd r21,Z+1
	movw r22,r28
	subi r22,-34
	sbci r23,-1
	movw r30,r28
	adiw r30,34
	movw r26,r24
	ld r18,X
	movw r24,r30
	call uECC_vli_add
.L111:
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r20,r28
	subi r20,-50
	sbci r21,-1
	movw r22,r28
	subi r22,-34
	sbci r23,-1
	movw r30,r28
	adiw r30,34
	movw r26,r24
	ld r18,X
	movw r24,r30
	call uECC_vli_sub
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-70
	sbci r19,-1
	movw r30,r18
	ld r22,Z
	ldd r23,Z+1
	movw r18,r28
	subi r18,-34
	sbci r19,-1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call vli_modInv_update
	rjmp .L107
.L110:
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	movw r22,r28
	subi r22,-18
	sbci r23,-1
	movw r30,r28
	adiw r30,18
	movw r26,r24
	ld r18,X
	movw r24,r30
	call uECC_vli_sub
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-18
	sbci r19,-1
	movw r30,r24
	ld r22,Z
	movw r24,r18
	call uECC_vli_rshift1
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r22,r28
	subi r22,-34
	sbci r23,-1
	movw r18,r28
	subi r18,-50
	sbci r19,-1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call uECC_vli_cmp_unsafe
	tst r24
	brge .L112
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-70
	sbci r19,-1
	movw r30,r18
	ld r20,Z
	ldd r21,Z+1
	movw r22,r28
	subi r22,-50
	sbci r23,-1
	movw r30,r28
	adiw r30,50
	movw r26,r24
	ld r18,X
	movw r24,r30
	call uECC_vli_add
.L112:
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r20,r28
	subi r20,-34
	sbci r21,-1
	movw r22,r28
	subi r22,-50
	sbci r23,-1
	movw r30,r28
	adiw r30,50
	movw r26,r24
	ld r18,X
	movw r24,r30
	call uECC_vli_sub
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r18,r28
	subi r18,-70
	sbci r19,-1
	movw r30,r18
	ld r22,Z
	ldd r23,Z+1
	movw r18,r28
	subi r18,-50
	sbci r19,-1
	movw r26,r24
	ld r20,X
	movw r24,r18
	call vli_modInv_update
.L107:
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r22,r28
	subi r22,-18
	sbci r23,-1
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	movw r30,r24
	ld r20,Z
	movw r24,r18
	call uECC_vli_cmp_unsafe
	std Y+1,r24
	ldd r24,Y+1
	tst r24
	breq .+2
	rjmp .L113
	movw r24,r28
	subi r24,-72
	sbci r25,-1
	movw r22,r28
	subi r22,-34
	sbci r23,-1
	movw r18,r28
	subi r18,-66
	sbci r19,-1
	movw r26,r18
	ld r18,X+
	ld r19,X
	movw r30,r24
	ld r20,Z
	movw r24,r18
	call uECC_vli_set
.L104:
/* epilogue start */
	subi r28,-72
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_modInv, .-uECC_vli_modInv
.global	double_jacobian_default
	.type	double_jacobian_default, @function
double_jacobian_default:
	push r16
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,43
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 43 */
/* stack size = 46 */
.L__stack_usage = 46
	std Y+37,r25
	std Y+36,r24
	std Y+39,r23
	std Y+38,r22
	std Y+41,r21
	std Y+40,r20
	std Y+43,r19
	std Y+42,r18
	ldd r24,Y+42
	ldd r25,Y+43
	movw r30,r24
	ld r24,Z
	std Y+1,r24
	ldd r24,Y+40
	ldd r25,Y+41
	ldd r22,Y+1
	call uECC_vli_isZero
	or r24,r25
	breq .+2
	rjmp .L119
	ldd r20,Y+42
	ldd r21,Y+43
	ldd r18,Y+38
	ldd r19,Y+39
	movw r24,r28
	adiw r24,4
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r18,Y+42
	ldd r19,Y+43
	movw r20,r28
	subi r20,-4
	sbci r21,-1
	ldd r22,Y+36
	ldd r23,Y+37
	movw r24,r28
	adiw r24,20
	call uECC_vli_modMult_fast
	ldd r20,Y+42
	ldd r21,Y+43
	movw r18,r28
	subi r18,-4
	sbci r19,-1
	movw r24,r28
	adiw r24,4
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r18,Y+42
	ldd r19,Y+43
	ldd r20,Y+40
	ldd r21,Y+41
	ldd r22,Y+38
	ldd r23,Y+39
	ldd r24,Y+38
	ldd r25,Y+39
	call uECC_vli_modMult_fast
	ldd r20,Y+42
	ldd r21,Y+43
	ldd r18,Y+40
	ldd r19,Y+41
	ldd r24,Y+40
	ldd r25,Y+41
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+40
	ldd r21,Y+41
	ldd r22,Y+36
	ldd r23,Y+37
	ldd r24,Y+36
	ldd r25,Y+37
	ldd r16,Y+1
	call uECC_vli_modAdd
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+40
	ldd r21,Y+41
	ldd r22,Y+40
	ldd r23,Y+41
	ldd r24,Y+40
	ldd r25,Y+41
	ldd r16,Y+1
	call uECC_vli_modAdd
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+40
	ldd r21,Y+41
	ldd r22,Y+36
	ldd r23,Y+37
	ldd r24,Y+40
	ldd r25,Y+41
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+42
	ldd r19,Y+43
	ldd r20,Y+40
	ldd r21,Y+41
	ldd r22,Y+36
	ldd r23,Y+37
	ldd r24,Y+36
	ldd r25,Y+37
	call uECC_vli_modMult_fast
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+36
	ldd r21,Y+37
	ldd r22,Y+36
	ldd r23,Y+37
	ldd r24,Y+40
	ldd r25,Y+41
	ldd r16,Y+1
	call uECC_vli_modAdd
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+40
	ldd r21,Y+41
	ldd r22,Y+36
	ldd r23,Y+37
	ldd r24,Y+36
	ldd r25,Y+37
	ldd r16,Y+1
	call uECC_vli_modAdd
	ldd r24,Y+36
	ldd r25,Y+37
	ldi r22,0
	ldi r23,0
	call uECC_vli_testBit
	or r24,r25
	brne .+2
	rjmp .L117
	ldd r24,Y+42
	ldd r25,Y+43
	movw r20,r24
	subi r20,-4
	sbci r21,-1
	ldd r22,Y+36
	ldd r23,Y+37
	ldd r24,Y+36
	ldd r25,Y+37
	ldd r18,Y+1
	call uECC_vli_add
	std Y+3,r25
	std Y+2,r24
	ldd r24,Y+36
	ldd r25,Y+37
	ldd r22,Y+1
	call uECC_vli_rshift1
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	subi r24,1
	sbci r25,-128
	lsl r24
	rol r25
	ldd r18,Y+36
	ldd r19,Y+37
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r20,Z
	ldd r21,Z+1
	ldi r18,lo8(31)
	ldi r19,0
	ldd r24,Y+2
	ldd r25,Y+3
	movw r22,r24
	rjmp 2f
	1:
	lsl r22
	rol r23
	2:
	dec r18
	brpl 1b
	movw r18,r22
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	subi r24,1
	sbci r25,-128
	lsl r24
	rol r25
	ldd r22,Y+36
	ldd r23,Y+37
	add r24,r22
	adc r25,r23
	or r18,r20
	or r19,r21
	movw r30,r24
	std Z+1,r19
	st Z,r18
	rjmp .L118
.L117:
	ldd r24,Y+36
	ldd r25,Y+37
	ldd r22,Y+1
	call uECC_vli_rshift1
.L118:
	ldd r20,Y+42
	ldd r21,Y+43
	ldd r18,Y+36
	ldd r19,Y+37
	ldd r24,Y+40
	ldd r25,Y+41
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-20
	sbci r21,-1
	ldd r22,Y+40
	ldd r23,Y+41
	ldd r24,Y+40
	ldd r25,Y+41
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-20
	sbci r21,-1
	ldd r22,Y+40
	ldd r23,Y+41
	ldd r24,Y+40
	ldd r25,Y+41
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+40
	ldd r21,Y+41
	movw r22,r28
	subi r22,-20
	sbci r23,-1
	movw r24,r28
	adiw r24,20
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+42
	ldd r19,Y+43
	movw r20,r28
	subi r20,-20
	sbci r21,-1
	ldd r22,Y+36
	ldd r23,Y+37
	ldd r24,Y+36
	ldd r25,Y+37
	call uECC_vli_modMult_fast
	ldd r24,Y+42
	ldd r25,Y+43
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-4
	sbci r21,-1
	ldd r22,Y+36
	ldd r23,Y+37
	movw r24,r28
	adiw r24,4
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+40
	ldd r19,Y+41
	ldd r24,Y+36
	ldd r25,Y+37
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	ldd r18,Y+38
	ldd r19,Y+39
	ldd r24,Y+40
	ldd r25,Y+41
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	movw r18,r28
	subi r18,-4
	sbci r19,-1
	ldd r24,Y+38
	ldd r25,Y+39
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	rjmp .L114
.L119:
	nop
.L114:
/* epilogue start */
	adiw r28,43
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r16
	ret
	.size	double_jacobian_default, .-double_jacobian_default
.global	x_side_default
	.type	x_side_default, @function
x_side_default:
	push r16
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,23
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 23 */
/* stack size = 26 */
.L__stack_usage = 26
	std Y+19,r25
	std Y+18,r24
	std Y+21,r23
	std Y+20,r22
	std Y+23,r21
	std Y+22,r20
	ldi r18,lo8(16)
	movw r24,r28
	adiw r24,2
	movw r30,r24
	mov r19,r18
	0:
	st Z+,__zero_reg__
	dec r19
	brne 0b
	ldi r24,lo8(3)
	ldi r25,0
	std Y+3,r25
	std Y+2,r24
	ldd r24,Y+22
	ldd r25,Y+23
	movw r30,r24
	ld r24,Z
	std Y+1,r24
	ldd r20,Y+22
	ldd r21,Y+23
	ldd r18,Y+20
	ldd r19,Y+21
	ldd r24,Y+18
	ldd r25,Y+19
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r24,Y+22
	ldd r25,Y+23
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+18
	ldd r23,Y+19
	ldd r24,Y+18
	ldd r25,Y+19
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+22
	ldd r19,Y+23
	ldd r20,Y+20
	ldd r21,Y+21
	ldd r22,Y+18
	ldd r23,Y+19
	ldd r24,Y+18
	ldd r25,Y+19
	call uECC_vli_modMult_fast
	ldd r24,Y+22
	ldd r25,Y+23
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r24,Y+22
	ldd r25,Y+23
	movw r20,r24
	subi r20,-68
	sbci r21,-1
	ldd r22,Y+18
	ldd r23,Y+19
	ldd r24,Y+18
	ldd r25,Y+19
	ldd r16,Y+1
	call uECC_vli_modAdd
	nop
/* epilogue start */
	adiw r28,23
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r16
	ret
	.size	x_side_default, .-x_side_default
.global	uECC_secp256r1
	.type	uECC_secp256r1, @function
uECC_secp256r1:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 0 */
/* stack size = 2 */
.L__stack_usage = 2
	ldi r24,lo8(curve_secp256r1)
	ldi r25,hi8(curve_secp256r1)
/* epilogue start */
	pop r29
	pop r28
	ret
	.size	uECC_secp256r1, .-uECC_secp256r1
.global	vli_mmod_fast_secp256r1
	.type	vli_mmod_fast_secp256r1, @function
vli_mmod_fast_secp256r1:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,22
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 22 */
/* stack size = 24 */
.L__stack_usage = 24
	std Y+20,r25
	std Y+19,r24
	std Y+22,r23
	std Y+21,r22
	ldd r18,Y+21
	ldd r19,Y+22
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r20,lo8(8)
	movw r22,r18
	call uECC_vli_set
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	ldd r24,Y+7
	ldd r25,Y+8
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+5
	ldd r25,Y+6
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+22
	ldd r25,Z+23
	std Y+10,r25
	std Y+9,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+24
	ldd r25,Z+25
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+14,r25
	std Y+13,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+28
	ldd r25,Z+29
	std Y+16,r25
	std Y+15,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+30
	ldd r25,Z+31
	std Y+18,r25
	std Y+17,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	movw r22,r28
	subi r22,-3
	sbci r23,-1
	movw r24,r28
	adiw r24,3
	ldi r18,lo8(8)
	call uECC_vli_add
	std Y+2,r25
	std Y+1,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_add
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+24
	ldd r25,Z+25
	std Y+10,r25
	std Y+9,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+28
	ldd r25,Z+29
	std Y+14,r25
	std Y+13,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+30
	ldd r25,Z+31
	std Y+16,r25
	std Y+15,r24
	std Y+18,__zero_reg__
	std Y+17,__zero_reg__
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	movw r22,r28
	subi r22,-3
	sbci r23,-1
	movw r24,r28
	adiw r24,3
	ldi r18,lo8(8)
	call uECC_vli_add
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
	std Y+2,r25
	std Y+1,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_add
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+16
	ldd r25,Z+17
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+18
	ldd r25,Z+19
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+20
	ldd r25,Z+21
	std Y+8,r25
	std Y+7,r24
	std Y+14,__zero_reg__
	std Y+13,__zero_reg__
	ldd r24,Y+13
	ldd r25,Y+14
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+11
	ldd r25,Y+12
	std Y+10,r25
	std Y+9,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+28
	ldd r25,Z+29
	std Y+16,r25
	std Y+15,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+30
	ldd r25,Z+31
	std Y+18,r25
	std Y+17,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_add
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+18
	ldd r25,Z+19
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+20
	ldd r25,Z+21
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+22
	ldd r25,Z+23
	std Y+8,r25
	std Y+7,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+10,r25
	std Y+9,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+28
	ldd r25,Z+29
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+30
	ldd r25,Z+31
	std Y+14,r25
	std Y+13,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+16,r25
	std Y+15,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+16
	ldd r25,Z+17
	std Y+18,r25
	std Y+17,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_add
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+22
	ldd r25,Z+23
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+24
	ldd r25,Z+25
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+8,r25
	std Y+7,r24
	std Y+14,__zero_reg__
	std Y+13,__zero_reg__
	ldd r24,Y+13
	ldd r25,Y+14
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+11
	ldd r25,Y+12
	std Y+10,r25
	std Y+9,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+16
	ldd r25,Z+17
	std Y+16,r25
	std Y+15,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+20
	ldd r25,Z+21
	std Y+18,r25
	std Y+17,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_sub
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	sub r24,r18
	sbc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+24
	ldd r25,Z+25
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+28
	ldd r25,Z+29
	std Y+8,r25
	std Y+7,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+30
	ldd r25,Z+31
	std Y+10,r25
	std Y+9,r24
	std Y+14,__zero_reg__
	std Y+13,__zero_reg__
	ldd r24,Y+13
	ldd r25,Y+14
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+18
	ldd r25,Z+19
	std Y+16,r25
	std Y+15,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+22
	ldd r25,Z+23
	std Y+18,r25
	std Y+17,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_sub
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	sub r24,r18
	sbc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+28
	ldd r25,Z+29
	std Y+6,r25
	std Y+5,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+30
	ldd r25,Z+31
	std Y+8,r25
	std Y+7,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+16
	ldd r25,Z+17
	std Y+10,r25
	std Y+9,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+18
	ldd r25,Z+19
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+20
	ldd r25,Z+21
	std Y+14,r25
	std Y+13,r24
	std Y+16,__zero_reg__
	std Y+15,__zero_reg__
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+24
	ldd r25,Z+25
	std Y+18,r25
	std Y+17,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_sub
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	sub r24,r18
	sbc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+28
	ldd r25,Z+29
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+30
	ldd r25,Z+31
	std Y+6,r25
	std Y+5,r24
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+18
	ldd r25,Z+19
	std Y+10,r25
	std Y+9,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+20
	ldd r25,Z+21
	std Y+12,r25
	std Y+11,r24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+22
	ldd r25,Z+23
	std Y+14,r25
	std Y+13,r24
	std Y+16,__zero_reg__
	std Y+15,__zero_reg__
	ldd r24,Y+21
	ldd r25,Y+22
	movw r30,r24
	ldd r24,Z+26
	ldd r25,Z+27
	std Y+18,r25
	std Y+17,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	call uECC_vli_sub
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	sub r24,r18
	sbc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+1
	ldd r25,Y+2
	tst r25
	brge .L127
.L125:
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	ldi r20,lo8(curve_secp256r1+4)
	ldi r21,hi8(curve_secp256r1+4)
	call uECC_vli_add
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	add r24,r18
	adc r25,r19
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+1
	ldd r25,Y+2
	tst r25
	brlt .L125
	rjmp .L129
.L128:
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r18,lo8(8)
	ldi r20,lo8(curve_secp256r1+4)
	ldi r21,hi8(curve_secp256r1+4)
	call uECC_vli_sub
	movw r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	sub r24,r18
	sbc r25,r19
	std Y+2,r25
	std Y+1,r24
.L127:
	ldd r24,Y+1
	ldd r25,Y+2
	or r24,r25
	brne .L128
	ldd r24,Y+19
	ldd r25,Y+20
	ldi r20,lo8(8)
	movw r22,r24
	ldi r24,lo8(curve_secp256r1+4)
	ldi r25,hi8(curve_secp256r1+4)
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	brne .L128
.L129:
	nop
/* epilogue start */
	adiw r28,22
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	vli_mmod_fast_secp256r1, .-vli_mmod_fast_secp256r1
.global	EccPoint_isZero
	.type	EccPoint_isZero, @function
EccPoint_isZero:
	push r28
	push r29
	rcall .
	rcall .
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 4 */
/* stack size = 6 */
.L__stack_usage = 6
	std Y+2,r25
	std Y+1,r24
	std Y+4,r23
	std Y+3,r22
	ldd r24,Y+3
	ldd r25,Y+4
	movw r30,r24
	ld r24,Z
	lsl r24
	mov r18,r24
	ldd r24,Y+1
	ldd r25,Y+2
	mov r22,r18
	call uECC_vli_isZero
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	ret
	.size	EccPoint_isZero, .-EccPoint_isZero
.global	apply_z
	.type	apply_z, @function
apply_z:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 24 */
/* stack size = 26 */
.L__stack_usage = 26
	std Y+18,r25
	std Y+17,r24
	std Y+20,r23
	std Y+19,r22
	std Y+22,r21
	std Y+21,r20
	std Y+24,r19
	std Y+23,r18
	ldd r18,Y+23
	ldd r19,Y+24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r20,r18
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_modSquare_fast
	ldd r18,Y+23
	ldd r19,Y+24
	ldd r22,Y+17
	ldd r23,Y+18
	ldd r24,Y+17
	ldd r25,Y+18
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	call uECC_vli_modMult_fast
	ldd r18,Y+23
	ldd r19,Y+24
	ldd r24,Y+21
	ldd r25,Y+22
	movw r20,r24
	movw r24,r28
	adiw r24,1
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_modMult_fast
	ldd r18,Y+23
	ldd r19,Y+24
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+19
	ldd r25,Y+20
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	call uECC_vli_modMult_fast
	nop
/* epilogue start */
	adiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	apply_z, .-apply_z
	.type	XYcZ_initial_double, @function
XYcZ_initial_double:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,29
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 29 */
/* stack size = 35 */
.L__stack_usage = 35
	std Y+19,r25
	std Y+18,r24
	std Y+21,r23
	std Y+20,r22
	std Y+23,r21
	std Y+22,r20
	std Y+25,r19
	std Y+24,r18
	std Y+27,r17
	std Y+26,r16
	std Y+29,r15
	std Y+28,r14
	ldd r24,Y+28
	ldd r25,Y+29
	movw r26,r24
	ld r24,X
	std Y+1,r24
	ldd r24,Y+26
	ldd r25,Y+27
	or r24,r25
	breq .L134
	ldd r18,Y+26
	ldd r19,Y+27
	movw r24,r28
	adiw r24,2
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	rjmp .L135
.L134:
	movw r24,r28
	adiw r24,2
	ldd r22,Y+1
	call uECC_vli_clear
	ldi r24,lo8(1)
	ldi r25,0
	std Y+3,r25
	std Y+2,r24
.L135:
	ldd r18,Y+18
	ldd r19,Y+19
	ldd r24,Y+22
	ldd r25,Y+23
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	ldd r18,Y+20
	ldd r19,Y+21
	ldd r24,Y+24
	ldd r25,Y+25
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	ldd r18,Y+28
	ldd r19,Y+29
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+20
	ldd r23,Y+21
	ldd r24,Y+18
	ldd r25,Y+19
	call apply_z
	ldd r24,Y+28
	ldd r25,Y+29
	subi r24,-84
	sbci r25,-1
	movw r26,r24
	ld r30,X+
	ld r31,X
	ldd r18,Y+28
	ldd r19,Y+29
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+20
	ldd r23,Y+21
	ldd r24,Y+18
	ldd r25,Y+19
	icall
	ldd r18,Y+28
	ldd r19,Y+29
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+24
	ldd r23,Y+25
	ldd r24,Y+22
	ldd r25,Y+23
	call apply_z
	nop
/* epilogue start */
	adiw r28,29
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	XYcZ_initial_double, .-XYcZ_initial_double
.global	XYcZ_add
	.type	XYcZ_add, @function
XYcZ_add:
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,27
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 27 */
/* stack size = 31 */
.L__stack_usage = 31
	std Y+19,r25
	std Y+18,r24
	std Y+21,r23
	std Y+20,r22
	std Y+23,r21
	std Y+22,r20
	std Y+25,r19
	std Y+24,r18
	std Y+27,r17
	std Y+26,r16
	ldd r24,Y+26
	ldd r25,Y+27
	movw r30,r24
	ld r24,Z
	std Y+1,r24
	ldd r24,Y+26
	ldd r25,Y+27
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+18
	ldd r21,Y+19
	ldd r22,Y+22
	ldd r23,Y+23
	movw r24,r28
	adiw r24,2
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r20,Y+26
	ldd r21,Y+27
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	movw r24,r28
	adiw r24,2
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r18,Y+26
	ldd r19,Y+27
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+18
	ldd r23,Y+19
	ldd r24,Y+18
	ldd r25,Y+19
	call uECC_vli_modMult_fast
	ldd r18,Y+26
	ldd r19,Y+27
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+22
	ldd r23,Y+23
	ldd r24,Y+22
	ldd r25,Y+23
	call uECC_vli_modMult_fast
	ldd r24,Y+26
	ldd r25,Y+27
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+20
	ldd r21,Y+21
	ldd r22,Y+24
	ldd r23,Y+25
	ldd r24,Y+24
	ldd r25,Y+25
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r20,Y+26
	ldd r21,Y+27
	ldd r18,Y+24
	ldd r19,Y+25
	movw r24,r28
	adiw r24,2
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r24,Y+26
	ldd r25,Y+27
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+18
	ldd r21,Y+19
	movw r22,r28
	subi r22,-2
	sbci r23,-1
	movw r24,r28
	adiw r24,2
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r24,Y+26
	ldd r25,Y+27
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+22
	ldd r21,Y+23
	movw r22,r28
	subi r22,-2
	sbci r23,-1
	movw r24,r28
	adiw r24,2
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r24,Y+26
	ldd r25,Y+27
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+18
	ldd r21,Y+19
	ldd r22,Y+22
	ldd r23,Y+23
	ldd r24,Y+22
	ldd r25,Y+23
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+26
	ldd r19,Y+27
	ldd r20,Y+22
	ldd r21,Y+23
	ldd r22,Y+20
	ldd r23,Y+21
	ldd r24,Y+20
	ldd r25,Y+21
	call uECC_vli_modMult_fast
	ldd r24,Y+26
	ldd r25,Y+27
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+18
	ldd r23,Y+19
	ldd r24,Y+22
	ldd r25,Y+23
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+26
	ldd r19,Y+27
	ldd r20,Y+22
	ldd r21,Y+23
	ldd r22,Y+24
	ldd r23,Y+25
	ldd r24,Y+24
	ldd r25,Y+25
	call uECC_vli_modMult_fast
	ldd r24,Y+26
	ldd r25,Y+27
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+20
	ldd r21,Y+21
	ldd r22,Y+24
	ldd r23,Y+25
	ldd r24,Y+24
	ldd r25,Y+25
	ldd r16,Y+1
	call uECC_vli_modSub
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	ldd r24,Y+22
	ldd r25,Y+23
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	nop
/* epilogue start */
	adiw r28,27
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	ret
	.size	XYcZ_add, .-XYcZ_add
	.type	XYcZ_addC, @function
XYcZ_addC:
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,59
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 59 */
/* stack size = 63 */
.L__stack_usage = 63
	std Y+51,r25
	std Y+50,r24
	std Y+53,r23
	std Y+52,r22
	std Y+55,r21
	std Y+54,r20
	std Y+57,r19
	std Y+56,r18
	std Y+59,r17
	std Y+58,r16
	ldd r24,Y+58
	ldd r25,Y+59
	movw r30,r24
	ld r24,Z
	std Y+1,r24
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+50
	ldd r21,Y+51
	ldd r22,Y+54
	ldd r23,Y+55
	movw r24,r28
	adiw r24,2
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r20,Y+58
	ldd r21,Y+59
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	movw r24,r28
	adiw r24,2
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r18,Y+58
	ldd r19,Y+59
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+50
	ldd r23,Y+51
	ldd r24,Y+50
	ldd r25,Y+51
	call uECC_vli_modMult_fast
	ldd r18,Y+58
	ldd r19,Y+59
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	ldd r22,Y+54
	ldd r23,Y+55
	ldd r24,Y+54
	ldd r25,Y+55
	call uECC_vli_modMult_fast
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+52
	ldd r21,Y+53
	ldd r22,Y+56
	ldd r23,Y+57
	movw r24,r28
	adiw r24,2
	ldd r16,Y+1
	call uECC_vli_modAdd
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+52
	ldd r21,Y+53
	ldd r22,Y+56
	ldd r23,Y+57
	ldd r24,Y+56
	ldd r25,Y+57
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+50
	ldd r21,Y+51
	ldd r22,Y+54
	ldd r23,Y+55
	movw r24,r28
	adiw r24,18
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+58
	ldd r19,Y+59
	movw r20,r28
	subi r20,-18
	sbci r21,-1
	ldd r22,Y+52
	ldd r23,Y+53
	ldd r24,Y+52
	ldd r25,Y+53
	call uECC_vli_modMult_fast
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+54
	ldd r21,Y+55
	ldd r22,Y+50
	ldd r23,Y+51
	movw r24,r28
	adiw r24,18
	ldd r16,Y+1
	call uECC_vli_modAdd
	ldd r20,Y+58
	ldd r21,Y+59
	ldd r18,Y+56
	ldd r19,Y+57
	ldd r24,Y+54
	ldd r25,Y+55
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-18
	sbci r21,-1
	ldd r22,Y+54
	ldd r23,Y+55
	ldd r24,Y+54
	ldd r25,Y+55
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+54
	ldd r21,Y+55
	ldd r22,Y+50
	ldd r23,Y+51
	movw r24,r28
	adiw r24,34
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+58
	ldd r19,Y+59
	movw r20,r28
	subi r20,-34
	sbci r21,-1
	ldd r22,Y+56
	ldd r23,Y+57
	ldd r24,Y+56
	ldd r25,Y+57
	call uECC_vli_modMult_fast
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+52
	ldd r21,Y+53
	ldd r22,Y+56
	ldd r23,Y+57
	ldd r24,Y+56
	ldd r25,Y+57
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r20,Y+58
	ldd r21,Y+59
	movw r18,r28
	subi r18,-2
	sbci r19,-1
	movw r24,r28
	adiw r24,34
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-18
	sbci r21,-1
	movw r22,r28
	subi r22,-34
	sbci r23,-1
	movw r24,r28
	adiw r24,34
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+50
	ldd r21,Y+51
	movw r22,r28
	subi r22,-34
	sbci r23,-1
	movw r24,r28
	adiw r24,18
	ldd r16,Y+1
	call uECC_vli_modSub
	ldd r18,Y+58
	ldd r19,Y+59
	movw r20,r28
	subi r20,-2
	sbci r21,-1
	movw r22,r28
	subi r22,-18
	sbci r23,-1
	movw r24,r28
	adiw r24,18
	call uECC_vli_modMult_fast
	ldd r24,Y+58
	ldd r25,Y+59
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	ldd r20,Y+52
	ldd r21,Y+53
	movw r22,r28
	subi r22,-18
	sbci r23,-1
	ldd r24,Y+52
	ldd r25,Y+53
	ldd r16,Y+1
	call uECC_vli_modSub
	movw r18,r28
	subi r18,-34
	sbci r19,-1
	ldd r24,Y+50
	ldd r25,Y+51
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_set
	nop
/* epilogue start */
	adiw r28,59
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	ret
	.size	XYcZ_addC, .-XYcZ_addC
.global	EccPoint_mult
	.type	EccPoint_mult, @function
EccPoint_mult:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,99
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 99 */
/* stack size = 105 */
.L__stack_usage = 105
	movw r30,r28
	subi r30,-86
	sbci r31,-1
	std Z+1,r25
	st Z,r24
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r30,r24
	std Z+1,r23
	st Z,r22
	movw r24,r28
	subi r24,-90
	sbci r25,-1
	movw r30,r24
	std Z+1,r21
	st Z,r20
	movw r24,r28
	subi r24,-92
	sbci r25,-1
	movw r30,r24
	std Z+1,r19
	st Z,r18
	movw r24,r28
	subi r24,-94
	sbci r25,-1
	movw r30,r24
	std Z+1,r17
	st Z,r16
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	std Z+1,r15
	st Z,r14
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r30,r24
	ld r24,Z
	std Y+3,r24
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r24,r28
	adiw r24,6
	adiw r24,16
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-88
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	add r18,r24
	adc r19,r25
	movw r24,r28
	adiw r24,38
	adiw r24,16
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r26,Z
	ldd r27,Z+1
	movw r24,r28
	subi r24,-92
	sbci r25,-1
	movw r30,r24
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	adiw r28,98-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,98-62
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	movw r20,r28
	subi r20,-6
	sbci r21,-1
	movw r24,r28
	adiw r24,38
	movw r22,r24
	subi r22,-16
	sbci r23,-1
	movw r24,r28
	adiw r24,6
	adiw r24,16
	movw r14,r26
	adiw r28,98-62
	ldd r16,Y+62
	ldd r17,Y+63
	sbiw r28,98-62
	call XYcZ_initial_double
	movw r24,r28
	subi r24,-94
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	sbiw r24,2
	std Y+2,r25
	std Y+1,r24
	rjmp .L139
.L141:
	ldd r18,Y+1
	ldd r19,Y+2
	movw r24,r28
	subi r24,-90
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r22,r18
	call uECC_vli_testBit
	ldi r18,lo8(1)
	or r24,r25
	breq .L140
	ldi r18,0
.L140:
	mov r24,r18
	ldi r25,0
	std Y+5,r25
	std Y+4,r24
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r26,r18
	add r26,r24
	adc r27,r25
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r20,r18
	add r20,r24
	adc r21,r25
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r22,r18
	sub r22,r24
	sbc r23,r25
	movw r24,r22
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r22,r18
	add r22,r24
	adc r23,r25
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r30,r18
	sub r30,r24
	sbc r31,r25
	movw r24,r30
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r30,r18
	add r30,r24
	adc r31,r25
	adiw r28,98-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,98-62
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r16,r24
	movw r18,r26
	adiw r28,98-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,98-62
	call XYcZ_addC
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r26,r18
	add r26,r24
	adc r27,r25
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r22,r18
	sub r22,r24
	sbc r23,r25
	movw r24,r22
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r20,r18
	add r20,r24
	adc r21,r25
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r22,r18
	add r22,r24
	adc r23,r25
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r30,r18
	add r30,r24
	adc r31,r25
	adiw r28,98-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,98-62
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r16,r24
	movw r18,r26
	adiw r28,98-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,98-62
	call XYcZ_add
	ldd r24,Y+1
	ldd r25,Y+2
	sbiw r24,1
	std Y+2,r25
	std Y+1,r24
.L139:
	ldd r24,Y+1
	ldd r25,Y+2
	cp __zero_reg__,r24
	cpc __zero_reg__,r25
	brge .+2
	rjmp .L141
	movw r24,r28
	subi r24,-90
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldi r22,0
	ldi r23,0
	call uECC_vli_testBit
	ldi r18,lo8(1)
	or r24,r25
	breq .L142
	ldi r18,0
.L142:
	mov r24,r18
	ldi r25,0
	std Y+5,r25
	std Y+4,r24
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r26,r18
	add r26,r24
	adc r27,r25
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r20,r18
	add r20,r24
	adc r21,r25
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r22,r18
	sub r22,r24
	sbc r23,r25
	movw r24,r22
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r22,r18
	add r22,r24
	adc r23,r25
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r30,r18
	sub r30,r24
	sbc r31,r25
	movw r24,r30
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r30,r18
	add r30,r24
	adc r31,r25
	adiw r28,98-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,98-62
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r16,r24
	movw r18,r26
	adiw r28,98-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,98-62
	call XYcZ_addC
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r18,r24
	subi r18,-4
	sbci r19,-1
	movw r20,r28
	subi r20,-6
	sbci r21,-1
	movw r24,r28
	adiw r24,6
	movw r22,r24
	subi r22,-16
	sbci r23,-1
	movw r24,r28
	subi r24,-70
	sbci r25,-1
	ldd r16,Y+3
	call uECC_vli_modSub
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r20,r18
	add r20,r24
	adc r21,r25
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r22,r28
	subi r22,-70
	sbci r23,-1
	movw r24,r28
	subi r24,-70
	sbci r25,-1
	call uECC_vli_modMult_fast
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r24,r28
	subi r24,-88
	sbci r25,-1
	movw r30,r24
	ld r20,Z
	ldd r21,Z+1
	movw r22,r28
	subi r22,-70
	sbci r23,-1
	movw r24,r28
	subi r24,-70
	sbci r25,-1
	call uECC_vli_modMult_fast
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r20,r24
	subi r20,-4
	sbci r21,-1
	movw r22,r28
	subi r22,-70
	sbci r23,-1
	movw r24,r28
	subi r24,-70
	sbci r25,-1
	ldd r18,Y+3
	call uECC_vli_modInv
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-88
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	movw r20,r18
	add r20,r24
	adc r21,r25
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r22,r28
	subi r22,-70
	sbci r23,-1
	movw r24,r28
	subi r24,-70
	sbci r25,-1
	call uECC_vli_modMult_fast
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r20,r18
	add r20,r24
	adc r21,r25
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r22,r28
	subi r22,-70
	sbci r23,-1
	movw r24,r28
	subi r24,-70
	sbci r25,-1
	call uECC_vli_modMult_fast
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r26,r18
	add r26,r24
	adc r27,r25
	ldi r18,lo8(1)
	ldi r19,0
	ldd r24,Y+4
	ldd r25,Y+5
	movw r22,r18
	sub r22,r24
	sbc r23,r25
	movw r24,r22
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r20,r18
	add r20,r24
	adc r21,r25
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r22,r18
	add r22,r24
	adc r23,r25
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	ldd r24,Y+4
	ldd r25,Y+5
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r30,r18
	add r30,r24
	adc r31,r25
	adiw r28,98-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,98-62
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	movw r16,r24
	movw r18,r26
	adiw r28,98-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,98-62
	call XYcZ_add
	movw r24,r28
	subi r24,-96
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	movw r20,r28
	subi r20,-70
	sbci r21,-1
	movw r22,r28
	subi r22,-38
	sbci r23,-1
	movw r24,r28
	adiw r24,6
	call apply_z
	movw r18,r28
	subi r18,-6
	sbci r19,-1
	movw r24,r28
	subi r24,-86
	sbci r25,-1
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	ldd r24,Y+3
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-86
	sbci r19,-1
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	add r24,r18
	adc r25,r19
	movw r18,r28
	subi r18,-38
	sbci r19,-1
	ldd r20,Y+3
	movw r22,r18
	call uECC_vli_set
	nop
/* epilogue start */
	subi r28,-99
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	EccPoint_mult, .-EccPoint_mult
.global	regularize_k
	.type	regularize_k, @function
regularize_k:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,13
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 13 */
/* stack size = 15 */
.L__stack_usage = 15
	std Y+7,r25
	std Y+6,r24
	std Y+9,r23
	std Y+8,r22
	std Y+11,r21
	std Y+10,r20
	std Y+13,r19
	std Y+12,r18
	ldd r24,Y+12
	ldd r25,Y+13
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,31
	tst r25
	brge .L144
	adiw r24,31
.L144:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	std Y+1,r24
	ldd r24,Y+12
	ldd r25,Y+13
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	std Y+3,r25
	std Y+2,r24
	ldd r24,Y+12
	ldd r25,Y+13
	movw r20,r24
	subi r20,-20
	sbci r21,-1
	ldd r22,Y+6
	ldd r23,Y+7
	ldd r24,Y+8
	ldd r25,Y+9
	ldd r18,Y+1
	call uECC_vli_add
	or r24,r25
	brne .L145
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	ldd r18,Y+2
	ldd r19,Y+3
	cp r18,r24
	cpc r19,r25
	brge .L146
	ldd r18,Y+2
	ldd r19,Y+3
	ldd r24,Y+8
	ldd r25,Y+9
	movw r22,r18
	call uECC_vli_testBit
	or r24,r25
	breq .L146
.L145:
	ldi r24,lo8(1)
	ldi r25,0
	rjmp .L147
.L146:
	ldi r24,0
	ldi r25,0
.L147:
	std Y+5,r25
	std Y+4,r24
	ldd r24,Y+12
	ldd r25,Y+13
	movw r20,r24
	subi r20,-20
	sbci r21,-1
	ldd r22,Y+8
	ldd r23,Y+9
	ldd r24,Y+10
	ldd r25,Y+11
	ldd r18,Y+1
	call uECC_vli_add
	ldd r24,Y+4
	ldd r25,Y+5
/* epilogue start */
	adiw r28,13
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	regularize_k, .-regularize_k
.global	EccPoint_compute_public_key
	.type	EccPoint_compute_public_key, @function
EccPoint_compute_public_key:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,44
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 44 */
/* stack size = 50 */
.L__stack_usage = 50
	std Y+40,r25
	std Y+39,r24
	std Y+42,r23
	std Y+41,r22
	std Y+44,r21
	std Y+43,r20
	movw r24,r28
	adiw r24,3
	std Y+36,r25
	std Y+35,r24
	movw r24,r28
	adiw r24,19
	std Y+38,r25
	std Y+37,r24
	ldd r18,Y+43
	ldd r19,Y+44
	movw r20,r28
	subi r20,-19
	sbci r21,-1
	movw r22,r28
	subi r22,-3
	sbci r23,-1
	ldd r24,Y+41
	ldd r25,Y+42
	call regularize_k
	std Y+2,r25
	std Y+1,r24
	ldd r24,Y+43
	ldd r25,Y+44
	movw r26,r24
	adiw r26,2
	ld r24,X+
	ld r25,X
	movw r30,r24
	adiw r30,1
	ldi r18,lo8(1)
	ldd r24,Y+1
	ldd r25,Y+2
	or r24,r25
	breq .L150
	ldi r18,0
.L150:
	mov r24,r18
	ldi r25,0
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,34
	movw r26,r24
	ld r20,X+
	ld r21,X
	ldd r24,Y+43
	ldd r25,Y+44
	movw r22,r24
	subi r22,-36
	sbci r23,-1
	ldd r18,Y+43
	ldd r19,Y+44
	ldd r24,Y+39
	ldd r25,Y+40
	movw r14,r18
	movw r16,r30
	ldi r18,0
	ldi r19,0
	call EccPoint_mult
	ldd r18,Y+43
	ldd r19,Y+44
	ldd r24,Y+39
	ldd r25,Y+40
	movw r22,r18
	call EccPoint_isZero
	or r24,r25
	breq .L151
	ldi r24,0
	ldi r25,0
	rjmp .L153
.L151:
	ldi r24,lo8(1)
	ldi r25,0
.L153:
/* epilogue start */
	adiw r28,44
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	EccPoint_compute_public_key, .-EccPoint_compute_public_key
.global	uECC_vli_nativeToBytes
	.type	uECC_vli_nativeToBytes, @function
uECC_vli_nativeToBytes:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,9
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 9 */
/* stack size = 11 */
.L__stack_usage = 11
	std Y+5,r25
	std Y+4,r24
	std Y+7,r23
	std Y+6,r22
	std Y+9,r21
	std Y+8,r20
	std Y+1,__zero_reg__
	rjmp .L155
.L156:
	ldd r24,Y+6
	ldd r25,Y+7
	movw r18,r24
	subi r18,1
	sbc r19,__zero_reg__
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	std Y+3,r25
	std Y+2,r24
	ldd r24,Y+2
	ldd r25,Y+3
	lsr r25
	ror r24
	lsr r25
	ror r24
	lsl r24
	rol r25
	ldd r18,Y+8
	ldd r19,Y+9
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r18,Y+2
	ldd r19,Y+3
	andi r18,3
	clr r19
	lsl r18
	rol r19
	lsl r18
	rol r19
	lsl r18
	rol r19
	movw r20,r24
	rjmp 2f
	1:
	lsr r21
	ror r20
	2:
	dec r18
	brpl 1b
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	ldd r18,Y+4
	ldd r19,Y+5
	add r24,r18
	adc r25,r19
	mov r18,r20
	movw r30,r24
	st Z,r18
	ldd r24,Y+1
	subi r24,lo8(-(1))
	std Y+1,r24
.L155:
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	ldd r18,Y+6
	ldd r19,Y+7
	cp r24,r18
	cpc r25,r19
	brge .+2
	rjmp .L156
	nop
/* epilogue start */
	adiw r28,9
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_nativeToBytes, .-uECC_vli_nativeToBytes
.global	uECC_vli_bytesToNative
	.type	uECC_vli_bytesToNative, @function
uECC_vli_bytesToNative:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,9
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 9 */
/* stack size = 11 */
.L__stack_usage = 11
	std Y+5,r25
	std Y+4,r24
	std Y+7,r23
	std Y+6,r22
	std Y+9,r21
	std Y+8,r20
	ldd r24,Y+8
	ldd r25,Y+9
	adiw r24,3
	tst r25
	brge .L158
	adiw r24,3
.L158:
	asr r25
	ror r24
	asr r25
	ror r24
	mov r18,r24
	ldd r24,Y+4
	ldd r25,Y+5
	mov r22,r18
	call uECC_vli_clear
	std Y+1,__zero_reg__
	rjmp .L159
.L160:
	ldd r24,Y+8
	ldd r25,Y+9
	movw r18,r24
	subi r18,1
	sbc r19,__zero_reg__
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r20,r18
	sub r20,r24
	sbc r21,r25
	movw r24,r20
	std Y+3,r25
	std Y+2,r24
	ldd r24,Y+2
	ldd r25,Y+3
	lsr r25
	ror r24
	lsr r25
	ror r24
	movw r18,r24
	lsl r18
	rol r19
	ldd r20,Y+4
	ldd r21,Y+5
	add r18,r20
	adc r19,r21
	movw r30,r18
	ld r20,Z
	ldd r21,Z+1
	ldd r18,Y+1
	mov __tmp_reg__,r18
	lsl r0
	sbc r19,r19
	ldd r22,Y+6
	ldd r23,Y+7
	add r18,r22
	adc r19,r23
	movw r30,r18
	ld r18,Z
	mov r18,r18
	ldi r19,0
	ldd r22,Y+2
	ldd r23,Y+3
	andi r22,3
	clr r23
	lsl r22
	rol r23
	lsl r22
	rol r23
	lsl r22
	rol r23
	rjmp 2f
	1:
	lsl r18
	rol r19
	2:
	dec r22
	brpl 1b
	lsl r24
	rol r25
	ldd r22,Y+4
	ldd r23,Y+5
	add r24,r22
	adc r25,r23
	or r18,r20
	or r19,r21
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+1
	subi r24,lo8(-(1))
	std Y+1,r24
.L159:
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	ldd r18,Y+8
	ldd r19,Y+9
	cp r24,r18
	cpc r25,r19
	brge .+2
	rjmp .L160
	nop
/* epilogue start */
	adiw r28,9
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_vli_bytesToNative, .-uECC_vli_bytesToNative
.global	uECC_generate_random_int
	.type	uECC_generate_random_int, @function
uECC_generate_random_int:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,11
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 11 */
/* stack size = 13 */
.L__stack_usage = 13
	std Y+8,r25
	std Y+7,r24
	std Y+10,r23
	std Y+9,r22
	std Y+11,r20
	ldi r24,lo8(-1)
	ldi r25,lo8(-1)
	std Y+4,r25
	std Y+3,r24
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r22,Y+11
	call uECC_vli_numBits
	std Y+6,r25
	std Y+5,r24
	lds r24,g_rng_function
	lds r25,g_rng_function+1
	or r24,r25
	brne .L162
	ldi r24,0
	ldi r25,0
	rjmp .L163
.L162:
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	rjmp .L164
.L167:
	lds r18,g_rng_function
	lds r19,g_rng_function+1
	ldd r24,Y+11
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	movw r20,r24
	ldd r24,Y+7
	ldd r25,Y+8
	movw r22,r20
	movw r30,r18
	icall
	or r24,r25
	brne .L165
	ldi r24,0
	ldi r25,0
	rjmp .L163
.L165:
	ldd r24,Y+11
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	subi r24,1
	sbci r25,-128
	lsl r24
	rol r25
	ldd r18,Y+7
	ldd r19,Y+8
	add r24,r18
	adc r25,r19
	movw r30,r24
	ld r20,Z
	ldd r21,Z+1
	ldd r24,Y+11
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	movw r18,r24
	lsl r18
	rol r19
	swap r18
	swap r19
	andi r19,0xf0
	eor r19,r18
	andi r18,0xf0
	eor r19,r18
	ldd r24,Y+5
	ldd r25,Y+6
	sub r18,r24
	sbc r19,r25
	ldd r24,Y+3
	ldd r25,Y+4
	movw r22,r24
	rjmp 2f
	1:
	lsr r23
	ror r22
	2:
	dec r18
	brpl 1b
	movw r18,r22
	ldd r24,Y+11
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	subi r24,1
	sbci r25,-128
	lsl r24
	rol r25
	ldd r22,Y+7
	ldd r23,Y+8
	add r24,r22
	adc r25,r23
	and r18,r20
	and r19,r21
	movw r30,r24
	std Z+1,r19
	st Z,r18
	ldd r24,Y+7
	ldd r25,Y+8
	ldd r22,Y+11
	call uECC_vli_isZero
	or r24,r25
	brne .L166
	ldd r18,Y+7
	ldd r19,Y+8
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r20,Y+11
	movw r22,r18
	call uECC_vli_cmp
	cpi r24,lo8(1)
	brne .L166
	ldi r24,lo8(1)
	ldi r25,0
	rjmp .L163
.L166:
	ldd r24,Y+1
	ldd r25,Y+2
	adiw r24,1
	std Y+2,r25
	std Y+1,r24
.L164:
	ldd r24,Y+1
	ldd r25,Y+2
	cpi r24,64
	cpc r25,__zero_reg__
	brsh .+2
	rjmp .L167
	ldi r24,0
	ldi r25,0
.L163:
/* epilogue start */
	adiw r28,11
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_generate_random_int, .-uECC_generate_random_int
.global	uECC_valid_point
	.type	uECC_valid_point, @function
uECC_valid_point:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,37
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 37 */
/* stack size = 39 */
.L__stack_usage = 39
	std Y+35,r25
	std Y+34,r24
	std Y+37,r23
	std Y+36,r22
	ldd r24,Y+36
	ldd r25,Y+37
	movw r30,r24
	ld r24,Z
	std Y+1,r24
	ldd r18,Y+36
	ldd r19,Y+37
	ldd r24,Y+34
	ldd r25,Y+35
	movw r22,r18
	call EccPoint_isZero
	or r24,r25
	breq .L169
	ldi r24,lo8(-1)
	ldi r25,lo8(-1)
	rjmp .L174
.L169:
	ldd r24,Y+36
	ldd r25,Y+37
	adiw r24,4
	ldd r18,Y+34
	ldd r19,Y+35
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	brne .L171
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+34
	ldd r19,Y+35
	add r18,r24
	adc r19,r25
	ldd r24,Y+36
	ldd r25,Y+37
	adiw r24,4
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_cmp_unsafe
	cpi r24,lo8(1)
	breq .L172
.L171:
	ldi r24,lo8(-2)
	ldi r25,lo8(-1)
	rjmp .L174
.L172:
	ldd r24,Y+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	ldd r18,Y+34
	ldd r19,Y+35
	add r18,r24
	adc r19,r25
	ldd r20,Y+36
	ldd r21,Y+37
	movw r24,r28
	adiw r24,2
	movw r22,r18
	call uECC_vli_modSquare_fast
	ldd r24,Y+36
	ldd r25,Y+37
	subi r24,-86
	sbci r25,-1
	movw r30,r24
	ld r18,Z
	ldd r19,Z+1
	ldd r20,Y+36
	ldd r21,Y+37
	ldd r22,Y+34
	ldd r23,Y+35
	movw r24,r28
	adiw r24,18
	movw r30,r18
	icall
	movw r18,r28
	subi r18,-18
	sbci r19,-1
	movw r24,r28
	adiw r24,2
	ldd r20,Y+1
	movw r22,r18
	call uECC_vli_equal
	or r24,r25
	breq .L173
	ldi r24,lo8(-3)
	ldi r25,lo8(-1)
	rjmp .L174
.L173:
	ldi r24,0
	ldi r25,0
.L174:
/* epilogue start */
	adiw r28,37
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_valid_point, .-uECC_valid_point
.global	uECC_valid_public_key
	.type	uECC_valid_public_key, @function
uECC_valid_public_key:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,36
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 36 */
/* stack size = 38 */
.L__stack_usage = 38
	std Y+34,r25
	std Y+33,r24
	std Y+36,r23
	std Y+35,r22
	ldd r24,Y+35
	ldd r25,Y+36
	movw r30,r24
	ldd r24,Z+1
	mov r18,r24
	lsl r24
	sbc r19,r19
	ldd r24,Y+33
	ldd r25,Y+34
	movw r20,r18
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_bytesToNative
	ldd r24,Y+35
	ldd r25,Y+36
	movw r30,r24
	ldd r24,Z+1
	mov r20,r24
	lsl r24
	sbc r21,r21
	ldd r24,Y+35
	ldd r25,Y+36
	movw r30,r24
	ldd r24,Z+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	ldd r18,Y+33
	ldd r19,Y+34
	movw r22,r18
	add r22,r24
	adc r23,r25
	ldd r24,Y+35
	ldd r25,Y+36
	movw r30,r24
	ld r24,Z
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	call uECC_vli_bytesToNative
	ldd r24,Y+35
	ldd r25,Y+36
	adiw r24,36
	ldi r20,lo8(16)
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_cmp_unsafe
	tst r24
	brne .L176
	ldi r24,lo8(-4)
	ldi r25,lo8(-1)
	rjmp .L178
.L176:
	ldd r24,Y+35
	ldd r25,Y+36
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_valid_point
.L178:
/* epilogue start */
	adiw r28,36
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_valid_public_key, .-uECC_valid_public_key
.global	uECC_compute_public_key
	.type	uECC_compute_public_key, @function
uECC_compute_public_key:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,54
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 54 */
/* stack size = 56 */
.L__stack_usage = 56
	std Y+50,r25
	std Y+49,r24
	std Y+52,r23
	std Y+51,r22
	std Y+54,r21
	std Y+53,r20
	ldd r24,Y+53
	ldd r25,Y+54
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,7
	tst r25
	brge .L180
	adiw r24,7
.L180:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	movw r18,r24
	ldd r24,Y+49
	ldd r25,Y+50
	movw r20,r18
	movw r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_bytesToNative
	ldd r24,Y+53
	ldd r25,Y+54
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,31
	tst r25
	brge .L181
	adiw r24,31
.L181:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	mov r22,r24
	movw r24,r28
	adiw r24,1
	call uECC_vli_isZero
	or r24,r25
	breq .L182
	ldi r24,0
	ldi r25,0
	rjmp .L187
.L182:
	ldd r24,Y+53
	ldd r25,Y+54
	movw r30,r24
	ldd r24,Z+2
	ldd r25,Z+3
	adiw r24,31
	tst r25
	brge .L184
	adiw r24,31
.L184:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
	mov r18,r24
	ldd r24,Y+53
	ldd r25,Y+54
	adiw r24,20
	mov r20,r18
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	movw r22,r18
	call uECC_vli_cmp
	cpi r24,lo8(1)
	breq .L185
	ldi r24,0
	ldi r25,0
	rjmp .L187
.L185:
	ldd r18,Y+53
	ldd r19,Y+54
	movw r24,r28
	adiw r24,17
	movw r20,r18
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	movw r22,r18
	call EccPoint_compute_public_key
	or r24,r25
	brne .L186
	ldi r24,0
	ldi r25,0
	rjmp .L187
.L186:
	ldd r24,Y+53
	ldd r25,Y+54
	movw r30,r24
	ldd r24,Z+1
	mov r18,r24
	lsl r24
	sbc r19,r19
	movw r20,r28
	subi r20,-17
	sbci r21,-1
	ldd r24,Y+51
	ldd r25,Y+52
	movw r22,r18
	call uECC_vli_nativeToBytes
	ldd r24,Y+53
	ldd r25,Y+54
	movw r30,r24
	ld r24,Z
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-17
	sbci r19,-1
	movw r20,r18
	add r20,r24
	adc r21,r25
	ldd r24,Y+53
	ldd r25,Y+54
	movw r30,r24
	ldd r24,Z+1
	mov r22,r24
	lsl r24
	sbc r23,r23
	ldd r24,Y+53
	ldd r25,Y+54
	movw r30,r24
	ldd r24,Z+1
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	ldd r18,Y+51
	ldd r19,Y+52
	add r24,r18
	adc r25,r19
	call uECC_vli_nativeToBytes
	ldi r24,lo8(1)
	ldi r25,0
.L187:
/* epilogue start */
	adiw r28,54
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	uECC_compute_public_key, .-uECC_compute_public_key
	.ident	"GCC: (GNU) 7.3.0"
.global __do_copy_data
