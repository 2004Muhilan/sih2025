	.file	"ecc_avr.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	ecc_point_add_avr
	.type	ecc_point_add_avr, @function
ecc_point_add_avr:
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,28
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 28 */
/* stack size = 44 */
.L__stack_usage = 44
	std Y+9,r18
	std Y+10,r19
	std Y+11,r20
	std Y+12,r21
	std Y+13,r22
	std Y+14,r23
	std Y+15,r24
	std Y+16,r25
	std Y+17,r10
	std Y+18,r11
	std Y+19,r12
	std Y+20,r13
	std Y+21,r14
	std Y+22,r15
	std Y+23,r16
	std Y+24,r17
	ldd r12,Y+9
	ldd r13,Y+10
	ldd r14,Y+11
	ldd r15,Y+12
	ldd r8,Y+13
	ldd r9,Y+14
	ldd r10,Y+15
	ldd r11,Y+16
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	std Y+25,r18
	std Y+26,r19
	std Y+27,r20
	std Y+28,r21
	cp r12,r18
	cpc r13,r19
	cpc r14,r20
	cpc r15,r21
	brlo .+2
	rjmp .L2
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
	sub r22,r8
	sbc r23,r9
	sbc r24,r10
	sbc r25,r11
	sub r18,r12
	sbc r19,r13
	sbc r20,r14
	sbc r21,r15
	call __udivmodsi4
	movw r24,r20
	movw r22,r18
	ldd r18,Y+47
	ldd r19,Y+48
	ldd r20,Y+49
	ldd r21,Y+50
	call __udivmodsi4
	movw r4,r22
	movw r6,r24
	movw r20,r24
	movw r18,r22
	call __mulsi3
	sub r22,r12
	sbc r23,r13
	sbc r24,r14
	sbc r25,r15
	ldd r18,Y+25
	ldd r19,Y+26
	ldd r20,Y+27
	ldd r21,Y+28
	sub r22,r18
	sbc r23,r19
	sbc r24,r20
	sbc r25,r21
	ldd r18,Y+47
	ldd r19,Y+48
	ldd r20,Y+49
	ldd r21,Y+50
	call __udivmodsi4
	std Y+25,r22
	std Y+26,r23
	std Y+27,r24
	std Y+28,r25
	movw r20,r14
	movw r18,r12
	sub r18,r22
	sbc r19,r23
	sbc r20,r24
	sbc r21,r25
	movw r24,r6
	movw r22,r4
	call __mulsi3
	sub r22,r8
	sbc r23,r9
	sbc r24,r10
	sbc r25,r11
	ldd r18,Y+47
	ldd r19,Y+48
	ldd r20,Y+49
	ldd r21,Y+50
	call __udivmodsi4
	movw r8,r22
	movw r10,r24
	ldd r12,Y+25
	ldd r13,Y+26
	ldd r14,Y+27
	ldd r15,Y+28
.L2:
	std Y+1,r12
	std Y+2,r13
	std Y+3,r14
	std Y+4,r15
	std Y+5,r8
	std Y+6,r9
	std Y+7,r10
	std Y+8,r11
	mov r18,r12
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	mov r22,r8
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
/* epilogue start */
	adiw r28,28
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	ret
	.size	ecc_point_add_avr, .-ecc_point_add_avr
.global	ecc_scalar_mult_avr
	.type	ecc_scalar_mult_avr, @function
ecc_scalar_mult_avr:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,34
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 34 */
/* stack size = 52 */
.L__stack_usage = 52
	std Y+25,r18
	std Y+26,r19
	std Y+27,r20
	std Y+28,r21
	std Y+29,r22
	std Y+30,r23
	std Y+31,r24
	std Y+32,r25
	movw r6,r16
	ldi r24,lo8(8)
	movw r30,r28
	adiw r30,25
	movw r26,r28
	adiw r26,9
	0:
	ld r0,Z+
	st X+,r0
	dec r24
	brne 0b
	mov r9,__zero_reg__
	mov r5,__zero_reg__
	std Y+33,__zero_reg__
	std Y+34,__zero_reg__
	mov r8,__zero_reg__
	mov r2,__zero_reg__
	mov r3,__zero_reg__
	mov r4,__zero_reg__
.L4:
	cp r6,__zero_reg__
	cpc r7,__zero_reg__
	brne .L6
	ldd r24,Y+33
	std Y+7,r24
	ldd r24,Y+34
	std Y+8,r24
	mov r18,r8
	mov r19,r2
	mov r20,r3
	mov r21,r4
	mov r22,r9
	mov r23,r5
	ldd r24,Y+7
	ldd r25,Y+8
/* epilogue start */
	adiw r28,34
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L6:
	sbrs r6,0
	rjmp .L5
	std Y+17,r8
	std Y+18,r2
	std Y+19,r3
	std Y+20,r4
	std Y+21,r9
	std Y+22,r5
	ldd r24,Y+33
	std Y+23,r24
	ldd r24,Y+34
	std Y+24,r24
	push __zero_reg__
	push __zero_reg__
	ldi r24,lo8(-1)
	push r24
	ldi r24,lo8(-15)
	push r24
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
	call ecc_point_add_avr
	std Y+17,r18
	std Y+18,r19
	std Y+19,r20
	std Y+20,r21
	std Y+21,r22
	std Y+22,r23
	std Y+23,r24
	std Y+24,r25
	mov r8,r18
	mov r2,r19
	mov r3,r20
	mov r4,r21
	mov r9,r22
	mov r5,r23
	std Y+33,r24
	std Y+34,r25
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
.L5:
	push __zero_reg__
	push __zero_reg__
	ldi r24,lo8(-1)
	push r24
	ldi r24,lo8(-15)
	push r24
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	movw r18,r10
	movw r20,r12
	movw r22,r14
	movw r24,r16
	call ecc_point_add_avr
	std Y+9,r18
	std Y+10,r19
	std Y+11,r20
	std Y+12,r21
	std Y+13,r22
	std Y+14,r23
	std Y+15,r24
	std Y+16,r25
	lsr r7
	ror r6
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	rjmp .L4
	.size	ecc_scalar_mult_avr, .-ecc_scalar_mult_avr
	.ident	"GCC: (GNU) 7.3.0"
