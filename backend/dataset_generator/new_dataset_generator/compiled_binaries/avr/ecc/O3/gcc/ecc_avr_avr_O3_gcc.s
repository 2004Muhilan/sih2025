	.file	"ecc_avr.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	ecc_point_add_avr
	.type	ecc_point_add_avr, @function
ecc_point_add_avr:
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 32 */
/* stack size = 48 */
.L__stack_usage = 48
	std Y+9,r18
	std Y+10,r19
	std Y+11,r20
	std Y+12,r21
	std Y+13,r22
	std Y+14,r23
	std Y+15,r24
	std Y+16,r25
	std Y+17,r10
	std Y+18,r11
	std Y+19,r12
	std Y+20,r13
	std Y+21,r14
	std Y+22,r15
	std Y+23,r16
	std Y+24,r17
	ldd r12,Y+9
	ldd r13,Y+10
	ldd r14,Y+11
	ldd r15,Y+12
	ldd r8,Y+13
	ldd r9,Y+14
	ldd r10,Y+15
	ldd r11,Y+16
	ldd r4,Y+17
	ldd r5,Y+18
	ldd r6,Y+19
	ldd r7,Y+20
	cp r12,r4
	cpc r13,r5
	cpc r14,r6
	cpc r15,r7
	brlo .+2
	rjmp .L2
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
	sub r22,r8
	sbc r23,r9
	sbc r24,r10
	sbc r25,r11
	movw r20,r6
	movw r18,r4
	sub r18,r12
	sbc r19,r13
	sbc r20,r14
	sbc r21,r15
	call __udivmodsi4
	movw r24,r20
	movw r22,r18
	ldd r18,Y+51
	ldd r19,Y+52
	ldd r20,Y+53
	ldd r21,Y+54
	call __udivmodsi4
	std Y+25,r22
	std Y+26,r23
	std Y+27,r24
	std Y+28,r25
	movw r18,r22
	movw r20,r24
	call __mulsi3
	sub r22,r12
	sbc r23,r13
	sbc r24,r14
	sbc r25,r15
	sub r22,r4
	sbc r23,r5
	sbc r24,r6
	sbc r25,r7
	ldd r18,Y+51
	ldd r19,Y+52
	ldd r20,Y+53
	ldd r21,Y+54
	call __udivmodsi4
	std Y+29,r22
	std Y+30,r23
	std Y+31,r24
	std Y+32,r25
	movw r20,r14
	movw r18,r12
	sub r18,r22
	sbc r19,r23
	sbc r20,r24
	sbc r21,r25
	ldd r22,Y+25
	ldd r23,Y+26
	ldd r24,Y+27
	ldd r25,Y+28
	call __mulsi3
	sub r22,r8
	sbc r23,r9
	sbc r24,r10
	sbc r25,r11
	ldd r18,Y+51
	ldd r19,Y+52
	ldd r20,Y+53
	ldd r21,Y+54
	call __udivmodsi4
	movw r8,r22
	movw r10,r24
	ldd r12,Y+29
	ldd r13,Y+30
	ldd r14,Y+31
	ldd r15,Y+32
.L2:
	std Y+1,r12
	std Y+2,r13
	std Y+3,r14
	std Y+4,r15
	std Y+5,r8
	std Y+6,r9
	std Y+7,r10
	std Y+8,r11
	mov r18,r12
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	mov r22,r8
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
/* epilogue start */
	adiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	ret
	.size	ecc_point_add_avr, .-ecc_point_add_avr
.global	ecc_scalar_mult_avr
	.type	ecc_scalar_mult_avr, @function
ecc_scalar_mult_avr:
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,28
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 28 */
/* stack size = 44 */
.L__stack_usage = 44
	std Y+9,r18
	std Y+10,r19
	std Y+11,r20
	std Y+12,r21
	std Y+13,r22
	std Y+14,r23
	std Y+15,r24
	std Y+16,r25
	ldd r8,Y+9
	ldd r9,Y+10
	ldd r10,Y+11
	ldd r11,Y+12
	ldd r24,Y+13
	ldd r25,Y+14
	ldd r26,Y+15
	ldd r27,Y+16
	std Y+25,r24
	std Y+26,r25
	std Y+27,r26
	std Y+28,r27
	mov r12,__zero_reg__
	mov r13,__zero_reg__
	movw r14,r12
	mov r4,__zero_reg__
	mov r5,__zero_reg__
	movw r6,r4
	cp r16,__zero_reg__
	cpc r17,__zero_reg__
	brne .+2
	rjmp .L5
.L7:
	sbrs r16,0
	rjmp .L6
	cp r4,r8
	cpc r5,r9
	cpc r6,r10
	cpc r7,r11
	brlo .+2
	rjmp .L6
	ldd r22,Y+25
	ldd r23,Y+26
	ldd r24,Y+27
	ldd r25,Y+28
	sub r22,r12
	sbc r23,r13
	sbc r24,r14
	sbc r25,r15
	movw r20,r10
	movw r18,r8
	sub r18,r4
	sbc r19,r5
	sbc r20,r6
	sbc r21,r7
	call __udivmodsi4
	movw r24,r20
	movw r22,r18
	ldi r18,lo8(-15)
	ldi r19,lo8(-1)
	ldi r20,0
	ldi r21,0
	call __udivmodsi4
	std Y+17,r22
	std Y+18,r23
	std Y+19,r24
	std Y+20,r25
	movw r18,r22
	movw r20,r24
	call __mulsi3
	sub r22,r4
	sbc r23,r5
	sbc r24,r6
	sbc r25,r7
	sub r22,r8
	sbc r23,r9
	sbc r24,r10
	sbc r25,r11
	ldi r18,lo8(-15)
	ldi r19,lo8(-1)
	ldi r20,0
	ldi r21,0
	call __udivmodsi4
	std Y+21,r22
	std Y+22,r23
	std Y+23,r24
	std Y+24,r25
	movw r20,r6
	movw r18,r4
	sub r18,r22
	sbc r19,r23
	sbc r20,r24
	sbc r21,r25
	ldd r22,Y+17
	ldd r23,Y+18
	ldd r24,Y+19
	ldd r25,Y+20
	call __mulsi3
	sub r22,r12
	sbc r23,r13
	sbc r24,r14
	sbc r25,r15
	ldi r18,lo8(-15)
	ldi r19,lo8(-1)
	ldi r20,0
	ldi r21,0
	call __udivmodsi4
	movw r12,r22
	movw r14,r24
	ldd r4,Y+21
	ldd r5,Y+22
	ldd r6,Y+23
	ldd r7,Y+24
.L6:
	lsr r17
	ror r16
	cp r16,__zero_reg__
	cpc r17,__zero_reg__
	breq .+2
	rjmp .L7
.L5:
	std Y+1,r4
	std Y+2,r5
	std Y+3,r6
	std Y+4,r7
	std Y+5,r12
	std Y+6,r13
	std Y+7,r14
	std Y+8,r15
	mov r18,r4
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	mov r22,r12
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
/* epilogue start */
	adiw r28,28
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	ret
	.size	ecc_scalar_mult_avr, .-ecc_scalar_mult_avr
	.ident	"GCC: (GNU) 7.3.0"
