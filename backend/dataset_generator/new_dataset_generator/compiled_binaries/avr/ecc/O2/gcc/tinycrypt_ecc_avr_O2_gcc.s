	.file	"tinycrypt_ecc.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
	.type	uECC_vli_mult, @function
uECC_vli_mult:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,39
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 39 */
/* stack size = 57 */
.L__stack_usage = 57
	std Y+25,r25
	std Y+24,r24
	std Y+15,r23
	std Y+14,r22
	std Y+17,r21
	std Y+16,r20
	std Y+23,r18
	cp __zero_reg__,r18
	brlt .+2
	rjmp .L11
	std Y+13,r25
	std Y+12,r24
	std Y+9,__zero_reg__
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	std Y+6,__zero_reg__
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L5:
	ldd r18,Y+8
	std Y+10,r18
	ldd r16,Y+6
	ldd r17,Y+7
	std Y+7,__zero_reg__
	std Y+6,__zero_reg__
	std Y+1,__zero_reg__
	mov r7,__zero_reg__
.L4:
	mov r18,r7
	mov __tmp_reg__,r7
	lsl r0
	sbc r19,r19
	ldd r30,Y+8
	ldd r31,Y+9
	sub r30,r18
	sbc r31,r19
	lsl r30
	rol r31
	ldd r20,Y+16
	ldd r21,Y+17
	add r30,r20
	adc r31,r21
	ld r22,Z
	ldd r23,Z+1
	ldi r25,0
	ldi r24,0
	lsl r18
	rol r19
	ldd r30,Y+14
	ldd r31,Y+15
	add r30,r18
	adc r31,r19
	ld r18,Z
	ldd r19,Z+1
	ldi r21,0
	ldi r20,0
	call __umulsidi3
	mov r3,r18
	mov r4,r19
	mov r5,r20
	mov r6,r21
	std Y+1,r22
	std Y+2,r23
	std Y+3,r24
	std Y+4,r25
	movw r18,r16
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,0
	ldi r16,lo8(32)
	call __ashldi3
	movw r12,r20
	movw r14,r22
	movw r16,r24
	movw r20,r8
	ldi r23,0
	ldi r22,0
	ldi r24,0
	ldi r25,0
	movw r26,r24
	std Y+32,r8
	std Y+33,r21
	std Y+34,r22
	std Y+35,r23
	std Y+36,r24
	std Y+37,r25
	std Y+38,r26
	std Y+39,r27
	mov r10,r8
	or r10,r18
	mov r11,r21
	or r11,r19
	mov r18,r3
	mov r19,r4
	mov r20,r5
	mov r21,r6
	ldd r22,Y+1
	ldd r23,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	call __adddi3
	mov r31,r18
	mov r30,r19
	mov r2,r20
	std Y+5,r21
	std Y+20,r22
	std Y+18,r23
	mov r27,r24
	mov r26,r25
	clr r8
	inc r8
	mov r9,__zero_reg__
	mov r18,r3
	mov r19,r4
	mov r20,r5
	mov r21,r6
	ldd r22,Y+1
	ldd r23,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	mov r10,r31
	mov r11,r30
	mov r12,r2
	ldd r13,Y+5
	ldd r14,Y+20
	ldd r15,Y+18
	mov r16,r27
	mov r17,r26
	call __cmpdi2
	breq .+2
	brsh .L3
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L3:
	ldd r22,Y+6
	ldd r23,Y+7
	add r22,r8
	adc r23,r9
	std Y+7,r23
	std Y+6,r22
	mov r18,r31
	mov r19,r30
	mov r20,r2
	ldd r21,Y+5
	ldd r22,Y+20
	ldd r23,Y+18
	mov r24,r27
	mov r25,r26
	ldi r16,lo8(32)
	call __lshrdi3
	mov r16,r18
	mov r17,r19
	movw r24,r30
	mov r8,r25
	mov r9,r24
	inc r7
	ldd r23,Y+10
	cp r23,r7
	brlt .+2
	rjmp .L4
	ldd r26,Y+12
	ldd r27,Y+13
	st X+,r8
	st X+,r9
	std Y+13,r27
	std Y+12,r26
	ldd r30,Y+8
	ldd r31,Y+9
	adiw r30,1
	std Y+9,r31
	std Y+8,r30
	movw r8,r16
	ldd r31,Y+23
	cp r30,r31
	brge .+2
	rjmp .L5
.L2:
	ldd r18,Y+23
	mov __tmp_reg__,r18
	lsl r0
	sbc r19,r19
	std Y+29,r19
	std Y+28,r18
	movw r24,r18
	lsl r18
	rol r19
	movw r20,r18
	subi r20,1
	sbc r21,__zero_reg__
	std Y+27,r21
	std Y+26,r20
	cp r24,r20
	cpc r25,r21
	brlt .+2
	rjmp .L6
	ldi r18,lo8(1)
	ldd r23,Y+23
	sub r18,r23
	com r18
	std Y+22,r18
	std Y+21,r23
	ldi r26,lo8(1)
	std Y+20,r26
	std Y+19,r25
	std Y+18,r24
	ldd r18,Y+14
	ldd r19,Y+15
	subi r18,-2
	sbci r19,-1
	std Y+31,r19
	std Y+30,r18
.L10:
	ldd r19,Y+23
	ldd r20,Y+20
	cp r20,r19
	brlt .+2
	rjmp .L12
	mov r18,r20
	lsl r20
	sbc r19,r19
	sub r24,r18
	sbc r25,r19
	adiw r24,1
	lsl r24
	rol r25
	ldd r22,Y+16
	ldd r23,Y+17
	add r22,r24
	adc r23,r25
	std Y+11,r23
	std Y+10,r22
	movw r24,r18
	lsl r24
	rol r25
	ldd r26,Y+14
	ldd r27,Y+15
	add r24,r26
	adc r25,r27
	ldd r27,Y+22
	add r18,r27
	adc r19,__zero_reg__
	lsl r18
	rol r19
	ldd r30,Y+30
	ldd r31,Y+31
	add r30,r18
	adc r31,r19
	std Y+13,r31
	std Y+12,r30
	movw r8,r16
	ldd r16,Y+6
	ldd r17,Y+7
	std Y+7,__zero_reg__
	std Y+6,__zero_reg__
	std Y+33,r25
	std Y+32,r24
.L9:
	ldd r26,Y+32
	ldd r27,Y+33
	ld r18,X+
	ld r19,X+
	std Y+33,r27
	std Y+32,r26
	ldd r30,Y+10
	ldd r31,Y+11
	ld r23,-Z
	ld r22,-Z
	std Y+11,r31
	std Y+10,r30
	ldi r25,0
	ldi r24,0
	ldi r21,0
	ldi r20,0
	call __umulsidi3
	movw r2,r18
	mov r4,r20
	std Y+1,r21
	std Y+2,r22
	std Y+3,r23
	std Y+4,r24
	std Y+5,r25
	movw r18,r16
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,0
	ldi r16,lo8(32)
	call __ashldi3
	movw r12,r20
	movw r14,r22
	movw r16,r24
	movw r20,r8
	mov r10,r18
	or r10,r8
	mov r11,r19
	or r11,r21
	movw r18,r2
	mov r20,r4
	ldd r21,Y+1
	ldd r22,Y+2
	ldd r23,Y+3
	ldd r24,Y+4
	ldd r25,Y+5
	call __adddi3
	mov r31,r18
	mov r30,r19
	std Y+8,r20
	mov r5,r21
	movw r8,r22
	mov r27,r24
	mov r26,r25
	clr r6
	inc r6
	mov r7,__zero_reg__
	movw r18,r2
	mov r20,r4
	ldd r21,Y+1
	ldd r22,Y+2
	ldd r23,Y+3
	ldd r24,Y+4
	ldd r25,Y+5
	mov r10,r31
	mov r11,r30
	ldd r12,Y+8
	mov r13,r5
	movw r14,r8
	mov r16,r27
	mov r17,r26
	call __cmpdi2
	breq .+2
	brsh .L8
	mov r7,__zero_reg__
	mov r6,__zero_reg__
.L8:
	ldd r18,Y+6
	ldd r19,Y+7
	add r18,r6
	adc r19,r7
	std Y+7,r19
	std Y+6,r18
	mov r18,r31
	mov r19,r30
	ldd r20,Y+8
	mov r21,r5
	movw r22,r8
	mov r24,r27
	mov r25,r26
	ldi r16,lo8(32)
	call __lshrdi3
	mov r16,r18
	mov r17,r19
	movw r24,r30
	mov r8,r25
	mov r9,r24
	ldd r20,Y+12
	ldd r21,Y+13
	ldd r22,Y+32
	ldd r23,Y+33
	cp r20,r22
	cpc r21,r23
	breq .+2
	rjmp .L9
.L7:
	ldd r30,Y+18
	ldd r31,Y+19
	lsl r30
	rol r31
	ldd r24,Y+24
	ldd r25,Y+25
	add r30,r24
	adc r31,r25
	std Z+1,r9
	st Z,r8
	ldd r25,Y+21
	subi r25,lo8(-(1))
	std Y+21,r25
	mov r26,r25
	mov __tmp_reg__,r26
	lsl r0
	sbc r27,r27
	std Y+19,r27
	std Y+18,r26
	movw r24,r26
	ldd r27,Y+20
	subi r27,lo8(-(1))
	std Y+20,r27
	ldd r30,Y+22
	subi r30,lo8(-(-1))
	std Y+22,r30
	ldd r18,Y+26
	ldd r19,Y+27
	cp r24,r18
	cpc r25,r19
	brge .+2
	rjmp .L10
.L6:
	ldd r30,Y+28
	ldd r31,Y+29
	lsl r30
	rol r31
	lsl r30
	rol r31
	ldd r20,Y+24
	ldd r21,Y+25
	add r30,r20
	adc r31,r21
	sbiw r30,2
	std Z+1,r17
	st Z,r16
/* epilogue start */
	adiw r28,39
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L12:
	movw r8,r16
	ldd r16,Y+6
	ldd r17,Y+7
	std Y+7,__zero_reg__
	std Y+6,__zero_reg__
	rjmp .L7
.L11:
	std Y+7,__zero_reg__
	std Y+6,__zero_reg__
	ldi r17,0
	ldi r16,0
	rjmp .L2
	.size	uECC_vli_mult, .-uECC_vli_mult
	.type	vli_modInv_update, @function
vli_modInv_update:
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 9 */
.L__stack_usage = 9
	mov r11,r20
	movw r30,r24
	ld r26,Z
	ldd r27,Z+1
	sbrs r26,0
	rjmp .L19
	cp __zero_reg__,r20
	brlt .+2
	rjmp .L19
	movw r28,r22
	clr r14
	dec r14
	add r14,r20
	mov r15,__zero_reg__
	lsl r14
	rol r15
	movw r18,r22
	subi r18,-2
	sbci r19,-1
	add r14,r18
	adc r15,r19
	ldi r23,0
	ldi r22,0
	rjmp .L23
.L30:
	ld r26,Z
	ldd r27,Z+1
.L23:
	ld r18,Y+
	ld r19,Y+
	movw r20,r22
	add r20,r26
	adc r21,r27
	add r18,r20
	adc r19,r21
	ldi r16,lo8(1)
	ldi r17,0
	cp r18,r26
	cpc r19,r27
	brlo .L20
	ldi r17,0
	ldi r16,0
.L20:
	ldi r20,lo8(1)
	ldi r21,0
	cp r18,r26
	cpc r19,r27
	brne .L21
	ldi r21,0
	ldi r20,0
.L21:
	mul r16,r20
	movw r12,r0
	mul r16,r21
	add r13,r0
	mul r17,r20
	add r13,r0
	clr r1
	ldi r20,lo8(1)
	ldi r21,0
	cp r18,r26
	cpc r19,r27
	breq .L22
	ldi r21,0
	ldi r20,0
.L22:
	mul r20,r22
	movw r26,r0
	mul r20,r23
	add r27,r0
	mul r21,r22
	add r27,r0
	clr r1
	movw r22,r12
	or r22,r26
	or r23,r27
	st Z+,r18
	st Z+,r19
	cp r14,r28
	cpc r15,r29
	brne .L30
.L19:
	mov r30,r11
	lsl r30
	sbc r31,r31
	add r30,r24
	adc r31,r25
	cp r24,r30
	cpc r25,r31
	brsh .L18
.L25:
	ld r19,-Z
	ld r18,-Z
	lsr r19
	ror r18
	std Z+1,r19
	st Z,r18
	cp r24,r30
	cpc r25,r31
	brlo .L25
.L18:
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	ret
	.size	vli_modInv_update, .-vli_modInv_update
.global	vli_mmod_fast_secp256r1
	.type	vli_mmod_fast_secp256r1, @function
vli_mmod_fast_secp256r1:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 16 */
/* stack size = 34 */
.L__stack_usage = 34
	movw r10,r24
	movw r2,r22
	movw r26,r22
	movw r20,r22
	subi r20,-16
	sbci r21,-1
.L32:
	ld r18,X+
	ld r19,X+
	movw r30,r24
	st Z+,r18
	st Z+,r19
	movw r24,r30
	cp r20,r26
	cpc r21,r27
	brne .L32
	std Y+6,__zero_reg__
	std Y+5,__zero_reg__
	std Y+4,__zero_reg__
	std Y+3,__zero_reg__
	std Y+2,__zero_reg__
	std Y+1,__zero_reg__
	movw r26,r2
	adiw r26,22
	ld r24,X+
	ld r25,X
	sbiw r26,22+1
	std Y+8,r25
	std Y+7,r24
	adiw r26,24
	ld r24,X+
	ld r25,X
	sbiw r26,24+1
	std Y+10,r25
	std Y+9,r24
	adiw r26,26
	ld r24,X+
	ld r25,X
	sbiw r26,26+1
	std Y+12,r25
	std Y+11,r24
	adiw r26,28
	ld r24,X+
	ld r25,X
	sbiw r26,28+1
	std Y+14,r25
	std Y+13,r24
	adiw r26,30
	ld r24,X+
	ld r25,X
	std Y+16,r25
	std Y+15,r24
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r8,r28
	ldi r27,17
	add r8,r27
	adc r9,__zero_reg__
	movw r18,r22
	ldi r21,0
	ldi r20,0
	mov r13,__zero_reg__
	mov r12,__zero_reg__
	rjmp .L37
.L105:
	ld r20,Z
	ldd r21,Z+1
.L37:
	movw r24,r20
	lsl r24
	rol r25
	add r24,r12
	adc r25,r13
	ldi r30,lo8(1)
	ldi r31,0
	cp r24,r20
	cpc r25,r21
	brlo .L33
	ldi r31,0
	ldi r30,0
.L33:
	ldi r16,lo8(1)
	ldi r17,0
	cp r24,r20
	cpc r25,r21
	brne .L34
	ldi r17,0
	ldi r16,0
.L34:
	mul r30,r16
	movw r14,r0
	mul r30,r17
	add r15,r0
	mul r31,r16
	add r15,r0
	clr r1
	ldi r30,lo8(1)
	ldi r31,0
	cp r24,r20
	cpc r25,r21
	breq .L35
	ldi r31,0
	ldi r30,0
.L35:
	mul r30,r12
	movw r20,r0
	mul r30,r13
	add r21,r0
	mul r31,r12
	add r21,r0
	clr r1
	movw r12,r14
	or r12,r20
	or r13,r21
	movw r30,r18
	st Z+,r24
	st Z+,r25
	movw r18,r30
	cp r8,r30
	cpc r9,r31
	brne .L105
	movw r30,r22
	movw r8,r10
	ldi r17,0
	ldi r16,0
.L36:
	movw r26,r8
	ld r20,X+
	ld r21,X+
	movw r8,r26
	ld r24,Z+
	ld r25,Z+
	add r24,r20
	adc r25,r21
	add r24,r16
	adc r25,r17
	clr r6
	inc r6
	mov r7,__zero_reg__
	cp r24,r20
	cpc r25,r21
	brlo .L38
	mov r7,__zero_reg__
	mov r6,__zero_reg__
.L38:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r20,r24
	cpc r21,r25
	brne .L39
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L39:
	mul r6,r14
	movw r4,r0
	mul r6,r15
	add r5,r0
	mul r7,r14
	add r5,r0
	clr r1
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r20,r24
	cpc r21,r25
	breq .L40
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L40:
	mul r14,r16
	movw r20,r0
	mul r14,r17
	add r21,r0
	mul r15,r16
	add r21,r0
	clr r1
	movw r16,r4
	or r16,r20
	or r17,r21
	movw r20,r8
	subi r20,2
	sbc r21,__zero_reg__
	movw r26,r20
	st X+,r24
	st X,r25
	cp r18,r30
	cpc r19,r31
	brne .L36
	movw r6,r16
	add r6,r12
	adc r7,r13
	movw r26,r2
	adiw r26,24
	ld r24,X+
	ld r25,X
	sbiw r26,24+1
	std Y+8,r25
	std Y+7,r24
	adiw r26,26
	ld r24,X+
	ld r25,X
	sbiw r26,26+1
	std Y+10,r25
	std Y+9,r24
	adiw r26,28
	ld r24,X+
	ld r25,X
	sbiw r26,28+1
	std Y+12,r25
	std Y+11,r24
	adiw r26,30
	ld r24,X+
	ld r25,X
	std Y+14,r25
	std Y+13,r24
	std Y+16,__zero_reg__
	std Y+15,__zero_reg__
	movw r20,r22
	ldi r17,0
	ldi r16,0
.L44:
	movw r26,r20
	ld r18,X+
	ld r19,X+
	movw r20,r26
	movw r24,r18
	lsl r24
	rol r25
	add r24,r16
	adc r25,r17
	clr r12
	inc r12
	mov r13,__zero_reg__
	cp r24,r18
	cpc r25,r19
	brlo .L41
	mov r13,__zero_reg__
	mov r12,__zero_reg__
.L41:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L42
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L42:
	mul r12,r14
	movw r8,r0
	mul r12,r15
	add r9,r0
	mul r13,r14
	add r9,r0
	clr r1
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	breq .L43
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L43:
	mul r14,r16
	movw r18,r0
	mul r14,r17
	add r19,r0
	mul r15,r16
	add r19,r0
	clr r1
	movw r16,r8
	or r16,r18
	or r17,r19
	movw r18,r20
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r20
	cpc r31,r21
	brne .L44
	add r6,r16
	adc r7,r17
	movw r20,r10
	mov r5,__zero_reg__
	mov r4,__zero_reg__
.L48:
	movw r26,r20
	ld r18,X+
	ld r19,X+
	movw r20,r26
	movw r26,r22
	ld r24,X+
	ld r25,X+
	movw r22,r26
	add r24,r18
	adc r25,r19
	add r24,r4
	adc r25,r5
	clr r12
	inc r12
	mov r13,__zero_reg__
	cp r24,r18
	cpc r25,r19
	brlo .L45
	mov r13,__zero_reg__
	mov r12,__zero_reg__
.L45:
	ldi r16,lo8(1)
	ldi r17,0
	cp r18,r24
	cpc r19,r25
	brne .L46
	ldi r17,0
	ldi r16,0
.L46:
	mul r12,r16
	movw r8,r0
	mul r12,r17
	add r9,r0
	mul r13,r16
	add r9,r0
	clr r1
	ldi r16,lo8(1)
	ldi r17,0
	cp r18,r24
	cpc r19,r25
	breq .L47
	ldi r17,0
	ldi r16,0
.L47:
	mul r16,r4
	movw r18,r0
	mul r16,r5
	add r19,r0
	mul r17,r4
	add r19,r0
	clr r1
	movw r4,r8
	or r4,r18
	or r5,r19
	movw r18,r20
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r22
	cpc r31,r23
	brne .L48
	add r4,r6
	adc r5,r7
	movw r26,r2
	adiw r26,16
	ld r14,X+
	ld r15,X
	sbiw r26,16+1
	std Y+2,r15
	std Y+1,r14
	adiw r26,18
	ld r24,X+
	ld r25,X
	sbiw r26,18+1
	std Y+4,r25
	std Y+3,r24
	adiw r26,20
	ld r24,X+
	ld r25,X
	sbiw r26,20+1
	std Y+6,r25
	std Y+5,r24
	std Y+12,__zero_reg__
	std Y+11,__zero_reg__
	std Y+10,__zero_reg__
	std Y+9,__zero_reg__
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	adiw r26,28
	ld r24,X+
	ld r25,X
	sbiw r26,28+1
	std Y+14,r25
	std Y+13,r24
	adiw r26,30
	ld r24,X+
	ld r25,X
	std Y+16,r25
	std Y+15,r24
	movw r20,r28
	subi r20,-3
	sbci r21,-1
	movw r12,r20
	movw r16,r10
	ldi r23,0
	ldi r22,0
	rjmp .L53
.L106:
	movw r26,r12
	ld r14,X+
	ld r15,X+
	movw r12,r26
.L53:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r24,r18
	add r24,r22
	adc r25,r23
	add r24,r14
	adc r25,r15
	clr r8
	inc r8
	mov r9,__zero_reg__
	cp r24,r18
	cpc r25,r19
	brlo .L49
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L49:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L50
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L50:
	mul r8,r14
	movw r6,r0
	mul r8,r15
	add r7,r0
	mul r9,r14
	add r7,r0
	clr r1
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	breq .L51
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L51:
	mul r14,r22
	movw r18,r0
	mul r14,r23
	add r19,r0
	mul r15,r22
	add r19,r0
	clr r1
	movw r22,r6
	or r22,r18
	or r23,r19
	movw r18,r16
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r12
	cpc r31,r13
	brne .L106
	add r4,r22
	adc r5,r23
	movw r26,r2
	adiw r26,18
	ld r14,X+
	ld r15,X
	sbiw r26,18+1
	std Y+2,r15
	std Y+1,r14
	adiw r26,20
	ld r24,X+
	ld r25,X
	sbiw r26,20+1
	std Y+4,r25
	std Y+3,r24
	adiw r26,22
	ld r24,X+
	ld r25,X
	sbiw r26,22+1
	std Y+6,r25
	std Y+5,r24
	adiw r26,26
	ld r24,X+
	ld r25,X
	sbiw r26,26+1
	std Y+8,r25
	std Y+7,r24
	adiw r26,28
	ld r18,X+
	ld r19,X
	sbiw r26,28+1
	std Y+10,r19
	std Y+9,r18
	adiw r26,30
	ld r18,X+
	ld r19,X
	sbiw r26,30+1
	std Y+12,r19
	std Y+11,r18
	std Y+14,r25
	std Y+13,r24
	adiw r26,16
	ld r24,X+
	ld r25,X
	std Y+16,r25
	std Y+15,r24
	movw r12,r20
	movw r16,r10
	ldi r23,0
	ldi r22,0
	rjmp .L58
.L107:
	movw r26,r12
	ld r14,X+
	ld r15,X+
	movw r12,r26
.L58:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r24,r18
	add r24,r22
	adc r25,r23
	add r24,r14
	adc r25,r15
	clr r8
	inc r8
	mov r9,__zero_reg__
	cp r24,r18
	cpc r25,r19
	brlo .L54
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L54:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L55
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L55:
	mul r8,r14
	movw r6,r0
	mul r8,r15
	add r7,r0
	mul r9,r14
	add r7,r0
	clr r1
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	breq .L56
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L56:
	mul r14,r22
	movw r18,r0
	mul r14,r23
	add r19,r0
	mul r15,r22
	add r19,r0
	clr r1
	movw r22,r6
	or r22,r18
	or r23,r19
	movw r18,r16
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r12
	cpc r31,r13
	brne .L107
	add r4,r22
	adc r5,r23
	movw r26,r2
	adiw r26,22
	ld r24,X+
	ld r25,X
	sbiw r26,22+1
	std Y+2,r25
	std Y+1,r24
	adiw r26,24
	ld r18,X+
	ld r19,X
	sbiw r26,24+1
	std Y+4,r19
	std Y+3,r18
	adiw r26,26
	ld r18,X+
	ld r19,X
	sbiw r26,26+1
	std Y+6,r19
	std Y+5,r18
	std Y+12,__zero_reg__
	std Y+11,__zero_reg__
	std Y+10,__zero_reg__
	std Y+9,__zero_reg__
	std Y+8,__zero_reg__
	std Y+7,__zero_reg__
	adiw r26,16
	ld r18,X+
	ld r19,X
	sbiw r26,16+1
	std Y+14,r19
	std Y+13,r18
	adiw r26,20
	ld r18,X+
	ld r19,X
	std Y+16,r19
	std Y+15,r18
	movw r12,r20
	movw r16,r10
	ldi r23,0
	ldi r22,0
	rjmp .L63
.L108:
	movw r26,r12
	ld r24,X+
	ld r25,X+
	movw r12,r26
.L63:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r26,r18
	sub r26,r24
	sbc r27,r25
	movw r24,r26
	sub r24,r22
	sbc r25,r23
	clr r8
	inc r8
	mov r9,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brlo .L59
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L59:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L60
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L60:
	mul r8,r14
	movw r6,r0
	mul r8,r15
	add r7,r0
	mul r9,r14
	add r7,r0
	clr r1
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	breq .L61
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L61:
	mul r14,r22
	movw r18,r0
	mul r14,r23
	add r19,r0
	mul r15,r22
	add r19,r0
	clr r1
	movw r22,r6
	or r22,r18
	or r23,r19
	movw r18,r16
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r12
	cpc r31,r13
	breq .+2
	rjmp .L108
	sub r4,r22
	sbc r5,r23
	movw r26,r2
	adiw r26,24
	ld r24,X+
	ld r25,X
	sbiw r26,24+1
	std Y+2,r25
	std Y+1,r24
	adiw r26,26
	ld r18,X+
	ld r19,X
	sbiw r26,26+1
	std Y+4,r19
	std Y+3,r18
	adiw r26,28
	ld r18,X+
	ld r19,X
	sbiw r26,28+1
	std Y+6,r19
	std Y+5,r18
	adiw r26,30
	ld r18,X+
	ld r19,X
	sbiw r26,30+1
	std Y+8,r19
	std Y+7,r18
	adiw r26,18
	ld r18,X+
	ld r19,X
	sbiw r26,18+1
	std Y+14,r19
	std Y+13,r18
	adiw r26,22
	ld r18,X+
	ld r19,X
	std Y+16,r19
	std Y+15,r18
	movw r12,r20
	movw r16,r10
	ldi r23,0
	ldi r22,0
	rjmp .L68
.L109:
	movw r26,r12
	ld r24,X+
	ld r25,X+
	movw r12,r26
.L68:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r26,r18
	sub r26,r24
	sbc r27,r25
	movw r24,r26
	sub r24,r22
	sbc r25,r23
	clr r8
	inc r8
	mov r9,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brlo .L64
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L64:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L65
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L65:
	mul r8,r14
	movw r6,r0
	mul r8,r15
	add r7,r0
	mul r9,r14
	add r7,r0
	clr r1
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	breq .L66
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L66:
	mul r14,r22
	movw r18,r0
	mul r14,r23
	add r19,r0
	mul r15,r22
	add r19,r0
	clr r1
	movw r22,r6
	or r22,r18
	or r23,r19
	movw r18,r16
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r12
	cpc r31,r13
	breq .+2
	rjmp .L109
	sub r4,r22
	sbc r5,r23
	movw r26,r2
	adiw r26,26
	ld r24,X+
	ld r25,X
	sbiw r26,26+1
	std Y+2,r25
	std Y+1,r24
	adiw r26,28
	ld r18,X+
	ld r19,X
	sbiw r26,28+1
	std Y+4,r19
	std Y+3,r18
	adiw r26,30
	ld r18,X+
	ld r19,X
	sbiw r26,30+1
	std Y+6,r19
	std Y+5,r18
	adiw r26,16
	ld r18,X+
	ld r19,X
	sbiw r26,16+1
	std Y+8,r19
	std Y+7,r18
	adiw r26,18
	ld r18,X+
	ld r19,X
	sbiw r26,18+1
	std Y+10,r19
	std Y+9,r18
	adiw r26,20
	ld r18,X+
	ld r19,X
	sbiw r26,20+1
	std Y+12,r19
	std Y+11,r18
	std Y+14,__zero_reg__
	std Y+13,__zero_reg__
	adiw r26,24
	ld r18,X+
	ld r19,X
	std Y+16,r19
	std Y+15,r18
	movw r12,r20
	movw r16,r10
	ldi r23,0
	ldi r22,0
	rjmp .L73
.L110:
	movw r26,r12
	ld r24,X+
	ld r25,X+
	movw r12,r26
.L73:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r26,r18
	sub r26,r24
	sbc r27,r25
	movw r24,r26
	sub r24,r22
	sbc r25,r23
	clr r8
	inc r8
	mov r9,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brlo .L69
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L69:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L70
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L70:
	mul r8,r14
	movw r6,r0
	mul r8,r15
	add r7,r0
	mul r9,r14
	add r7,r0
	clr r1
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	breq .L71
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L71:
	mul r14,r22
	movw r18,r0
	mul r14,r23
	add r19,r0
	mul r15,r22
	add r19,r0
	clr r1
	movw r22,r6
	or r22,r18
	or r23,r19
	movw r18,r16
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r12
	cpc r31,r13
	breq .+2
	rjmp .L110
	sub r4,r22
	sbc r5,r23
	movw r26,r2
	adiw r26,28
	ld r24,X+
	ld r25,X
	sbiw r26,28+1
	std Y+2,r25
	std Y+1,r24
	adiw r26,30
	ld r18,X+
	ld r19,X
	sbiw r26,30+1
	std Y+4,r19
	std Y+3,r18
	std Y+6,__zero_reg__
	std Y+5,__zero_reg__
	adiw r26,18
	ld r18,X+
	ld r19,X
	sbiw r26,18+1
	std Y+8,r19
	std Y+7,r18
	adiw r26,20
	ld r18,X+
	ld r19,X
	sbiw r26,20+1
	std Y+10,r19
	std Y+9,r18
	adiw r26,22
	ld r18,X+
	ld r19,X
	sbiw r26,22+1
	std Y+12,r19
	std Y+11,r18
	adiw r26,26
	ld r18,X+
	ld r19,X
	std Y+16,r19
	std Y+15,r18
	movw r8,r10
	ldi r23,0
	ldi r22,0
	rjmp .L78
.L111:
	movw r26,r20
	ld r24,X+
	ld r25,X+
	movw r20,r26
.L78:
	movw r26,r8
	ld r18,X+
	ld r19,X+
	movw r8,r26
	movw r16,r18
	sub r16,r24
	sbc r17,r25
	movw r24,r16
	sub r24,r22
	sbc r25,r23
	ldi r16,lo8(1)
	ldi r17,0
	cp r18,r24
	cpc r19,r25
	brlo .L74
	ldi r17,0
	ldi r16,0
.L74:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L75
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L75:
	mul r16,r14
	movw r12,r0
	mul r16,r15
	add r13,r0
	mul r17,r14
	add r13,r0
	clr r1
	ldi r16,lo8(1)
	ldi r17,0
	cp r18,r24
	cpc r19,r25
	breq .L76
	ldi r17,0
	ldi r16,0
.L76:
	mul r16,r22
	movw r18,r0
	mul r16,r23
	add r19,r0
	mul r17,r22
	add r19,r0
	clr r1
	movw r22,r12
	or r22,r18
	or r23,r19
	movw r18,r8
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r30,r20
	cpc r31,r21
	brne .L111
	sub r4,r22
	sbc r5,r23
	ldi r18,lo8(curve_secp256r1+20)
	mov r12,r18
	ldi r18,hi8(curve_secp256r1+20)
	mov r13,r18
	sbrc r5,7
	rjmp .L85
	movw r30,r10
	adiw r30,16
	movw r6,r30
	ldi r26,lo8(curve_secp256r1+20)
	ldi r27,hi8(curve_secp256r1+20)
	movw r30,r6
	cp r4,__zero_reg__
	cpc r5,__zero_reg__
	brne .+2
	rjmp .L94
.L93:
	ldi r24,lo8(curve_secp256r1+6)
	mov r8,r24
	ldi r24,hi8(curve_secp256r1+6)
	mov r9,r24
	movw r30,r10
	ldi r24,lo8(-1)
	ldi r25,lo8(-1)
	ldi r21,0
	ldi r20,0
	rjmp .L91
.L112:
	movw r26,r8
	ld r24,X+
	ld r25,X+
	movw r8,r26
.L91:
	ld r18,Z+
	ld r19,Z+
	movw r16,r18
	sub r16,r24
	sbc r17,r25
	movw r24,r16
	sub r24,r20
	sbc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	brlo .L87
	ldi r23,0
	ldi r22,0
.L87:
	ldi r16,lo8(1)
	ldi r17,0
	cp r18,r24
	cpc r19,r25
	brne .L88
	ldi r17,0
	ldi r16,0
.L88:
	mul r22,r16
	movw r14,r0
	mul r22,r17
	add r15,r0
	mul r23,r16
	add r15,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L89
	ldi r23,0
	ldi r22,0
.L89:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r14
	or r20,r18
	or r21,r19
	movw r18,r30
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r12,r8
	cpc r13,r9
	brne .L112
	sub r4,r20
	sbc r5,r21
	ldi r26,lo8(curve_secp256r1+20)
	ldi r27,hi8(curve_secp256r1+20)
	movw r30,r6
	breq .+2
	rjmp .L93
.L94:
	ld r19,-X
	ld r18,-X
	ld r25,-Z
	ld r24,-Z
	cp r24,r18
	cpc r25,r19
	brlo .L31
.L113:
	cp r18,r24
	cpc r19,r25
	brsh .+2
	rjmp .L93
	cp r10,r30
	cpc r11,r31
	brne .+2
	rjmp .L93
	ld r19,-X
	ld r18,-X
	ld r25,-Z
	ld r24,-Z
	cp r24,r18
	cpc r25,r19
	brsh .L113
.L31:
/* epilogue start */
	adiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L83:
	add r4,r20
	adc r5,r21
	cp r4,__zero_reg__
	cpc r5,__zero_reg__
	breq .L31
.L85:
	ldi r25,lo8(curve_secp256r1+6)
	mov r8,r25
	ldi r25,hi8(curve_secp256r1+6)
	mov r9,r25
	movw r30,r10
	ldi r24,lo8(-1)
	ldi r25,lo8(-1)
	ldi r21,0
	ldi r20,0
	rjmp .L84
.L114:
	movw r26,r8
	ld r24,X+
	ld r25,X+
	movw r8,r26
.L84:
	ld r18,Z+
	ld r19,Z+
	movw r22,r18
	add r22,r20
	adc r23,r21
	add r24,r22
	adc r25,r23
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	brlo .L80
	ldi r23,0
	ldi r22,0
.L80:
	ldi r16,lo8(1)
	ldi r17,0
	cp r18,r24
	cpc r19,r25
	brne .L81
	ldi r17,0
	ldi r16,0
.L81:
	mul r22,r16
	movw r14,r0
	mul r22,r17
	add r15,r0
	mul r23,r16
	add r15,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L82
	ldi r23,0
	ldi r22,0
.L82:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r14
	or r20,r18
	or r21,r19
	movw r18,r30
	subi r18,2
	sbc r19,__zero_reg__
	movw r26,r18
	st X+,r24
	st X,r25
	cp r12,r8
	cpc r13,r9
	brne .L114
	rjmp .L83
	.size	vli_mmod_fast_secp256r1, .-vli_mmod_fast_secp256r1
.global	uECC_set_rng
	.type	uECC_set_rng, @function
uECC_set_rng:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	sts g_rng_function+1,r25
	sts g_rng_function,r24
/* epilogue start */
	ret
	.size	uECC_set_rng, .-uECC_set_rng
.global	uECC_get_rng
	.type	uECC_get_rng, @function
uECC_get_rng:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	lds r24,g_rng_function
	lds r25,g_rng_function+1
/* epilogue start */
	ret
	.size	uECC_get_rng, .-uECC_get_rng
.global	uECC_curve_private_key_size
	.type	uECC_curve_private_key_size, @function
uECC_curve_private_key_size:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	movw r30,r24
	ldd r18,Z+2
	ldd r19,Z+3
	movw r24,r18
	adiw r24,7
	sbrc r25,7
	adiw r24,7
.L118:
	asr r25
	ror r24
	asr r25
	ror r24
	asr r25
	ror r24
/* epilogue start */
	ret
	.size	uECC_curve_private_key_size, .-uECC_curve_private_key_size
.global	uECC_curve_public_key_size
	.type	uECC_curve_public_key_size, @function
uECC_curve_public_key_size:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	movw r30,r24
	ldd r24,Z+1
	lsl r24
	sbc r25,r25
/* epilogue start */
	ret
	.size	uECC_curve_public_key_size, .-uECC_curve_public_key_size
.global	uECC_vli_clear
	.type	uECC_vli_clear, @function
uECC_vli_clear:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	cp __zero_reg__,r22
	brge .L120
	movw r30,r24
	subi r22,lo8(-(-1))
	mov r24,r22
	ldi r25,0
	lsl r24
	rol r25
	movw r18,r30
	subi r18,-2
	sbci r19,-1
	add r24,r18
	adc r25,r19
.L122:
	st Z+,__zero_reg__
	st Z+,__zero_reg__
	cp r30,r24
	cpc r31,r25
	brne .L122
.L120:
/* epilogue start */
	ret
	.size	uECC_vli_clear, .-uECC_vli_clear
.global	uECC_vli_isZero
	.type	uECC_vli_isZero, @function
uECC_vli_isZero:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	cp __zero_reg__,r22
	brge .L128
	movw r30,r24
	subi r22,lo8(-(-1))
	mov r24,r22
	ldi r25,0
	lsl r24
	rol r25
	movw r18,r30
	subi r18,-2
	sbci r19,-1
	add r24,r18
	adc r25,r19
	ldi r19,0
	ldi r18,0
.L126:
	ld r20,Z+
	ld r21,Z+
	or r18,r20
	or r19,r21
	cp r24,r30
	cpc r25,r31
	brne .L126
	ldi r24,lo8(1)
	ldi r25,0
	or r18,r19
	brne .L133
/* epilogue start */
	ret
.L133:
	ldi r24,0
	ret
.L128:
	ldi r24,lo8(1)
	ldi r25,0
/* epilogue start */
	ret
	.size	uECC_vli_isZero, .-uECC_vli_isZero
.global	uECC_vli_testBit
	.type	uECC_vli_testBit, @function
uECC_vli_testBit:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	movw r18,r22
	asr r19
	ror r18
	asr r19
	ror r18
	asr r19
	ror r18
	asr r19
	ror r18
	asr r19
	ror r18
	lsl r18
	rol r19
	add r18,r24
	adc r19,r25
	andi r22,31
	clr r23
	ldi r24,lo8(1)
	ldi r25,0
	rjmp 2f
	1:
	lsl r24
	rol r25
	2:
	dec r22
	brpl 1b
	movw r30,r18
	ld r18,Z
	ldd r19,Z+1
	and r24,r18
	and r25,r19
/* epilogue start */
	ret
	.size	uECC_vli_testBit, .-uECC_vli_testBit
.global	uECC_vli_numBits
	.type	uECC_vli_numBits, @function
uECC_vli_numBits:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	ldi r18,lo8(-1)
	add r18,r22
	sbrc r18,7
	rjmp .L136
	mov r30,r18
	lsl r30
	sbc r31,r31
	add r30,r24
	adc r31,r25
	ld r20,Z
	ldd r21,Z+1
	or r20,r21
	brne .L136
	ldi r30,lo8(-2)
	add r30,r22
	mov __tmp_reg__,r30
	lsl r0
	sbc r31,r31
	adiw r30,1
	lsl r30
	rol r31
	add r30,r24
	adc r31,r25
	rjmp .L138
.L147:
	ld r21,-Z
	ld r20,-Z
	or r20,r21
	brne .L136
.L138:
	subi r18,1
	brcc .L147
.L142:
	ldi r25,0
	ldi r24,0
/* epilogue start */
	ret
.L136:
	subi r18,lo8(-(1))
	breq .L142
	mov __tmp_reg__,r18
	lsl r0
	sbc r19,r19
	movw r20,r18
	subi r20,1
	sbci r21,-128
	lsl r20
	rol r21
	add r24,r20
	adc r25,r21
	movw r30,r24
	ld r20,Z
	ldd r21,Z+1
	ldi r23,0
	ldi r22,0
	cp r20,__zero_reg__
	cpc r21,__zero_reg__
	breq .L139
.L140:
	lsr r21
	ror r20
	subi r22,-1
	sbci r23,-1
	cp r20,__zero_reg__
	cpc r21,__zero_reg__
	brne .L140
.L139:
	movw r24,r18
	sbiw r24,1
	lsl r24
	rol r25
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	add r24,r22
	adc r25,r23
	ret
	.size	uECC_vli_numBits, .-uECC_vli_numBits
.global	uECC_vli_set
	.type	uECC_vli_set, @function
uECC_vli_set:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	cp __zero_reg__,r20
	brge .L148
	movw r30,r22
	movw r26,r24
	subi r20,lo8(-(-1))
	mov r24,r20
	ldi r25,0
	lsl r24
	rol r25
	movw r18,r22
	subi r18,-2
	sbci r19,-1
	add r24,r18
	adc r25,r19
.L150:
	ld r18,Z+
	ld r19,Z+
	st X+,r18
	st X+,r19
	cp r30,r24
	cpc r31,r25
	brne .L150
.L148:
/* epilogue start */
	ret
	.size	uECC_vli_set, .-uECC_vli_set
.global	uECC_vli_cmp_unsafe
	.type	uECC_vli_cmp_unsafe, @function
uECC_vli_cmp_unsafe:
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 2 */
.L__stack_usage = 2
	movw r26,r24
	ldi r25,lo8(-1)
	add r25,r20
	sbrc r25,7
	rjmp .L156
	mov r18,r25
	lsl r18
	sbc r19,r19
	movw r30,r26
	add r30,r18
	adc r31,r19
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	add r18,r22
	adc r19,r23
	movw r28,r18
	ld r18,Y
	ldd r19,Y+1
	cp r18,r30
	cpc r19,r31
	brlo .L159
	cp r30,r18
	cpc r31,r19
	brlo .L160
	ldi r30,lo8(-2)
	add r30,r20
	mov __tmp_reg__,r30
	lsl r0
	sbc r31,r31
	adiw r30,1
	lsl r30
	rol r31
	add r26,r30
	adc r27,r31
	add r30,r22
	adc r31,r23
	rjmp .L154
.L155:
	ld r21,-X
	ld r20,-X
	ld r19,-Z
	ld r18,-Z
	cp r18,r20
	cpc r19,r21
	brlo .L159
	cp r20,r18
	cpc r21,r19
	brlo .L160
.L154:
	subi r25,1
	brcc .L155
.L156:
	ldi r24,0
/* epilogue start */
	pop r29
	pop r28
	ret
.L159:
	ldi r24,lo8(1)
/* epilogue start */
	pop r29
	pop r28
	ret
.L160:
	ldi r24,lo8(-1)
/* epilogue start */
	pop r29
	pop r28
	ret
	.size	uECC_vli_cmp_unsafe, .-uECC_vli_cmp_unsafe
.global	uECC_vli_equal
	.type	uECC_vli_equal, @function
uECC_vli_equal:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	subi r20,lo8(-(-1))
	sbrc r20,7
	rjmp .L165
	mov r30,r20
	mov __tmp_reg__,r20
	lsl r0
	sbc r31,r31
	adiw r30,1
	lsl r30
	rol r31
	movw r26,r24
	add r26,r30
	adc r27,r31
	add r30,r22
	adc r31,r23
	ldi r23,0
	ldi r22,0
.L163:
	ld r19,-X
	ld r18,-X
	ld r25,-Z
	ld r24,-Z
	eor r18,r24
	eor r19,r25
	or r22,r18
	or r23,r19
	subi r20,1
	brcc .L163
	ldi r24,lo8(1)
	ldi r25,0
	or r22,r23
	breq .L167
/* epilogue start */
	ret
.L167:
	ldi r24,0
	ret
.L165:
	ldi r24,0
	ldi r25,0
/* epilogue start */
	ret
	.size	uECC_vli_equal, .-uECC_vli_equal
.global	cond_set
	.type	cond_set, @function
cond_set:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	ldi r18,lo8(1)
	ldi r19,0
	cp r20,__zero_reg__
	cpc r21,__zero_reg__
	breq .L169
	ldi r19,0
	ldi r18,0
.L169:
	mul r18,r22
	movw r30,r0
	mul r18,r23
	add r31,r0
	mul r19,r22
	add r31,r0
	clr r1
	mul r24,r20
	movw r18,r0
	mul r24,r21
	add r19,r0
	mul r25,r20
	add r19,r0
	clr r1
	movw r24,r30
	or r24,r18
	or r25,r19
/* epilogue start */
	ret
	.size	cond_set, .-cond_set
.global	uECC_vli_sub
	.type	uECC_vli_sub, @function
uECC_vli_sub:
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 10 */
.L__stack_usage = 10
	cp __zero_reg__,r18
	brlt .+2
	rjmp .L179
	movw r30,r22
	movw r16,r20
	movw r28,r24
	subi r18,lo8(-(-1))
	mov r26,r18
	ldi r27,0
	lsl r26
	rol r27
	movw r24,r30
	adiw r24,2
	movw r10,r26
	add r10,r24
	adc r11,r25
	ldi r25,0
	ldi r24,0
.L178:
	ld r20,Z+
	ld r21,Z+
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r22,r20
	sub r22,r18
	sbc r23,r19
	movw r18,r22
	sub r18,r24
	sbc r19,r25
	clr r12
	inc r12
	mov r13,__zero_reg__
	cp r20,r18
	cpc r21,r19
	brne .L175
	mov r13,__zero_reg__
	mov r12,__zero_reg__
.L175:
	ldi r22,lo8(1)
	ldi r23,0
	cp r20,r18
	cpc r21,r19
	brlo .L176
	ldi r23,0
	ldi r22,0
.L176:
	mul r12,r22
	movw r14,r0
	mul r12,r23
	add r15,r0
	mul r13,r22
	add r15,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r20,r18
	cpc r21,r19
	breq .L177
	ldi r23,0
	ldi r22,0
.L177:
	mul r22,r24
	movw r20,r0
	mul r22,r25
	add r21,r0
	mul r23,r24
	add r21,r0
	clr r1
	movw r24,r14
	or r24,r20
	or r25,r21
	st Y+,r18
	st Y+,r19
	cp r10,r30
	cpc r11,r31
	brne .L178
.L173:
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	ret
.L179:
	ldi r25,0
	ldi r24,0
	rjmp .L173
	.size	uECC_vli_sub, .-uECC_vli_sub
.global	uECC_vli_cmp
	.type	uECC_vli_cmp, @function
uECC_vli_cmp:
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 16 */
/* stack size = 32 */
.L__stack_usage = 32
	cp __zero_reg__,r20
	brlt .+2
	rjmp .L189
	movw r30,r24
	movw r16,r22
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r4,r22
	subi r20,lo8(-(-1))
	mov r6,r20
	mov r7,__zero_reg__
	lsl r6
	rol r7
	movw r8,r24
	ldi r23,2
	add r8,r23
	adc r9,__zero_reg__
	add r8,r6
	adc r9,r7
	movw r12,r4
	ldi r21,0
	ldi r20,0
.L186:
	ld r18,Z+
	ld r19,Z+
	movw r26,r16
	ld r24,X+
	ld r25,X+
	movw r16,r26
	movw r22,r18
	sub r22,r24
	sbc r23,r25
	movw r24,r22
	sub r24,r20
	sbc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	brlo .L183
	ldi r23,0
	ldi r22,0
.L183:
	clr r14
	inc r14
	mov r15,__zero_reg__
	cp r18,r24
	cpc r19,r25
	brne .L184
	mov r15,__zero_reg__
	mov r14,__zero_reg__
.L184:
	mul r22,r14
	movw r10,r0
	mul r22,r15
	add r11,r0
	mul r23,r14
	add r11,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L185
	ldi r23,0
	ldi r22,0
.L185:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r10
	or r20,r18
	or r21,r19
	movw r26,r12
	st X+,r24
	st X+,r25
	movw r12,r26
	cp r8,r30
	cpc r9,r31
	brne .L186
	movw r24,r4
	adiw r24,2
	add r6,r24
	adc r7,r25
	ldi r19,0
	ldi r18,0
	rjmp .L187
.L193:
	adiw r24,2
.L187:
	movw r30,r4
	ld r22,Z
	ldd r23,Z+1
	movw r4,r24
	or r18,r22
	or r19,r23
	cp r6,r24
	cpc r7,r25
	brne .L193
	ldi r24,lo8(1)
	or r18,r19
	breq .L194
.L188:
	lsl r20
	sub r24,r20
.L181:
/* epilogue start */
	adiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	ret
.L194:
	ldi r24,0
	rjmp .L188
.L189:
	ldi r24,0
	rjmp .L181
	.size	uECC_vli_cmp, .-uECC_vli_cmp
.global	uECC_vli_modAdd
	.type	uECC_vli_modAdd, @function
uECC_vli_modAdd:
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 14 */
.L__stack_usage = 14
	movw r8,r24
	movw r6,r18
	cp __zero_reg__,r16
	brlt .+2
	rjmp .L196
	movw r30,r22
	movw r26,r20
	movw r14,r24
	ldi r17,lo8(-1)
	add r17,r16
	movw r24,r22
	adiw r24,2
	mov r10,r17
	mov r11,__zero_reg__
	lsl r10
	rol r11
	add r10,r24
	adc r11,r25
	ldi r21,0
	ldi r20,0
.L200:
	ld r18,Z+
	ld r19,Z+
	ld r24,X+
	ld r25,X+
	add r24,r18
	adc r25,r19
	add r24,r20
	adc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	brlo .L197
	ldi r23,0
	ldi r22,0
.L197:
	ldi r28,lo8(1)
	ldi r29,0
	cp r18,r24
	cpc r19,r25
	brne .L198
	ldi r29,0
	ldi r28,0
.L198:
	mul r22,r28
	movw r12,r0
	mul r22,r29
	add r13,r0
	mul r23,r28
	add r13,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L199
	ldi r23,0
	ldi r22,0
.L199:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r12
	or r20,r18
	or r21,r19
	movw r28,r14
	st Y+,r24
	st Y+,r25
	movw r14,r28
	cp r10,r30
	cpc r11,r31
	brne .L200
	or r20,r21
	brne .+2
	rjmp .L211
.L207:
	movw r26,r8
	ldi r31,0
	ldi r30,0
	ldi r25,0
.L202:
	ld r22,X+
	ld r23,X+
	movw r28,r6
	ld r18,Y+
	ld r19,Y+
	movw r6,r28
	movw r20,r22
	sub r20,r18
	sbc r21,r19
	sub r20,r30
	sbc r21,r31
	ldi r28,lo8(1)
	ldi r29,0
	cp r22,r20
	cpc r23,r21
	brlo .L208
	ldi r29,0
	ldi r28,0
.L208:
	ldi r18,lo8(1)
	ldi r19,0
	cp r22,r20
	cpc r23,r21
	brne .L209
	ldi r19,0
	ldi r18,0
.L209:
	mul r28,r18
	movw r14,r0
	mul r28,r19
	add r15,r0
	mul r29,r18
	add r15,r0
	clr r1
	ldi r28,lo8(1)
	ldi r29,0
	cp r22,r20
	cpc r23,r21
	breq .L210
	ldi r29,0
	ldi r28,0
.L210:
	mul r28,r30
	movw r18,r0
	mul r28,r31
	add r19,r0
	mul r29,r30
	add r19,r0
	clr r1
	movw r30,r14
	or r30,r18
	or r31,r19
	movw r28,r26
	sbiw r28,2
	std Y+1,r21
	st Y,r20
	subi r25,lo8(-(1))
	cp r25,r16
	brlt .L202
.L195:
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	ret
.L196:
	ldi r24,lo8(-1)
	add r24,r16
	ldi r17,lo8(127)
	sbrc r24,7
	rjmp .L195
.L211:
	mov r24,r17
	lsl r24
	sbc r25,r25
	movw r30,r6
	add r30,r24
	adc r31,r25
	ld r18,Z
	ldd r19,Z+1
	add r24,r8
	adc r25,r9
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	cp r24,r18
	cpc r25,r19
	brlo .L195
	cp r18,r24
	cpc r19,r25
	brlo .L204
	subi r17,lo8(-(-1))
	mov r30,r17
	mov __tmp_reg__,r17
	lsl r0
	sbc r31,r31
	adiw r30,1
	lsl r30
	rol r31
	movw r26,r6
	add r26,r30
	adc r27,r31
	add r30,r8
	adc r31,r9
	rjmp .L205
.L206:
	ld r19,-X
	ld r18,-X
	ld r25,-Z
	ld r24,-Z
	cp r24,r18
	cpc r25,r19
	brlo .L195
	cp r18,r24
	cpc r19,r25
	brlo .L204
	subi r17,lo8(-(-1))
.L205:
	cpi r17,lo8(-1)
	brne .L206
.L204:
	cp __zero_reg__,r16
	brge .+2
	rjmp .L207
	rjmp .L195
	.size	uECC_vli_modAdd, .-uECC_vli_modAdd
.global	uECC_vli_modSub
	.type	uECC_vli_modSub, @function
uECC_vli_modSub:
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 16 */
.L__stack_usage = 16
	movw r8,r24
	mov r5,r18
	mov r4,r19
	cp __zero_reg__,r16
	brlt .+2
	rjmp .L215
	movw r30,r22
	movw r26,r20
	movw r14,r24
	subi r16,lo8(-(-1))
	mov r6,r16
	mov r7,__zero_reg__
	lsl r6
	rol r7
	movw r10,r22
	ldi r22,2
	add r10,r22
	adc r11,__zero_reg__
	add r10,r6
	adc r11,r7
	movw r16,r8
	ldi r21,0
	ldi r20,0
.L220:
	ld r18,Z+
	ld r19,Z+
	ld r24,X+
	ld r25,X+
	movw r28,r18
	sub r28,r24
	sbc r29,r25
	movw r24,r28
	sub r24,r20
	sbc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	brlo .L217
	ldi r23,0
	ldi r22,0
.L217:
	ldi r28,lo8(1)
	ldi r29,0
	cp r18,r24
	cpc r19,r25
	brne .L218
	ldi r29,0
	ldi r28,0
.L218:
	mul r22,r28
	movw r12,r0
	mul r22,r29
	add r13,r0
	mul r23,r28
	add r13,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L219
	ldi r23,0
	ldi r22,0
.L219:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r12
	or r20,r18
	or r21,r19
	movw r28,r16
	st Y+,r24
	st Y+,r25
	movw r16,r28
	cp r10,r30
	cpc r11,r31
	brne .L220
	or r20,r21
	brne .+2
	rjmp .L215
	mov r30,r5
	mov r31,r4
	add r8,r6
	adc r9,r7
	ldi r29,2
	add r8,r29
	adc r9,__zero_reg__
	ldi r23,0
	ldi r22,0
.L224:
	movw r26,r14
	ld r20,X+
	ld r21,X+
	movw r14,r26
	ld r18,Z+
	ld r19,Z+
	add r18,r20
	adc r19,r21
	add r18,r22
	adc r19,r23
	ldi r24,lo8(1)
	ldi r25,0
	cp r18,r20
	cpc r19,r21
	brlo .L221
	ldi r25,0
	ldi r24,0
.L221:
	ldi r26,lo8(1)
	ldi r27,0
	cp r20,r18
	cpc r21,r19
	brne .L222
	ldi r27,0
	ldi r26,0
.L222:
	mul r24,r26
	movw r28,r0
	mul r24,r27
	add r29,r0
	mul r25,r26
	add r29,r0
	clr r1
	ldi r26,lo8(1)
	ldi r27,0
	cp r20,r18
	cpc r21,r19
	breq .L223
	ldi r27,0
	ldi r26,0
.L223:
	mul r26,r22
	movw r24,r0
	mul r26,r23
	add r25,r0
	mul r27,r22
	add r25,r0
	clr r1
	movw r22,r28
	or r22,r24
	or r23,r25
	movw r26,r14
	sbiw r26,2
	st X+,r18
	st X,r19
	cp r8,r14
	cpc r9,r15
	brne .L224
.L215:
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	ret
	.size	uECC_vli_modSub, .-uECC_vli_modSub
.global	double_jacobian_default
	.type	double_jacobian_default, @function
double_jacobian_default:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,78
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 78 */
/* stack size = 96 */
.L__stack_usage = 96
	movw r26,r18
	ld r17,X
	cp __zero_reg__,r17
	brge .L230
	movw r4,r20
	ldi r30,lo8(-1)
	add r30,r17
	mov r6,r30
	mov r7,__zero_reg__
	lsl r6
	rol r7
	movw r10,r20
	ldi r27,2
	add r10,r27
	adc r11,__zero_reg__
	add r10,r6
	adc r11,r7
	movw r14,r20
	ldi r31,0
	ldi r30,0
.L232:
	movw r26,r14
	ld r12,X+
	ld r13,X+
	movw r14,r26
	or r30,r12
	or r31,r13
	cp r10,r26
	cpc r11,r27
	brne .L232
	or r30,r31
	brne .L254
.L230:
/* epilogue start */
	subi r28,-78
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L254:
	movw r2,r18
	movw r12,r20
	adiw r28,70-63
	std Y+63,r23
	sbiw r28,70-63
	adiw r28,69-63
	std Y+63,r22
	sbiw r28,69-63
	movw r10,r24
	mov r18,r17
	movw r20,r22
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r30,r2
	subi r30,-88
	sbci r31,-1
	adiw r28,65-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,65-62
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,49
	icall
	movw r26,r2
	ld r18,X
	movw r20,r28
	subi r20,-49
	sbci r21,-1
	movw r22,r10
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	adiw r28,65-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,65-62
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,33
	icall
	movw r30,r2
	ld r18,Z
	movw r20,r28
	subi r20,-49
	sbci r21,-1
	movw r22,r20
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	adiw r28,65-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,65-62
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,49
	icall
	movw r30,r2
	ld r18,Z
	movw r20,r12
	adiw r28,69-63
	ldd r22,Y+63
	sbiw r28,69-63
	adiw r28,70-63
	ldd r23,Y+63
	sbiw r28,70-63
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	adiw r28,65-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,65-62
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	adiw r28,69-63
	ldd r24,Y+63
	sbiw r28,69-63
	adiw r28,70-63
	ldd r25,Y+63
	sbiw r28,70-63
	icall
	movw r30,r2
	ld r18,Z
	movw r20,r12
	movw r22,r12
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	adiw r28,65-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,65-62
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r12
	icall
	movw r8,r2
	ldi r27,4
	add r8,r27
	adc r9,__zero_reg__
	mov r16,r17
	movw r18,r8
	movw r20,r12
	movw r22,r10
	movw r24,r10
	call uECC_vli_modAdd
	movw r18,r8
	movw r20,r12
	movw r22,r12
	movw r24,r12
	call uECC_vli_modAdd
	movw r18,r8
	movw r20,r12
	movw r22,r10
	movw r24,r12
	call uECC_vli_modSub
	movw r30,r2
	ld r18,Z
	movw r20,r12
	movw r22,r10
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	adiw r28,65-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,65-62
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r10
	icall
	movw r18,r8
	movw r20,r10
	movw r22,r10
	movw r24,r12
	call uECC_vli_modAdd
	movw r18,r8
	movw r20,r12
	movw r22,r10
	movw r24,r10
	call uECC_vli_modAdd
	movw r30,r10
	ld r18,Z
	ldd r19,Z+1
	mov r24,r17
	lsl r24
	sbc r25,r25
	movw r20,r10
	add r20,r24
	adc r21,r25
	adiw r28,73-62
	std Y+63,r21
	std Y+62,r20
	sbiw r28,73-62
	sbrs r18,0
	rjmp .L233
	adiw r28,67-62
	std Y+63,r11
	std Y+62,r10
	sbiw r28,67-62
	movw r24,r2
	adiw r24,6
	movw r26,r24
	add r26,r6
	adc r27,r7
	adiw r28,71-62
	std Y+63,r27
	std Y+62,r26
	sbiw r28,71-62
	ldi r27,0
	ldi r26,0
	adiw r28,77-62
	std Y+63,r9
	std Y+62,r8
	sbiw r28,77-62
	adiw r28,75-62
	std Y+63,r15
	std Y+62,r14
	sbiw r28,75-62
	mov r15,r17
	rjmp .L238
.L255:
	ld r18,Z
	ldd r19,Z+1
.L238:
	adiw r28,77-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,77-62
	ld r24,Z+
	ld r25,Z+
	adiw r28,77-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,77-62
	movw r20,r26
	add r20,r18
	adc r21,r19
	add r24,r20
	adc r25,r21
	ldi r20,lo8(1)
	ldi r21,0
	cp r24,r18
	cpc r25,r19
	brlo .L234
	ldi r21,0
	ldi r20,0
.L234:
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	brne .L235
	ldi r23,0
	ldi r22,0
.L235:
	mul r20,r22
	movw r16,r0
	mul r20,r23
	add r17,r0
	mul r21,r22
	add r17,r0
	clr r1
	ldi r20,lo8(1)
	ldi r21,0
	cp r24,r18
	cpc r25,r19
	breq .L236
	ldi r21,0
	ldi r20,0
.L236:
	mul r20,r26
	movw r18,r0
	mul r20,r27
	add r19,r0
	mul r21,r26
	add r19,r0
	clr r1
	movw r26,r16
	or r26,r18
	or r27,r19
	adiw r28,67-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,67-62
	st Z+,r24
	st Z+,r25
	adiw r28,67-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,67-62
	adiw r28,77-62
	ldd r18,Y+62
	ldd r19,Y+63
	sbiw r28,77-62
	adiw r28,71-62
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,71-62
	cp r18,r20
	cpc r19,r21
	breq .+2
	rjmp .L255
	mov r17,r15
	adiw r28,75-62
	ldd r14,Y+62
	ldd r15,Y+63
	sbiw r28,75-62
	adiw r28,73-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,73-62
	cp r10,r24
	cpc r11,r25
	brsh .L239
	movw r30,r24
.L240:
	ld r25,-Z
	ld r24,-Z
	lsr r25
	ror r24
	std Z+1,r25
	st Z,r24
	cp r10,r30
	cpc r11,r31
	brlo .L240
.L239:
	movw r30,r2
	ld r18,Z
	movw r20,r10
	movw r22,r10
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	adiw r28,65-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,65-62
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r12
	icall
	mov r16,r17
	movw r18,r8
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r12
	movw r24,r12
	call uECC_vli_modSub
	movw r18,r8
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r12
	movw r24,r12
	call uECC_vli_modSub
	movw r18,r8
	movw r20,r12
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r22
	call uECC_vli_modSub
	movw r30,r2
	ld r18,Z
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r10
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	adiw r28,65-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,65-62
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r10
	icall
	movw r18,r8
	movw r20,r28
	subi r20,-49
	sbci r21,-1
	movw r22,r10
	movw r24,r20
	call uECC_vli_modSub
	movw r26,r10
	movw r30,r12
.L242:
	ld r24,Z+
	ld r25,Z+
	st X+,r24
	st X+,r25
	cp r30,r14
	cpc r31,r15
	brne .L242
	adiw r28,69-63
	ldd r26,Y+63
	sbiw r28,69-63
	adiw r28,70-63
	ldd r27,Y+63
	sbiw r28,70-63
	movw r18,r26
	subi r18,-2
	sbci r19,-1
	add r18,r6
	adc r19,r7
	movw r30,r26
	movw r20,r26
.L243:
	ld r24,Z+
	ld r25,Z+
	movw r26,r4
	st X+,r24
	st X+,r25
	movw r4,r26
	cp r18,r30
	cpc r19,r31
	brne .L243
	movw r26,r20
	movw r30,r28
	adiw r30,49
	ldi r18,lo8(51)
	ldi r19,0
	add r18,r28
	adc r19,r29
	add r18,r6
	adc r19,r7
.L244:
	ld r24,Z+
	ld r25,Z+
	st X+,r24
	st X+,r25
	cp r18,r30
	cpc r19,r31
	brne .L244
	rjmp .L230
.L233:
	adiw r28,73-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,73-62
	cp r10,r26
	cpc r11,r27
	brlo .+2
	rjmp .L239
	movw r30,r26
.L241:
	ld r25,-Z
	ld r24,-Z
	lsr r25
	ror r24
	std Z+1,r25
	st Z,r24
	cp r10,r30
	cpc r11,r31
	brlo .L241
	rjmp .L239
	.size	double_jacobian_default, .-double_jacobian_default
.global	x_side_default
	.type	x_side_default, @function
x_side_default:
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 48 */
/* stack size = 62 */
.L__stack_usage = 62
	movw r14,r24
	movw r10,r22
	movw r12,r20
	movw r30,r28
	adiw r30,35
	ldi r24,lo8(14)
	movw r26,r30
	0:
	st X+,__zero_reg__
	dec r24
	brne 0b
	ldi r24,lo8(3)
	ldi r25,0
	std Y+34,r25
	std Y+33,r24
	movw r30,r20
	ld r17,Z
	mov r18,r17
	movw r20,r22
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r6,r12
	ldi r31,88
	add r6,r31
	adc r7,__zero_reg__
	movw r26,r6
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r14
	icall
	movw r8,r12
	ldi r27,4
	add r8,r27
	adc r9,__zero_reg__
	mov r16,r17
	movw r18,r8
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r14
	movw r24,r14
	call uECC_vli_modSub
	movw r30,r12
	ld r18,Z
	movw r20,r10
	movw r22,r14
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r6
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r14
	icall
	movw r20,r12
	subi r20,-68
	sbci r21,-1
	movw r18,r8
	movw r22,r14
	movw r24,r14
	call uECC_vli_modAdd
/* epilogue start */
	adiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	ret
	.size	x_side_default, .-x_side_default
	.type	XYcZ_addC, @function
XYcZ_addC:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,80
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 80 */
/* stack size = 98 */
.L__stack_usage = 98
	movw r2,r24
	movw r6,r22
	movw r8,r20
	movw r10,r18
	movw r12,r16
	movw r26,r16
	ld r17,X
	movw r14,r12
	ldi r27,4
	add r14,r27
	adc r15,__zero_reg__
	mov r16,r17
	movw r18,r14
	movw r20,r24
	movw r22,r8
	movw r24,r28
	subi r24,-65
	sbci r25,-1
	call uECC_vli_modSub
	movw r30,r12
	ld r18,Z
	movw r20,r28
	subi r20,-65
	sbci r21,-1
	movw r22,r20
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r4,r12
	ldi r31,88
	add r4,r31
	adc r5,__zero_reg__
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	subi r24,-65
	sbci r25,-1
	icall
	movw r30,r12
	ld r18,Z
	movw r20,r28
	subi r20,-65
	sbci r21,-1
	movw r22,r2
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r2
	icall
	movw r30,r12
	ld r18,Z
	movw r20,r28
	subi r20,-65
	sbci r21,-1
	movw r22,r8
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r8
	icall
	movw r18,r14
	movw r20,r6
	movw r22,r10
	movw r24,r28
	subi r24,-65
	sbci r25,-1
	call uECC_vli_modAdd
	movw r18,r14
	movw r20,r6
	movw r22,r10
	movw r24,r10
	call uECC_vli_modSub
	movw r18,r14
	movw r20,r2
	movw r22,r8
	movw r24,r28
	adiw r24,49
	call uECC_vli_modSub
	movw r30,r12
	ld r18,Z
	movw r20,r28
	subi r20,-49
	sbci r21,-1
	movw r22,r6
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r6
	icall
	movw r18,r14
	movw r20,r8
	movw r22,r2
	movw r24,r28
	adiw r24,49
	call uECC_vli_modAdd
	movw r30,r12
	ld r18,Z
	movw r20,r10
	movw r22,r10
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r8
	icall
	movw r18,r14
	movw r20,r28
	subi r20,-49
	sbci r21,-1
	movw r22,r8
	movw r24,r8
	call uECC_vli_modSub
	movw r18,r14
	movw r20,r8
	movw r22,r2
	movw r24,r28
	adiw r24,33
	call uECC_vli_modSub
	movw r30,r12
	ld r18,Z
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r10
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r10
	icall
	movw r18,r14
	movw r20,r6
	movw r22,r10
	movw r24,r10
	call uECC_vli_modSub
	movw r30,r12
	ld r18,Z
	movw r20,r28
	subi r20,-65
	sbci r21,-1
	movw r22,r20
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,33
	icall
	movw r18,r14
	movw r20,r28
	subi r20,-49
	sbci r21,-1
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r22
	call uECC_vli_modSub
	movw r18,r14
	movw r20,r2
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r28
	adiw r24,49
	call uECC_vli_modSub
	movw r30,r12
	ld r18,Z
	movw r20,r28
	subi r20,-65
	sbci r21,-1
	movw r22,r28
	subi r22,-49
	sbci r23,-1
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,49
	icall
	movw r18,r14
	movw r20,r6
	movw r22,r28
	subi r22,-49
	sbci r23,-1
	movw r24,r6
	call uECC_vli_modSub
	cp __zero_reg__,r17
	brge .L257
	movw r30,r28
	adiw r30,33
	movw r26,r2
	subi r17,lo8(-(-1))
	mov r24,r17
	ldi r25,0
	lsl r24
	rol r25
	ldi r18,lo8(35)
	ldi r19,0
	add r18,r28
	adc r19,r29
	add r24,r18
	adc r25,r19
.L259:
	ld r18,Z+
	ld r19,Z+
	st X+,r18
	st X+,r19
	cp r30,r24
	cpc r31,r25
	brne .L259
.L257:
/* epilogue start */
	subi r28,-80
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
	.size	XYcZ_addC, .-XYcZ_addC
.global	uECC_vli_mmod
	.type	uECC_vli_mmod, @function
uECC_vli_mmod:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,74
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 74 */
/* stack size = 92 */
.L__stack_usage = 92
	adiw r28,73-63
	std Y+63,r24
	sbiw r28,73-63
	adiw r28,74-63
	std Y+63,r25
	sbiw r28,74-63
	mov r17,r22
	mov r13,r23
	movw r14,r20
	mov r3,r18
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	movw r8,r18
	adiw r28,65-62
	std Y+63,r19
	std Y+62,r18
	sbiw r28,65-62
	adiw r28,67-63
	std Y+63,r22
	sbiw r28,67-63
	adiw r28,68-63
	std Y+63,r23
	sbiw r28,68-63
	mov r22,r3
	movw r24,r20
	call uECC_vli_numBits
	mov r18,r3
	mov __tmp_reg__,r3
	lsl r0
	sbc r19,r19
	movw r4,r18
	clr __tmp_reg__
	lsr r5
	ror r4
	ror __tmp_reg__
	lsr r5
	ror r4
	ror __tmp_reg__
	mov r5,r4
	mov r4,__tmp_reg__
	sub r4,r24
	sbc r5,r25
	movw r30,r4
	sbrc r5,7
	adiw r30,31
.L262:
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	mov r20,r30
	movw r24,r4
	andi r24,31
	andi r25,128
	sbrs r25,7
	rjmp .L263
	sbiw r24,1
	ori r24,224
	ori r25,255
	adiw r24,1
.L263:
	mov r16,r24
	cp __zero_reg__,r20
	brge .L264
	movw r26,r28
	adiw r26,33
	ldi r24,lo8(-1)
	add r24,r30
	ldi r25,0
	lsl r24
	rol r25
	ldi r20,lo8(35)
	ldi r21,0
	add r20,r28
	adc r21,r29
	add r24,r20
	adc r25,r21
.L265:
	st X+,__zero_reg__
	st X+,__zero_reg__
	cp r24,r26
	cpc r25,r27
	brne .L265
.L264:
	cp __zero_reg__,r16
	brlt .+2
	rjmp .L266
	cp r18,__zero_reg__
	cpc r19,__zero_reg__
	brne .+2
	rjmp .L267
	mov __tmp_reg__,r16
	lsl r0
	sbc r17,r17
	ldi r24,lo8(32)
	ldi r25,0
	movw r10,r24
	sub r10,r16
	sbc r11,r17
	movw r26,r14
	movw r6,r28
	ldi r21,33
	add r6,r21
	adc r7,__zero_reg__
	lsl r30
	sbc r31,r31
	add r30,r6
	adc r31,r7
	movw r22,r18
	lsl r22
	rol r23
	movw r12,r14
	add r12,r22
	adc r13,r23
	ldi r25,0
	ldi r24,0
.L268:
	ld r14,X+
	ld r15,X+
	movw r20,r14
	mov r0,r16
	rjmp 2f
	1:
	lsl r20
	rol r21
	2:
	dec r0
	brpl 1b
	or r24,r20
	or r25,r21
	st Z+,r24
	st Z+,r25
	movw r24,r14
	mov r0,r10
	rjmp 2f
	1:
	lsr r25
	ror r24
	2:
	dec r0
	brpl 1b
	cp r12,r26
	cpc r13,r27
	brne .L268
	clr r10
	inc r10
	mov r11,__zero_reg__
	sbrc r5,7
	rjmp .L273
.L272:
	movw r12,r18
	lsl r12
	rol r13
	movw r30,r6
	add r30,r22
	adc r31,r23
	movw r24,r30
	add r24,r22
	adc r25,r23
	adiw r28,69-62
	std Y+63,r25
	std Y+62,r24
	sbiw r28,69-62
	clr r10
	inc r10
	mov r11,__zero_reg__
.L282:
	ldi r23,0
	ldi r22,0
	cp __zero_reg__,r12
	cpc __zero_reg__,r13
	brlt .+2
	rjmp .L284
	movw r26,r10
	lsl r26
	rol r27
	ldi r18,lo8(65)
	ldi r19,0
	add r18,r28
	adc r19,r29
	add r26,r18
	adc r27,r19
	ld r20,X+
	ld r21,X
	ldi r24,lo8(1)
	ldi r25,0
	sub r24,r10
	sbc r25,r11
	lsl r24
	rol r25
	add r24,r18
	adc r25,r19
	movw r26,r24
	ld r16,X+
	ld r17,X
	mov r2,__zero_reg__
	ldi r23,0
	ldi r22,0
	ldi r19,0
	ldi r18,0
	ldi r25,0
	ldi r24,0
	movw r26,r20
	adiw r28,71-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,71-62
.L276:
	lsl r24
	rol r25
	movw r20,r26
	add r20,r24
	adc r21,r25
	movw r30,r20
	ld r20,Z
	ldd r21,Z+1
	lsl r18
	rol r19
	add r18,r8
	adc r19,r9
	movw r30,r18
	ldd r18,Z+32
	ldd r19,Z+33
	movw r30,r20
	sub r30,r18
	sbc r31,r19
	movw r18,r30
	sub r18,r22
	sbc r19,r23
	cp r20,r18
	cpc r21,r19
	breq .L274
	ldi r31,lo8(1)
	mov r15,__zero_reg__
	cp r20,r18
	cpc r21,r19
	brlo .L275
	ldi r31,0
.L275:
	mov r22,r31
	mov r23,r15
.L274:
	add r24,r16
	adc r25,r17
	movw r30,r24
	std Z+1,r19
	st Z,r18
	inc r2
	mov r24,r2
	mov __tmp_reg__,r2
	lsl r0
	sbc r25,r25
	movw r18,r24
	cp r24,r12
	cpc r25,r13
	brlt .L276
	adiw r28,71-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,71-62
.L284:
	ldi r24,lo8(1)
	cp r10,r22
	cpc r11,r23
	breq .L277
	ldi r24,0
.L277:
	mov r10,r24
	mov r11,__zero_reg__
	cp r6,r30
	cpc r7,r31
	brsh .L278
	movw r26,r30
.L279:
	ld r25,-X
	ld r24,-X
	lsr r25
	ror r24
	adiw r26,1
	st X,r25
	st -X,r24
	cp r6,r26
	cpc r7,r27
	brlo .L279
.L278:
	adiw r28,69-62
	ldd r18,Y+62
	ldd r19,Y+63
	sbiw r28,69-62
	cp r30,r18
	cpc r31,r19
	brsh .L280
	movw r26,r18
.L281:
	ld r25,-X
	ld r24,-X
	lsr r25
	ror r24
	adiw r26,1
	st X,r25
	st -X,r24
	cp r30,r26
	cpc r31,r27
	brlo .L281
.L280:
	ldi r19,1
	sub r4,r19
	sbc r5,__zero_reg__
	brcs .+2
	rjmp .L282
.L273:
	lsl r10
	rol r11
	ldi r30,lo8(65)
	ldi r31,0
	add r30,r28
	adc r31,r29
	add r30,r10
	adc r31,r11
	ld r17,Z
	ldd r13,Z+1
	cp __zero_reg__,r3
	brge .L261
.L288:
	mov r26,r17
	mov r27,r13
	adiw r28,73-63
	ldd r30,Y+63
	sbiw r28,73-63
	adiw r28,74-63
	ldd r31,Y+63
	sbiw r28,74-63
	ldi r24,0
.L286:
	ld r18,X+
	ld r19,X+
	st Z+,r18
	st Z+,r19
	subi r24,lo8(-(1))
	cp r24,r3
	brlt .L286
.L261:
/* epilogue start */
	subi r28,-74
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L266:
	lsl r30
	sbc r31,r31
	cp __zero_reg__,r3
	brge .L267
	movw r26,r14
	movw r6,r28
	ldi r24,33
	add r6,r24
	adc r7,__zero_reg__
	add r30,r6
	adc r31,r7
	ldi r24,lo8(-1)
	add r24,r3
	ldi r25,0
	lsl r24
	rol r25
	movw r20,r14
	subi r20,-2
	sbci r21,-1
	add r20,r24
	adc r21,r25
.L270:
	ld r24,X+
	ld r25,X+
	st Z+,r24
	st Z+,r25
	cp r26,r20
	cpc r27,r21
	brne .L270
	sbrc r5,7
	rjmp .L288
	movw r22,r18
	lsl r22
	rol r23
	rjmp .L272
.L267:
	sbrc r5,7
	rjmp .L261
	movw r26,r28
	adiw r26,33
	movw r6,r26
	movw r22,r18
	lsl r22
	rol r23
	rjmp .L272
	.size	uECC_vli_mmod, .-uECC_vli_mmod
.global	uECC_vli_modMult
	.type	uECC_vli_modMult, @function
uECC_vli_modMult:
	push r12
	push r13
	push r14
	push r15
	push r16
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 32 */
/* stack size = 39 */
.L__stack_usage = 39
	movw r14,r24
	movw r12,r18
	mov r18,r16
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	mov r18,r16
	movw r20,r12
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r14
	call uECC_vli_mmod
/* epilogue start */
	adiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	ret
	.size	uECC_vli_modMult, .-uECC_vli_modMult
.global	uECC_vli_modMult_fast
	.type	uECC_vli_modMult_fast, @function
uECC_vli_modMult_fast:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 32 */
/* stack size = 38 */
.L__stack_usage = 38
	movw r14,r24
	movw r16,r18
	movw r30,r18
	ld r18,Z
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r30,r16
	subi r30,-88
	sbci r31,-1
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r14
	icall
/* epilogue start */
	adiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	uECC_vli_modMult_fast, .-uECC_vli_modMult_fast
.global	uECC_vli_modInv
	.type	uECC_vli_modInv, @function
uECC_vli_modInv:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,89
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 89 */
/* stack size = 107 */
.L__stack_usage = 107
	cp __zero_reg__,r18
	brlt .+2
	rjmp .L304
	movw r26,r22
	ldi r19,lo8(-1)
	add r19,r18
	adiw r28,77-63
	std Y+63,r19
	sbiw r28,77-63
	mov r12,r19
	mov r13,__zero_reg__
	movw r10,r12
	lsl r10
	rol r11
	movw r14,r22
	ldi r22,2
	add r14,r22
	adc r15,__zero_reg__
	add r14,r10
	adc r15,r11
	movw r30,r26
	ldi r23,0
	ldi r22,0
.L306:
	ld r16,Z+
	ld r17,Z+
	or r22,r16
	or r23,r17
	cp r30,r14
	cpc r31,r15
	brne .L306
	or r22,r23
	brne .+2
	rjmp .L307
	movw r14,r28
	ldi r23,49
	add r14,r23
	adc r15,__zero_reg__
	movw r22,r14
	movw r8,r30
.L308:
	ld r16,X+
	ld r17,X+
	movw r30,r22
	st Z+,r16
	st Z+,r17
	movw r22,r30
	cp r8,r26
	cpc r9,r27
	brne .L308
	movw r8,r28
	ldi r31,33
	add r8,r31
	adc r9,__zero_reg__
	movw r16,r20
	subi r16,-2
	sbci r17,-1
	add r16,r10
	adc r17,r11
	movw r26,r8
	movw r30,r20
.L309:
	ld r22,Z+
	ld r23,Z+
	st X+,r22
	st X+,r23
	cp r16,r30
	cpc r17,r31
	brne .L309
	movw r22,r28
	subi r22,-17
	sbci r23,-1
	movw r4,r22
	ldi r22,lo8(19)
	ldi r23,0
	add r22,r28
	adc r23,r29
	add r22,r10
	adc r23,r11
	movw r6,r4
.L310:
	movw r30,r6
	st Z+,__zero_reg__
	st Z+,__zero_reg__
	movw r6,r30
	cp r22,r30
	cpc r23,r31
	brne .L310
	ldi r22,lo8(1)
	ldi r23,0
	std Y+18,r23
	std Y+17,r22
	ldi r22,lo8(3)
	ldi r23,0
	add r22,r28
	adc r23,r29
	add r10,r22
	adc r11,r23
	movw r30,r28
	adiw r30,1
.L311:
	st Z+,__zero_reg__
	st Z+,__zero_reg__
	cp r10,r30
	cpc r11,r31
	brne .L311
	mov r17,r18
	movw r2,r20
	adiw r28,83-63
	std Y+63,r25
	sbiw r28,83-63
	adiw r28,82-63
	std Y+63,r24
	sbiw r28,82-63
	lsl r12
	rol r13
	movw r24,r14
	add r24,r12
	adc r25,r13
	adiw r28,67-62
	std Y+63,r25
	std Y+62,r24
	sbiw r28,67-62
	movw r26,r8
	add r26,r12
	adc r27,r13
	adiw r28,69-62
	std Y+63,r27
	std Y+62,r26
	sbiw r28,69-62
	mov r24,r18
	lsl r24
	sbc r25,r25
	movw r30,r8
	add r30,r24
	adc r31,r25
	adiw r28,75-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,75-62
	ldi r18,lo8(1)
	ldi r19,0
	add r18,r28
	adc r19,r29
	add r18,r12
	adc r19,r13
	adiw r28,80-62
	std Y+63,r19
	std Y+62,r18
	sbiw r28,80-62
	ldi r22,lo8(17)
	ldi r23,0
	add r22,r28
	adc r23,r29
	add r22,r12
	adc r23,r13
	adiw r28,78-62
	std Y+63,r23
	std Y+62,r22
	sbiw r28,78-62
	movw r26,r14
	add r26,r24
	adc r27,r25
	adiw r28,65-62
	std Y+63,r27
	std Y+62,r26
	sbiw r28,65-62
	ldi r24,lo8(-2)
	add r24,r17
	mov __tmp_reg__,r24
	lsl r0
	sbc r25,r25
	adiw r24,1
	lsl r24
	rol r25
	movw r30,r14
	add r30,r24
	adc r31,r25
	adiw r28,73-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,73-62
	movw r18,r8
	add r18,r24
	adc r19,r25
	adiw r28,71-62
	std Y+63,r19
	std Y+62,r18
	sbiw r28,71-62
	ldi r22,lo8(1)
	ldi r23,0
	add r22,r28
	adc r23,r29
	add r22,r24
	adc r23,r25
	adiw r28,88-62
	std Y+63,r23
	std Y+62,r22
	sbiw r28,88-62
	ldi r26,lo8(17)
	ldi r27,0
	add r26,r28
	adc r27,r29
	add r26,r24
	adc r27,r25
	adiw r28,86-62
	std Y+63,r27
	std Y+62,r26
	sbiw r28,86-62
	adiw r28,84-62
	std Y+63,r7
	std Y+62,r6
	sbiw r28,84-62
	adiw r28,77-63
	ldd r7,Y+63
	sbiw r28,77-63
	mov r11,r17
.L312:
	adiw r28,67-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,67-62
	ld r18,X+
	ld r19,X
	adiw r28,69-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,69-62
	ld r24,Z
	ldd r25,Z+1
	cp r24,r18
	cpc r25,r19
	brsh .+2
	rjmp .L376
	cp r18,r24
	cpc r19,r25
	brsh .+2
	rjmp .L377
	adiw r28,71-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,71-62
	adiw r28,73-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,73-62
	mov r24,r7
	rjmp .L363
.L364:
	ld r21,-Z
	ld r20,-Z
	ld r19,-X
	ld r18,-X
	cp r18,r20
	cpc r19,r21
	brlo .L376
	cp r20,r18
	cpc r21,r19
	brsh .+2
	rjmp .L377
.L363:
	subi r24,1
	brcc .L364
	adiw r28,84-62
	ldd r6,Y+62
	ldd r7,Y+63
	sbiw r28,84-62
	adiw r28,82-63
	ldd r30,Y+63
	sbiw r28,82-63
	adiw r28,83-63
	ldd r31,Y+63
	sbiw r28,83-63
.L365:
	movw r26,r4
	ld r24,X+
	ld r25,X+
	movw r4,r26
	st Z+,r24
	st Z+,r25
	cp r6,r26
	cpc r7,r27
	brne .L365
.L304:
/* epilogue start */
	subi r28,-89
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L376:
	ldi r20,lo8(1)
	ldd r24,Y+49
	ldd r25,Y+50
	sbrs r24,0
	rjmp .L396
.L393:
	ldd r18,Y+33
	ldd r19,Y+34
	sbrs r18,0
	rjmp .L397
	movw r12,r28
	cpi r20,lo8(1)
	breq .+2
	rjmp .L398
	ldi r22,35
	add r12,r22
	adc r13,__zero_reg__
	movw r16,r14
	ldi r21,0
	ldi r20,0
	mov r10,__zero_reg__
	rjmp .L325
.L399:
	ld r24,Z
	ldd r25,Z+1
	movw r26,r12
	ld r18,X+
	ld r19,X+
	movw r12,r26
.L325:
	movw r26,r24
	sub r26,r18
	sbc r27,r19
	movw r18,r26
	sub r18,r20
	sbc r19,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	brlo .L321
	ldi r23,0
	ldi r22,0
.L321:
	ldi r30,lo8(1)
	ldi r31,0
	cp r18,r24
	cpc r19,r25
	brne .L322
	ldi r31,0
	ldi r30,0
.L322:
	mul r22,r30
	movw r26,r0
	mul r22,r31
	add r27,r0
	mul r23,r30
	add r27,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L323
	ldi r23,0
	ldi r22,0
.L323:
	mul r22,r20
	movw r24,r0
	mul r22,r21
	add r25,r0
	mul r23,r20
	add r25,r0
	clr r1
	movw r20,r26
	or r20,r24
	or r21,r25
	movw r30,r16
	st Z+,r18
	st Z+,r19
	movw r16,r30
	inc r10
	cp r10,r11
	brlt .L399
	adiw r28,65-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,65-62
	cp r14,r30
	cpc r15,r31
	brsh .L326
.L327:
	ld r25,-Z
	ld r24,-Z
	lsr r25
	ror r24
	std Z+1,r25
	st Z,r24
	cp r14,r30
	cpc r15,r31
	brlo .L327
.L326:
	adiw r28,78-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,78-62
	ld r24,X+
	ld r25,X
	adiw r28,80-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,80-62
	ld r18,Z
	ldd r19,Z+1
	cp r18,r24
	cpc r19,r25
	brlo .L332
	cp r24,r18
	cpc r25,r19
	brsh .+2
	rjmp .L371
	adiw r28,88-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,88-62
	adiw r28,86-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,86-62
	mov r24,r7
	rjmp .L331
.L333:
	ld r21,-Z
	ld r20,-Z
	ld r19,-X
	ld r18,-X
	cp r18,r20
	cpc r19,r21
	brlo .L332
	cp r20,r18
	cpc r21,r19
	brsh .+2
	rjmp .L371
.L331:
	subi r24,1
	brcc .L333
.L332:
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	movw r12,r18
	movw r16,r28
	subi r16,-17
	sbci r17,-1
	ldi r21,0
	ldi r20,0
	mov r10,__zero_reg__
.L329:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r30,r12
	ld r24,Z+
	ld r25,Z+
	movw r12,r30
	movw r22,r18
	sub r22,r24
	sbc r23,r25
	movw r24,r22
	sub r24,r20
	sbc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	brlo .L338
	ldi r23,0
	ldi r22,0
.L338:
	ldi r30,lo8(1)
	ldi r31,0
	cp r18,r24
	cpc r19,r25
	brne .L339
	ldi r31,0
	ldi r30,0
.L339:
	mul r22,r30
	movw r26,r0
	mul r22,r31
	add r27,r0
	mul r23,r30
	add r27,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L340
	ldi r23,0
	ldi r22,0
.L340:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r26
	or r20,r18
	or r21,r19
	movw r30,r16
	sbiw r30,2
	std Z+1,r25
	st Z,r24
	inc r10
	cp r10,r11
	brlt .L329
.L341:
	mov r20,r11
	movw r22,r2
	movw r24,r28
	adiw r24,17
	call vli_modInv_update
	rjmp .L312
.L377:
	ldi r20,lo8(-1)
	ldd r24,Y+49
	ldd r25,Y+50
	sbrc r24,0
	rjmp .L393
.L396:
	adiw r28,65-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,65-62
	cp r14,r30
	cpc r15,r31
	brsh .L341
.L314:
	ld r25,-Z
	ld r24,-Z
	lsr r25
	ror r24
	std Z+1,r25
	st Z,r24
	cp r14,r30
	cpc r15,r31
	brlo .L314
	mov r20,r11
	movw r22,r2
	movw r24,r28
	adiw r24,17
	call vli_modInv_update
	rjmp .L312
.L397:
	adiw r28,75-62
	ldd r18,Y+62
	ldd r19,Y+63
	sbiw r28,75-62
	cp r8,r18
	cpc r9,r19
	brsh .L361
	movw r30,r18
.L318:
	ld r25,-Z
	ld r24,-Z
	lsr r25
	ror r24
	std Z+1,r25
	st Z,r24
	cp r8,r30
	cpc r9,r31
	brlo .L318
.L361:
	mov r20,r11
	movw r22,r2
	movw r24,r28
	adiw r24,1
	call vli_modInv_update
	rjmp .L312
.L398:
	ldi r20,51
	add r12,r20
	adc r13,__zero_reg__
	movw r16,r8
	ldi r21,0
	ldi r20,0
	mov r10,__zero_reg__
	rjmp .L320
.L400:
	ld r18,Z
	ldd r19,Z+1
	movw r26,r12
	ld r24,X+
	ld r25,X+
	movw r12,r26
.L320:
	movw r26,r18
	sub r26,r24
	sbc r27,r25
	movw r24,r26
	sub r24,r20
	sbc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	brlo .L342
	ldi r23,0
	ldi r22,0
.L342:
	ldi r30,lo8(1)
	ldi r31,0
	cp r24,r18
	cpc r25,r19
	brne .L343
	ldi r31,0
	ldi r30,0
.L343:
	mul r22,r30
	movw r26,r0
	mul r22,r31
	add r27,r0
	mul r23,r30
	add r27,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	breq .L344
	ldi r23,0
	ldi r22,0
.L344:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r26
	or r20,r18
	or r21,r19
	movw r30,r16
	st Z+,r24
	st Z+,r25
	movw r16,r30
	inc r10
	cp r10,r11
	brlt .L400
	adiw r28,75-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,75-62
	cp r8,r30
	cpc r9,r31
	brsh .L346
.L347:
	ld r25,-Z
	ld r24,-Z
	lsr r25
	ror r24
	std Z+1,r25
	st Z,r24
	cp r8,r30
	cpc r9,r31
	brlo .L347
.L346:
	adiw r28,80-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,80-62
	ld r24,X+
	ld r25,X
	adiw r28,78-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,78-62
	ld r18,Z
	ldd r19,Z+1
	cp r18,r24
	cpc r19,r25
	brlo .L352
	cp r24,r18
	cpc r25,r19
	brsh .+2
	rjmp .L373
	adiw r28,86-62
	ldd r26,Y+62
	ldd r27,Y+63
	sbiw r28,86-62
	adiw r28,88-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,88-62
	mov r24,r7
	rjmp .L351
.L353:
	ld r21,-Z
	ld r20,-Z
	ld r19,-X
	ld r18,-X
	cp r18,r20
	cpc r19,r21
	brlo .L352
	cp r20,r18
	cpc r21,r19
	brsh .+2
	rjmp .L373
.L351:
	subi r24,1
	brcc .L353
.L352:
	movw r18,r28
	subi r18,-17
	sbci r19,-1
	movw r12,r18
	movw r16,r28
	subi r16,-1
	sbci r17,-1
	ldi r21,0
	ldi r20,0
	mov r10,__zero_reg__
.L349:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r30,r12
	ld r24,Z+
	ld r25,Z+
	movw r12,r30
	movw r22,r18
	sub r22,r24
	sbc r23,r25
	movw r24,r22
	sub r24,r20
	sbc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	brlo .L358
	ldi r23,0
	ldi r22,0
.L358:
	ldi r30,lo8(1)
	ldi r31,0
	cp r18,r24
	cpc r19,r25
	brne .L359
	ldi r31,0
	ldi r30,0
.L359:
	mul r22,r30
	movw r26,r0
	mul r22,r31
	add r27,r0
	mul r23,r30
	add r27,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L360
	ldi r23,0
	ldi r22,0
.L360:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r26
	or r20,r18
	or r21,r19
	movw r30,r16
	sbiw r30,2
	std Z+1,r25
	st Z,r24
	inc r10
	cp r10,r11
	brlt .L349
	mov r20,r11
	movw r22,r2
	movw r24,r28
	adiw r24,1
	call vli_modInv_update
	rjmp .L312
.L307:
	movw r30,r24
	adiw r24,2
	add r10,r24
	adc r11,r25
.L367:
	st Z+,__zero_reg__
	st Z+,__zero_reg__
	cp r30,r10
	cpc r31,r11
	brne .L367
	rjmp .L304
.L371:
	movw r12,r2
	movw r16,r28
	subi r16,-17
	sbci r17,-1
	ldi r21,0
	ldi r20,0
	mov r10,__zero_reg__
.L337:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r30,r12
	ld r24,Z+
	ld r25,Z+
	movw r12,r30
	add r24,r18
	adc r25,r19
	add r24,r20
	adc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	brlo .L334
	ldi r23,0
	ldi r22,0
.L334:
	ldi r30,lo8(1)
	ldi r31,0
	cp r18,r24
	cpc r19,r25
	brne .L335
	ldi r31,0
	ldi r30,0
.L335:
	mul r22,r30
	movw r26,r0
	mul r22,r31
	add r27,r0
	mul r23,r30
	add r27,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L336
	ldi r23,0
	ldi r22,0
.L336:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r26
	or r20,r18
	or r21,r19
	movw r30,r16
	sbiw r30,2
	std Z+1,r25
	st Z,r24
	inc r10
	cp r10,r11
	brlt .L337
	rjmp .L332
.L373:
	movw r12,r2
	movw r16,r28
	subi r16,-1
	sbci r17,-1
	ldi r21,0
	ldi r20,0
	mov r10,__zero_reg__
.L357:
	movw r26,r16
	ld r18,X+
	ld r19,X+
	movw r16,r26
	movw r30,r12
	ld r24,Z+
	ld r25,Z+
	movw r12,r30
	add r24,r18
	adc r25,r19
	add r24,r20
	adc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	brlo .L354
	ldi r23,0
	ldi r22,0
.L354:
	ldi r30,lo8(1)
	ldi r31,0
	cp r18,r24
	cpc r19,r25
	brne .L355
	ldi r31,0
	ldi r30,0
.L355:
	mul r22,r30
	movw r26,r0
	mul r22,r31
	add r27,r0
	mul r23,r30
	add r27,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L356
	ldi r23,0
	ldi r22,0
.L356:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r26
	or r20,r18
	or r21,r19
	movw r30,r16
	sbiw r30,2
	std Z+1,r25
	st Z,r24
	inc r10
	cp r10,r11
	brlt .L357
	rjmp .L352
	.size	uECC_vli_modInv, .-uECC_vli_modInv
.global	uECC_secp256r1
	.type	uECC_secp256r1, @function
uECC_secp256r1:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	ldi r24,lo8(curve_secp256r1)
	ldi r25,hi8(curve_secp256r1)
/* epilogue start */
	ret
	.size	uECC_secp256r1, .-uECC_secp256r1
.global	EccPoint_isZero
	.type	EccPoint_isZero, @function
EccPoint_isZero:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	movw r30,r22
	ld r18,Z
	lsl r18
	cp __zero_reg__,r18
	brge .L406
	movw r30,r24
	subi r18,lo8(-(-1))
	mov r24,r18
	ldi r25,0
	lsl r24
	rol r25
	movw r18,r30
	subi r18,-2
	sbci r19,-1
	add r24,r18
	adc r25,r19
	ldi r19,0
	ldi r18,0
.L404:
	ld r20,Z+
	ld r21,Z+
	or r18,r20
	or r19,r21
	cp r24,r30
	cpc r25,r31
	brne .L404
	ldi r24,lo8(1)
	ldi r25,0
	or r18,r19
	brne .L411
/* epilogue start */
	ret
.L411:
	ldi r24,0
	ret
.L406:
	ldi r24,lo8(1)
	ldi r25,0
/* epilogue start */
	ret
	.size	EccPoint_isZero, .-EccPoint_isZero
.global	apply_z
	.type	apply_z, @function
apply_z:
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 48 */
/* stack size = 60 */
.L__stack_usage = 60
	movw r8,r24
	movw r10,r22
	movw r12,r20
	movw r16,r18
	movw r26,r18
	ld r18,X
	movw r22,r20
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r14,r16
	ldi r27,88
	add r14,r27
	adc r15,__zero_reg__
	movw r26,r14
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,33
	icall
	movw r30,r16
	ld r18,Z
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r8
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r14
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r8
	icall
	movw r30,r16
	ld r18,Z
	movw r20,r12
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r14
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,33
	icall
	movw r30,r16
	ld r18,Z
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r10
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r14
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r10
	icall
/* epilogue start */
	adiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	ret
	.size	apply_z, .-apply_z
.global	XYcZ_add
	.type	XYcZ_add, @function
XYcZ_add:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 48 */
/* stack size = 66 */
.L__stack_usage = 66
	movw r8,r24
	movw r6,r22
	movw r2,r20
	movw r12,r18
	movw r14,r16
	movw r26,r16
	ld r17,X
	movw r10,r14
	ldi r27,4
	add r10,r27
	adc r11,__zero_reg__
	mov r16,r17
	movw r18,r10
	movw r20,r24
	movw r22,r2
	movw r24,r28
	adiw r24,33
	call uECC_vli_modSub
	movw r30,r14
	ld r18,Z
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r20
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r4,r14
	ldi r31,88
	add r4,r31
	adc r5,__zero_reg__
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,33
	icall
	movw r30,r14
	ld r18,Z
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r8
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r8
	icall
	movw r30,r14
	ld r18,Z
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r2
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r2
	icall
	movw r18,r10
	movw r20,r6
	movw r22,r12
	movw r24,r12
	call uECC_vli_modSub
	movw r30,r14
	ld r18,Z
	movw r20,r12
	movw r22,r12
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,33
	icall
	movw r18,r10
	movw r20,r8
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r22
	call uECC_vli_modSub
	movw r18,r10
	movw r20,r2
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r22
	call uECC_vli_modSub
	movw r18,r10
	movw r20,r8
	movw r22,r2
	movw r24,r2
	call uECC_vli_modSub
	movw r30,r14
	ld r18,Z
	movw r20,r2
	movw r22,r6
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r6
	icall
	movw r18,r10
	movw r20,r28
	subi r20,-33
	sbci r21,-1
	movw r22,r8
	movw r24,r2
	call uECC_vli_modSub
	movw r30,r14
	ld r18,Z
	movw r20,r2
	movw r22,r12
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r26,r4
	ld r30,X+
	ld r31,X
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r12
	icall
	movw r18,r10
	movw r20,r6
	movw r22,r12
	movw r24,r12
	call uECC_vli_modSub
	cp __zero_reg__,r17
	brge .L413
	movw r30,r28
	adiw r30,33
	movw r26,r2
	subi r17,lo8(-(-1))
	mov r24,r17
	ldi r25,0
	lsl r24
	rol r25
	ldi r18,lo8(35)
	ldi r19,0
	add r18,r28
	adc r19,r29
	add r24,r18
	adc r25,r19
.L415:
	ld r18,Z+
	ld r19,Z+
	st X+,r18
	st X+,r19
	cp r30,r24
	cpc r31,r25
	brne .L415
.L413:
/* epilogue start */
	adiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
	.size	XYcZ_add, .-XYcZ_add
.global	EccPoint_mult
	.type	EccPoint_mult, @function
EccPoint_mult:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,-127
	sbc r29,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 129 */
/* stack size = 147 */
.L__stack_usage = 147
	subi r28,lo8(-128)
	sbci r29,hi8(-128)
	std Y+1,r25
	st Y,r24
	subi r28,lo8(128)
	sbci r29,hi8(128)
	adiw r28,122-62
	std Y+63,r23
	std Y+62,r22
	sbiw r28,122-62
	adiw r28,120-62
	std Y+63,r21
	std Y+62,r20
	sbiw r28,120-62
	movw r10,r16
	movw r4,r14
	movw r26,r14
	ld r27,X
	adiw r28,119-63
	std Y+63,r27
	sbiw r28,119-63
	mov r30,r27
	lsl r30
	sbc r31,r31
	adiw r28,124-62
	std Y+63,r31
	std Y+62,r30
	sbiw r28,124-62
	add r22,r30
	adc r23,r31
	subi r28,lo8(-126)
	sbci r29,hi8(-126)
	std Y+1,r23
	st Y,r22
	subi r28,lo8(126)
	sbci r29,hi8(126)
	cp __zero_reg__,r27
	brlt .+2
	rjmp .L418
	adiw r28,122-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,122-62
	movw r8,r28
	ldi r20,65
	add r8,r20
	adc r9,__zero_reg__
	movw r26,r8
	adiw r26,16
	adiw r28,119-63
	ldd r24,Y+63
	sbiw r28,119-63
	subi r24,lo8(-(-1))
	mov r20,r24
	ldi r21,0
	lsl r20
	rol r21
	movw r16,r30
	subi r16,-2
	sbci r17,-1
	add r16,r20
	adc r17,r21
.L419:
	ld r22,Z+
	ld r23,Z+
	st X+,r22
	st X+,r23
	cp r16,r30
	cpc r17,r31
	brne .L419
	subi r28,lo8(-126)
	sbci r29,hi8(-126)
	ld r26,Y
	ldd r27,Y+1
	subi r28,lo8(126)
	sbci r29,hi8(126)
	movw r16,r28
	subi r16,-49
	sbci r17,-1
	movw r30,r16
	ldi r22,lo8(51)
	ldi r23,0
	add r22,r28
	adc r23,r29
	add r20,r22
	adc r21,r23
.L420:
	ld r22,X+
	ld r23,X+
	st Z+,r22
	st Z+,r23
	cp r30,r20
	cpc r31,r21
	brne .L420
	cp r18,__zero_reg__
	cpc r19,__zero_reg__
	brne .+2
	rjmp .L453
	movw r30,r18
	movw r26,r28
	adiw r26,1
	adiw r28,117-62
	std Y+63,r27
	std Y+62,r26
	sbiw r28,117-62
	ldi r25,0
	lsl r24
	rol r25
	subi r18,-2
	sbci r19,-1
	add r24,r18
	adc r25,r19
.L422:
	ld r18,Z+
	ld r19,Z+
	st X+,r18
	st X+,r19
	cp r24,r30
	cpc r25,r31
	brne .L422
.L435:
	movw r30,r8
	ldi r24,0
	adiw r28,119-63
	ldd r25,Y+63
	sbiw r28,119-63
.L423:
	ldd r18,Z+16
	ldd r19,Z+17
	st Z+,r18
	st Z+,r19
	subi r24,lo8(-(1))
	cp r24,r25
	brlt .L423
	movw r2,r28
	ldi r27,33
	add r2,r27
	adc r3,__zero_reg__
	movw r30,r2
	ldi r24,0
	adiw r28,119-63
	ldd r25,Y+63
	sbiw r28,119-63
.L426:
	ldd r18,Z+16
	ldd r19,Z+17
	st Z+,r18
	st Z+,r19
	subi r24,lo8(-(1))
	cp r24,r25
	brlt .L426
.L433:
	movw r18,r4
	adiw r28,117-62
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,117-62
	movw r22,r16
	movw r14,r8
	ldi r30,16
	add r14,r30
	adc r15,__zero_reg__
	movw r24,r14
	call apply_z
	movw r30,r4
	subi r30,-84
	sbci r31,-1
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	movw r18,r4
	adiw r28,117-62
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,117-62
	movw r22,r16
	movw r24,r14
	icall
	movw r18,r4
	adiw r28,117-62
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,117-62
	movw r22,r2
	movw r24,r8
	call apply_z
	ldi r31,2
	sub r10,r31
	sbc r11,__zero_reg__
	cp __zero_reg__,r10
	cpc __zero_reg__,r11
	brlt .+2
	rjmp .L427
	clr r6
	inc r6
	mov r7,__zero_reg__
.L429:
	movw r30,r10
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	lsl r30
	rol r31
	adiw r28,120-62
	ldd r18,Y+62
	ldd r19,Y+63
	sbiw r28,120-62
	add r30,r18
	adc r31,r19
	movw r24,r10
	andi r24,31
	clr r25
	movw r20,r6
	rjmp 2f
	1:
	lsl r20
	rol r21
	2:
	dec r24
	brpl 1b
	movw r24,r20
	ld r18,Z
	ldd r19,Z+1
	and r24,r18
	and r25,r19
	ldi r18,lo8(1)
	ldi r19,0
	or r24,r25
	breq .L428
	ldi r19,0
	ldi r18,0
.L428:
	movw r24,r18
	swap r24
	swap r25
	andi r25,0xf0
	eor r25,r24
	andi r24,0xf0
	eor r25,r24
	movw r22,r2
	add r22,r24
	adc r23,r25
	adiw r28,113-62
	std Y+63,r23
	std Y+62,r22
	sbiw r28,113-62
	movw r26,r8
	add r26,r24
	adc r27,r25
	adiw r28,115-62
	std Y+63,r27
	std Y+62,r26
	sbiw r28,115-62
	movw r14,r6
	sub r14,r18
	sbc r15,r19
	swap r14
	swap r15
	ldi r30,0xf0
	and r15,r30
	eor r15,r14
	and r14,r30
	eor r15,r14
	movw r12,r2
	add r12,r14
	adc r13,r15
	add r14,r8
	adc r15,r9
	movw r16,r4
	movw r18,r22
	movw r20,r26
	movw r22,r12
	movw r24,r14
	call XYcZ_addC
	movw r18,r12
	movw r20,r14
	adiw r28,113-62
	ldd r22,Y+62
	ldd r23,Y+63
	sbiw r28,113-62
	adiw r28,115-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,115-62
	call XYcZ_add
	ldi r27,1
	sub r10,r27
	sbc r11,__zero_reg__
	breq .+2
	rjmp .L429
.L427:
	adiw r28,120-62
	ldd r30,Y+62
	ldd r31,Y+63
	sbiw r28,120-62
	ld r14,Z
	ldd r15,Z+1
	movw r6,r14
	com r6
	com r7
	ldi r31,1
	and r6,r31
	clr r7
	swap r6
	swap r7
	ldi r21,0xf0
	and r7,r21
	eor r7,r6
	and r6,r21
	eor r7,r6
	movw r18,r2
	add r18,r6
	adc r19,r7
	adiw r28,113-62
	std Y+63,r19
	std Y+62,r18
	sbiw r28,113-62
	add r6,r8
	adc r7,r9
	ldi r19,1
	and r14,r19
	clr r15
	swap r14
	swap r15
	ldi r22,0xf0
	and r15,r22
	eor r15,r14
	and r14,r22
	eor r15,r14
	movw r10,r2
	add r10,r14
	adc r11,r15
	add r14,r8
	adc r15,r9
	movw r16,r4
	adiw r28,113-62
	ldd r18,Y+62
	ldd r19,Y+63
	sbiw r28,113-62
	movw r20,r6
	movw r22,r10
	movw r24,r14
	call XYcZ_addC
	movw r12,r4
	ldi r20,4
	add r12,r20
	adc r13,__zero_reg__
	adiw r28,119-63
	ldd r16,Y+63
	sbiw r28,119-63
	movw r18,r12
	movw r20,r8
	movw r22,r8
	subi r22,-16
	sbci r23,-1
	movw r24,r28
	subi r24,-97
	sbci r25,-1
	call uECC_vli_modSub
	movw r26,r4
	ld r18,X
	movw r20,r10
	movw r22,r28
	subi r22,-97
	sbci r23,-1
	adiw r28,117-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,117-62
	call uECC_vli_mult
	movw r16,r4
	subi r16,-88
	sbci r17,-1
	movw r26,r16
	ld r30,X+
	ld r31,X
	adiw r28,117-62
	ldd r22,Y+62
	ldd r23,Y+63
	sbiw r28,117-62
	movw r24,r28
	subi r24,-97
	sbci r25,-1
	icall
	movw r30,r4
	ld r18,Z
	adiw r28,122-62
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,122-62
	movw r22,r28
	subi r22,-97
	sbci r23,-1
	adiw r28,117-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,117-62
	call uECC_vli_mult
	movw r26,r16
	ld r30,X+
	ld r31,X
	adiw r28,117-62
	ldd r22,Y+62
	ldd r23,Y+63
	sbiw r28,117-62
	movw r24,r28
	subi r24,-97
	sbci r25,-1
	icall
	adiw r28,119-63
	ldd r18,Y+63
	sbiw r28,119-63
	movw r20,r12
	movw r22,r28
	subi r22,-97
	sbci r23,-1
	movw r24,r22
	call uECC_vli_modInv
	movw r30,r4
	ld r18,Z
	subi r28,lo8(-126)
	sbci r29,hi8(-126)
	ld r20,Y
	ldd r21,Y+1
	subi r28,lo8(126)
	sbci r29,hi8(126)
	movw r22,r28
	subi r22,-97
	sbci r23,-1
	adiw r28,117-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,117-62
	call uECC_vli_mult
	movw r26,r16
	ld r30,X+
	ld r31,X
	adiw r28,117-62
	ldd r22,Y+62
	ldd r23,Y+63
	sbiw r28,117-62
	movw r24,r28
	subi r24,-97
	sbci r25,-1
	icall
	movw r30,r4
	ld r18,Z
	movw r20,r14
	movw r22,r28
	subi r22,-97
	sbci r23,-1
	adiw r28,117-62
	ldd r24,Y+62
	ldd r25,Y+63
	sbiw r28,117-62
	call uECC_vli_mult
	movw r26,r16
	ld r30,X+
	ld r31,X
	adiw r28,117-62
	ldd r22,Y+62
	ldd r23,Y+63
	sbiw r28,117-62
	movw r24,r28
	subi r24,-97
	sbci r25,-1
	icall
	movw r16,r4
	movw r18,r10
	movw r20,r14
	adiw r28,113-62
	ldd r22,Y+62
	ldd r23,Y+63
	sbiw r28,113-62
	movw r24,r6
	call XYcZ_add
	movw r18,r4
	movw r20,r28
	subi r20,-97
	sbci r21,-1
	movw r22,r2
	movw r24,r8
	call apply_z
	adiw r28,119-63
	ldd r27,Y+63
	sbiw r28,119-63
	cp __zero_reg__,r27
	brge .L417
	movw r30,r8
	subi r28,lo8(-128)
	sbci r29,hi8(-128)
	ld r26,Y
	ldd r27,Y+1
	subi r28,lo8(128)
	sbci r29,hi8(128)
	adiw r28,119-63
	ldd r24,Y+63
	sbiw r28,119-63
	subi r24,lo8(-(-1))
	mov r18,r24
	ldi r19,0
	lsl r18
	rol r19
	movw r20,r8
	subi r20,-2
	sbci r21,-1
	add r20,r18
	adc r21,r19
.L431:
	ld r24,Z+
	ld r25,Z+
	st X+,r24
	st X+,r25
	cp r20,r30
	cpc r21,r31
	brne .L431
	movw r30,r2
	subi r28,lo8(-128)
	sbci r29,hi8(-128)
	ld r26,Y
	ldd r27,Y+1
	subi r28,lo8(128)
	sbci r29,hi8(128)
	adiw r28,124-62
	ldd r20,Y+62
	ldd r21,Y+63
	sbiw r28,124-62
	add r26,r20
	adc r27,r21
	ldi r22,lo8(35)
	ldi r23,0
	add r22,r28
	adc r23,r29
	add r18,r22
	adc r19,r23
.L432:
	ld r24,Z+
	ld r25,Z+
	st X+,r24
	st X+,r25
	cp r30,r18
	cpc r31,r19
	brne .L432
.L417:
/* epilogue start */
	subi r28,127
	sbci r29,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L453:
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	adiw r28,117-62
	std Y+63,r19
	std Y+62,r18
	sbiw r28,117-62
	movw r30,r18
	ldi r25,0
	lsl r24
	rol r25
	ldi r20,lo8(3)
	ldi r21,0
	add r20,r28
	adc r21,r29
	add r24,r20
	adc r25,r21
.L424:
	st Z+,__zero_reg__
	st Z+,__zero_reg__
	cp r24,r30
	cpc r25,r31
	brne .L424
	ldi r24,lo8(1)
	ldi r25,0
	std Y+2,r25
	std Y+1,r24
	rjmp .L435
.L418:
	or r18,r19
	breq .L452
	movw r24,r28
	subi r24,-65
	sbci r25,-1
	movw r8,r24
	movw r16,r28
	subi r16,-49
	sbci r17,-1
	movw r26,r28
	adiw r26,1
	adiw r28,117-62
	std Y+63,r27
	std Y+62,r26
	sbiw r28,117-62
	movw r30,r28
	adiw r30,33
	movw r2,r30
	rjmp .L433
.L452:
	ldi r24,lo8(1)
	ldi r25,0
	std Y+2,r25
	std Y+1,r24
	movw r22,r28
	subi r22,-65
	sbci r23,-1
	movw r8,r22
	movw r16,r28
	subi r16,-49
	sbci r17,-1
	movw r24,r28
	adiw r24,1
	adiw r28,117-62
	std Y+63,r25
	std Y+62,r24
	sbiw r28,117-62
	movw r26,r28
	adiw r26,33
	movw r2,r26
	rjmp .L433
	.size	EccPoint_mult, .-EccPoint_mult
.global	regularize_k
	.type	regularize_k, @function
regularize_k:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	rcall .
	push __zero_reg__
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 3 */
/* stack size = 21 */
.L__stack_usage = 21
	movw r10,r22
	mov r6,r20
	std Y+1,r21
	movw r26,r18
	adiw r26,2
	ld r8,X+
	ld r9,X
	movw r2,r8
	ldi r27,31
	add r2,r27
	adc r3,__zero_reg__
	sbrs r3,7
	rjmp .L455
	movw r2,r8
	ldi r30,62
	add r2,r30
	adc r3,__zero_reg__
.L455:
	asr r3
	ror r2
	asr r3
	ror r2
	asr r3
	ror r2
	asr r3
	ror r2
	asr r3
	ror r2
	mov r7,r2
	movw r4,r18
	ldi r31,20
	add r4,r31
	adc r5,__zero_reg__
	cp __zero_reg__,r2
	brlt .+2
	rjmp .L464
	movw r30,r24
	movw r16,r4
	std Y+3,r11
	std Y+2,r10
	clr r14
	dec r14
	add r14,r2
	mov r15,__zero_reg__
	lsl r14
	rol r15
	adiw r24,2
	add r14,r24
	adc r15,r25
	ldi r21,0
	ldi r20,0
.L462:
	ld r18,Z+
	ld r19,Z+
	movw r26,r16
	ld r24,X+
	ld r25,X+
	movw r16,r26
	add r24,r18
	adc r25,r19
	add r24,r20
	adc r25,r21
	ldi r22,lo8(1)
	ldi r23,0
	cp r24,r18
	cpc r25,r19
	brlo .L459
	ldi r23,0
	ldi r22,0
.L459:
	ldi r26,lo8(1)
	ldi r27,0
	cp r18,r24
	cpc r19,r25
	brne .L460
	ldi r27,0
	ldi r26,0
.L460:
	mul r22,r26
	movw r12,r0
	mul r22,r27
	add r13,r0
	mul r23,r26
	add r13,r0
	clr r1
	ldi r22,lo8(1)
	ldi r23,0
	cp r18,r24
	cpc r19,r25
	breq .L461
	ldi r23,0
	ldi r22,0
.L461:
	mul r22,r20
	movw r18,r0
	mul r22,r21
	add r19,r0
	mul r23,r20
	add r19,r0
	clr r1
	movw r20,r12
	or r20,r18
	or r21,r19
	ldd r26,Y+2
	ldd r27,Y+3
	st X+,r24
	st X+,r25
	std Y+3,r27
	std Y+2,r26
	cp r14,r30
	cpc r15,r31
	brne .L462
	ldi r24,lo8(1)
	ldi r25,0
	or r20,r21
	brne .+2
	rjmp .L464
.L463:
	mov r16,r6
	ldd r17,Y+1
	mov r13,__zero_reg__
	mov r12,__zero_reg__
	mov r15,__zero_reg__
.L470:
	movw r26,r10
	ld r30,X+
	ld r31,X+
	movw r10,r26
	movw r26,r4
	ld r20,X+
	ld r21,X+
	movw r4,r26
	add r20,r30
	adc r21,r31
	add r20,r12
	adc r21,r13
	clr r8
	inc r8
	mov r9,__zero_reg__
	cp r20,r30
	cpc r21,r31
	brlo .L467
	mov r9,__zero_reg__
	mov r8,__zero_reg__
.L467:
	ldi r18,lo8(1)
	ldi r19,0
	cp r30,r20
	cpc r31,r21
	brne .L468
	ldi r19,0
	ldi r18,0
.L468:
	mul r8,r18
	movw r22,r0
	mul r8,r19
	add r23,r0
	mul r9,r18
	add r23,r0
	clr r1
	ldi r18,lo8(1)
	ldi r19,0
	cp r30,r20
	cpc r31,r21
	breq .L469
	ldi r19,0
	ldi r18,0
.L469:
	mul r18,r12
	movw r30,r0
	mul r18,r13
	add r31,r0
	mul r19,r12
	add r31,r0
	clr r1
	movw r12,r22
	or r12,r30
	or r13,r31
	movw r30,r16
	st Z+,r20
	st Z+,r21
	movw r16,r30
	inc r15
	cp r15,r7
	brlt .L470
.L454:
/* epilogue start */
	pop __tmp_reg__
	pop __tmp_reg__
	pop __tmp_reg__
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L464:
	mov r18,r2
	ldi r19,lo8(32)
	muls r18,r19
	movw r2,r0
	clr __zero_reg__
	ldi r24,0
	ldi r25,0
	cp r8,r2
	cpc r9,r3
	brlt .L474
.L458:
	cp __zero_reg__,r7
	brge .+2
	rjmp .L463
	rjmp .L454
.L474:
	movw r30,r8
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	asr r31
	ror r30
	lsl r30
	rol r31
	add r30,r10
	adc r31,r11
	ldi r27,31
	and r8,r27
	clr r9
	ldi r18,lo8(1)
	ldi r19,0
	rjmp 2f
	1:
	lsl r18
	rol r19
	2:
	dec r8
	brpl 1b
	ld r24,Z
	ldd r25,Z+1
	and r18,r24
	and r19,r25
	ldi r24,lo8(1)
	ldi r25,0
	or r18,r19
	brne .L458
	ldi r24,0
	cp __zero_reg__,r7
	brge .+2
	rjmp .L463
	rjmp .L454
	.size	regularize_k, .-regularize_k
.global	EccPoint_compute_public_key
	.type	EccPoint_compute_public_key, @function
EccPoint_compute_public_key:
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,36
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 36 */
/* stack size = 46 */
.L__stack_usage = 46
	movw r10,r24
	movw r24,r22
	movw r12,r20
	movw r22,r28
	subi r22,-17
	sbci r23,-1
	std Y+34,r23
	std Y+33,r22
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	movw r14,r18
	std Y+36,r19
	std Y+35,r18
	movw r18,r20
	movw r20,r14
	call regularize_k
	movw r30,r12
	ldd r16,Z+2
	ldd r17,Z+3
	subi r16,-1
	sbci r17,-1
	ldi r18,lo8(1)
	ldi r19,0
	or r24,r25
	breq .L476
	ldi r19,0
	ldi r18,0
.L476:
	lsl r18
	rol r19
	add r14,r18
	adc r15,r19
	movw r30,r14
	ldd r20,Z+32
	ldd r21,Z+33
	movw r22,r12
	subi r22,-36
	sbci r23,-1
	movw r14,r12
	ldi r19,0
	ldi r18,0
	movw r24,r10
	call EccPoint_mult
	movw r30,r12
	ld r24,Z
	lsl r24
	cp __zero_reg__,r24
	brge .L480
	movw r30,r10
	subi r24,lo8(-(-1))
	ldi r25,0
	lsl r24
	rol r25
	movw r18,r10
	subi r18,-2
	sbci r19,-1
	add r24,r18
	adc r25,r19
	ldi r19,0
	ldi r18,0
.L478:
	ld r20,Z+
	ld r21,Z+
	or r18,r20
	or r19,r21
	cp r24,r30
	cpc r25,r31
	brne .L478
	ldi r24,lo8(1)
	ldi r25,0
	or r18,r19
	breq .L485
.L475:
/* epilogue start */
	adiw r28,36
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	ret
.L485:
	ldi r24,0
	rjmp .L475
.L480:
	ldi r24,0
	ldi r25,0
	rjmp .L475
	.size	EccPoint_compute_public_key, .-EccPoint_compute_public_key
.global	uECC_vli_nativeToBytes
	.type	uECC_vli_nativeToBytes, @function
uECC_vli_nativeToBytes:
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 3 */
.L__stack_usage = 3
	cp __zero_reg__,r22
	cpc __zero_reg__,r23
	brge .L486
	movw r28,r22
	sbiw r28,1
	ldi r17,0
	ldi r19,0
	ldi r18,0
	ldi r31,0
	ldi r30,0
.L488:
	movw r26,r28
	sub r26,r18
	sbc r27,r19
	movw r18,r26
	add r30,r24
	adc r31,r25
	lsr r27
	ror r26
	lsr r27
	ror r26
	lsl r26
	rol r27
	add r26,r20
	adc r27,r21
	andi r18,3
	clr r19
	lsl r18
	rol r19
	lsl r18
	rol r19
	lsl r18
	rol r19
	ld __tmp_reg__,X+
	ld r27,X
	mov r26,__tmp_reg__
	rjmp 2f
	1:
	lsr r27
	ror r26
	2:
	dec r18
	brpl 1b
	st Z,r26
	subi r17,lo8(-(1))
	mov r30,r17
	mov __tmp_reg__,r17
	lsl r0
	sbc r31,r31
	movw r18,r30
	cp r30,r22
	cpc r31,r23
	brlt .L488
.L486:
/* epilogue start */
	pop r29
	pop r28
	pop r17
	ret
	.size	uECC_vli_nativeToBytes, .-uECC_vli_nativeToBytes
.global	uECC_vli_bytesToNative
	.type	uECC_vli_bytesToNative, @function
uECC_vli_bytesToNative:
	push r14
	push r15
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 5 */
.L__stack_usage = 5
	movw r18,r20
	subi r18,-3
	sbci r19,-1
	sbrs r19,7
	rjmp .L491
	subi r18,-3
	sbci r19,-1
.L491:
	asr r19
	ror r18
	asr r19
	ror r18
	cp __zero_reg__,r18
	brge .L492
	movw r30,r24
	subi r18,lo8(-(-1))
	ldi r19,0
	lsl r18
	rol r19
	movw r26,r24
	adiw r26,2
	add r18,r26
	adc r19,r27
.L493:
	st Z+,__zero_reg__
	st Z+,__zero_reg__
	cp r18,r30
	cpc r19,r31
	brne .L493
.L492:
	cp __zero_reg__,r20
	cpc __zero_reg__,r21
	brge .L490
	movw r28,r20
	sbiw r28,1
	ldi r17,0
	ldi r19,0
	ldi r18,0
	ldi r27,0
	ldi r26,0
.L495:
	movw r14,r28
	sub r14,r18
	sbc r15,r19
	movw r18,r14
	movw r30,r14
	lsr r31
	ror r30
	lsr r31
	ror r30
	lsl r30
	rol r31
	add r30,r24
	adc r31,r25
	add r26,r22
	adc r27,r23
	ld r26,X
	ldi r27,0
	andi r18,3
	clr r19
	lsl r18
	rol r19
	lsl r18
	rol r19
	lsl r18
	rol r19
	movw r14,r26
	rjmp 2f
	1:
	lsl r14
	rol r15
	2:
	dec r18
	brpl 1b
	movw r18,r14
	ld r26,Z
	ldd r27,Z+1
	or r18,r26
	or r19,r27
	std Z+1,r19
	st Z,r18
	subi r17,lo8(-(1))
	mov r26,r17
	mov __tmp_reg__,r17
	lsl r0
	sbc r27,r27
	movw r18,r26
	cp r26,r20
	cpc r27,r21
	brlt .L495
.L490:
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r15
	pop r14
	ret
	.size	uECC_vli_bytesToNative, .-uECC_vli_bytesToNative
.global	uECC_generate_random_int
	.type	uECC_generate_random_int, @function
uECC_generate_random_int:
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 15 */
.L__stack_usage = 15
	movw r14,r24
	movw r6,r22
	mov r5,r20
	mov r22,r20
	movw r24,r6
	call uECC_vli_numBits
	lds r30,g_rng_function
	lds r31,g_rng_function+1
	sbiw r30,0
	brne .+2
	rjmp .L499
	mov r18,r5
	mov __tmp_reg__,r5
	lsl r0
	sbc r19,r19
	movw r8,r18
	lsl r8
	rol r9
	lsl r8
	rol r9
	movw r12,r18
	ldi r20,1
	sub r12,r20
	ldi r20,-128
	sbc r13,r20
	lsl r12
	rol r13
	add r12,r14
	adc r13,r15
	lsl r18
	rol r19
	swap r18
	swap r19
	andi r19,0xf0
	eor r19,r18
	andi r18,0xf0
	eor r19,r18
	sub r18,r24
	sbc r19,r25
	ldi r24,lo8(-1)
	ldi r25,lo8(-1)
	movw r10,r24
	rjmp 2f
	1:
	lsr r11
	ror r10
	2:
	dec r18
	brpl 1b
	ldi r28,lo8(-1)
	add r28,r5
	ldi r29,0
	lsl r28
	rol r29
	movw r24,r14
	adiw r24,2
	add r28,r24
	adc r29,r25
	ldi r16,lo8(64)
	ldi r17,0
	movw r22,r8
	movw r24,r14
	icall
	or r24,r25
	breq .L499
.L518:
	movw r30,r12
	ld r24,Z
	ldd r25,Z+1
	and r24,r10
	and r25,r11
	std Z+1,r25
	st Z,r24
	cp __zero_reg__,r5
	brge .L500
	movw r30,r14
	ldi r25,0
	ldi r24,0
.L501:
	ld r18,Z+
	ld r19,Z+
	or r24,r18
	or r25,r19
	cp r30,r28
	cpc r31,r29
	brne .L501
	or r24,r25
	breq .L500
	mov r20,r5
	movw r22,r14
	movw r24,r6
	call uECC_vli_cmp
	cpi r24,lo8(1)
	breq .L504
.L500:
	subi r16,1
	sbc r17,__zero_reg__
	breq .L499
	lds r30,g_rng_function
	lds r31,g_rng_function+1
	movw r22,r8
	movw r24,r14
	icall
	or r24,r25
	brne .L518
.L499:
	ldi r25,0
	ldi r24,0
.L498:
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	ret
.L504:
	ldi r24,lo8(1)
	ldi r25,0
	rjmp .L498
	.size	uECC_generate_random_int, .-uECC_generate_random_int
.global	uECC_valid_point
	.type	uECC_valid_point, @function
uECC_valid_point:
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 48 */
/* stack size = 63 */
.L__stack_usage = 63
	movw r26,r22
	ld r18,X
	mov r20,r18
	lsl r20
	cp __zero_reg__,r20
	brlt .+2
	rjmp .L530
	movw r30,r24
	subi r20,lo8(-(-1))
	ldi r21,0
	lsl r20
	rol r21
	movw r26,r24
	adiw r26,2
	add r20,r26
	adc r21,r27
	ldi r27,0
	ldi r26,0
.L521:
	ld r14,Z+
	ld r15,Z+
	or r26,r14
	or r27,r15
	cp r30,r20
	cpc r31,r21
	brne .L521
	or r26,r27
	brne .+2
	rjmp .L530
	movw r8,r22
	ldi r27,4
	add r8,r27
	adc r9,__zero_reg__
	ldi r17,lo8(-1)
	add r17,r18
	sbrc r17,7
	rjmp .L536
	mov r6,r17
	mov __tmp_reg__,r17
	lsl r0
	sbc r7,r7
	movw r20,r6
	lsl r20
	rol r21
	movw r30,r8
	add r30,r20
	adc r31,r21
	ld r10,Z
	ldd r11,Z+1
	movw r30,r24
	add r30,r20
	adc r31,r21
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	cp r30,r10
	cpc r31,r11
	brlo .L522
	cp r10,r30
	cpc r11,r31
	brlo .L536
	ldi r30,lo8(-2)
	add r30,r18
	mov __tmp_reg__,r30
	lsl r0
	sbc r31,r31
	adiw r30,1
	lsl r30
	rol r31
	movw r12,r8
	add r12,r30
	adc r13,r31
	add r30,r24
	adc r31,r25
	mov r19,r17
	rjmp .L523
.L524:
	movw r26,r12
	ld r15,-X
	ld r14,-X
	movw r12,r26
	ld r27,-Z
	ld r26,-Z
	cp r26,r14
	cpc r27,r15
	brlo .L522
	cp r14,r26
	cpc r15,r27
	brlo .L536
.L523:
	subi r19,1
	brcc .L524
.L536:
	ldi r24,lo8(-2)
	ldi r25,lo8(-1)
.L519:
/* epilogue start */
	adiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	ret
.L522:
	mov r26,r18
	lsl r26
	sbc r27,r27
	movw r4,r24
	add r4,r26
	adc r5,r27
	add r20,r4
	adc r21,r5
	movw r30,r20
	ld r20,Z
	ldd r21,Z+1
	cp r20,r10
	cpc r21,r11
	brlo .L525
	cp r10,r20
	cpc r11,r21
	brlo .L536
	ldi r20,lo8(-2)
	add r20,r18
	mov __tmp_reg__,r20
	lsl r0
	sbc r21,r21
	movw r14,r20
	ldi r31,-1
	sub r14,r31
	sbc r15,r31
	lsl r14
	rol r15
	movw r30,r8
	add r30,r14
	adc r31,r15
	adiw r26,2
	lsl r20
	rol r21
	add r26,r20
	adc r27,r21
	add r26,r24
	adc r27,r25
	mov r19,r17
	rjmp .L528
.L526:
	ld r15,-Z
	ld r14,-Z
	ld r21,-X
	ld r20,-X
	cp r20,r14
	cpc r21,r15
	brlo .L525
	cp r14,r20
	cpc r15,r21
	brsh .+2
	rjmp .L536
.L528:
	subi r19,1
	brcc .L526
	rjmp .L536
.L525:
	movw r14,r22
	movw r12,r24
	movw r20,r4
	movw r22,r4
	movw r24,r28
	adiw r24,1
	call uECC_vli_mult
	movw r30,r14
	subi r30,-88
	sbci r31,-1
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	movw r22,r28
	subi r22,-1
	sbci r23,-1
	movw r24,r28
	adiw r24,33
	icall
	movw r30,r14
	subi r30,-86
	sbci r31,-1
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	movw r20,r14
	movw r22,r12
	movw r24,r28
	adiw r24,1
	icall
	movw r30,r6
	adiw r30,1
	lsl r30
	rol r31
	ldi r26,lo8(33)
	ldi r27,0
	add r26,r28
	adc r27,r29
	add r26,r30
	adc r27,r31
	ldi r24,lo8(1)
	ldi r25,0
	add r24,r28
	adc r25,r29
	add r30,r24
	adc r31,r25
	ldi r19,0
	ldi r18,0
.L527:
	ld r25,-X
	ld r24,-X
	ld r21,-Z
	ld r20,-Z
	eor r24,r20
	eor r25,r21
	or r18,r24
	or r19,r25
	subi r17,1
	brcc .L527
	or r18,r19
	brne .L535
	ldi r25,0
	ldi r24,0
	rjmp .L519
.L530:
	ldi r24,lo8(-1)
	ldi r25,lo8(-1)
	rjmp .L519
.L535:
	ldi r24,lo8(-3)
	ldi r25,lo8(-1)
	rjmp .L519
	.size	uECC_valid_point, .-uECC_valid_point
.global	uECC_valid_public_key
	.type	uECC_valid_public_key, @function
uECC_valid_public_key:
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 32 */
/* stack size = 40 */
.L__stack_usage = 40
	movw r12,r24
	movw r14,r22
	movw r30,r22
	ldd r20,Z+1
	mov __tmp_reg__,r20
	lsl r0
	sbc r21,r21
	movw r22,r24
	movw r16,r28
	subi r16,-1
	sbci r17,-1
	movw r24,r16
	call uECC_vli_bytesToNative
	movw r30,r14
	ldd r20,Z+1
	mov __tmp_reg__,r20
	lsl r0
	sbc r21,r21
	movw r22,r12
	add r22,r20
	adc r23,r21
	ld r24,Z
	lsl r24
	sbc r25,r25
	add r24,r16
	adc r25,r17
	call uECC_vli_bytesToNative
	movw r30,r28
	adiw r30,33
	movw r26,r14
	subi r26,-68
	sbci r27,-1
	rjmp .L541
.L545:
	cp r30,r16
	cpc r31,r17
	breq .L544
.L541:
	ld r19,-Z
	ld r18,-Z
	ld r25,-X
	ld r24,-X
	cp r18,r24
	cpc r19,r25
	breq .L545
	movw r22,r14
	movw r24,r16
	call uECC_valid_point
.L539:
/* epilogue start */
	adiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	ret
.L544:
	ldi r24,lo8(-4)
	ldi r25,lo8(-1)
	rjmp .L539
	.size	uECC_valid_public_key, .-uECC_valid_public_key
.global	uECC_compute_public_key
	.type	uECC_compute_public_key, @function
uECC_compute_public_key:
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 48 */
/* stack size = 56 */
.L__stack_usage = 56
	movw r14,r22
	movw r16,r20
	movw r30,r20
	ldd r18,Z+2
	ldd r19,Z+3
	movw r20,r18
	subi r20,-7
	sbci r21,-1
	sbrs r21,7
	rjmp .L547
	subi r20,-7
	sbci r21,-1
.L547:
	asr r21
	ror r20
	asr r21
	ror r20
	asr r21
	ror r20
	movw r22,r24
	movw r24,r28
	adiw r24,33
	call uECC_vli_bytesToNative
	movw r30,r16
	ldd r24,Z+2
	ldd r25,Z+3
	movw r20,r24
	subi r20,-31
	sbci r21,-1
	sbrs r21,7
	rjmp .L548
	subi r20,-31
	sbci r21,-1
.L548:
	asr r21
	ror r20
	asr r21
	ror r20
	asr r21
	ror r20
	asr r21
	ror r20
	asr r21
	ror r20
	cp __zero_reg__,r20
	brge .L549
	movw r30,r28
	adiw r30,33
	ldi r18,lo8(-1)
	add r18,r20
	ldi r19,0
	lsl r18
	rol r19
	ldi r27,lo8(35)
	mov r12,r27
	mov r13,__zero_reg__
	add r12,r28
	adc r13,r29
	add r18,r12
	adc r19,r13
	ldi r25,0
	ldi r24,0
.L550:
	ld r22,Z+
	ld r23,Z+
	or r24,r22
	or r25,r23
	cp r18,r30
	cpc r19,r31
	brne .L550
	or r24,r25
	breq .L549
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r16
	adiw r24,20
	call uECC_vli_cmp
	cpi r24,lo8(1)
	breq .L565
.L549:
	ldi r25,0
	ldi r24,0
.L546:
/* epilogue start */
	adiw r28,48
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	ret
.L565:
	movw r20,r16
	movw r22,r28
	subi r22,-33
	sbci r23,-1
	movw r24,r28
	adiw r24,1
	call EccPoint_compute_public_key
	or r24,r25
	breq .L549
	movw r30,r16
	ldd r18,Z+1
	mov __tmp_reg__,r18
	lsl r0
	sbc r19,r19
	cp __zero_reg__,r18
	cpc __zero_reg__,r19
	brlt .+2
	rjmp .L554
	movw r20,r18
	subi r20,1
	sbc r21,__zero_reg__
	movw r26,r14
	ldi r22,0
	ldi r25,0
	ldi r24,0
.L553:
	movw r12,r20
	sub r12,r24
	sbc r13,r25
	movw r24,r12
	movw r30,r12
	lsr r31
	ror r30
	lsr r31
	ror r30
	lsl r30
	rol r31
	clr r12
	inc r12
	mov r13,__zero_reg__
	add r12,r28
	adc r13,r29
	add r30,r12
	adc r31,r13
	andi r24,3
	clr r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	rjmp 2f
	1:
	lsr r31
	ror r30
	2:
	dec r24
	brpl 1b
	st X+,r30
	subi r22,lo8(-(1))
	mov r24,r22
	ldi r25,0
	cp r24,r18
	cpc r25,r19
	brlt .L553
	movw r30,r16
	ld r20,Z
	lsl r20
	sbc r21,r21
	ldd r18,Z+1
	mov __tmp_reg__,r18
	lsl r0
	sbc r19,r19
	cp __zero_reg__,r18
	cpc __zero_reg__,r19
	brge .L554
	movw r22,r18
	subi r22,1
	sbc r23,__zero_reg__
	movw r26,r14
	add r26,r18
	adc r27,r19
	ldi r17,0
	ldi r25,0
	ldi r24,0
.L555:
	movw r12,r22
	sub r12,r24
	sbc r13,r25
	movw r24,r12
	movw r30,r12
	lsr r31
	ror r30
	lsr r31
	ror r30
	lsl r30
	rol r31
	clr r14
	inc r14
	mov r15,__zero_reg__
	add r14,r28
	adc r15,r29
	add r30,r14
	adc r31,r15
	add r30,r20
	adc r31,r21
	andi r24,3
	clr r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	ld __tmp_reg__,Z+
	ld r31,Z
	mov r30,__tmp_reg__
	rjmp 2f
	1:
	lsr r31
	ror r30
	2:
	dec r24
	brpl 1b
	st X+,r30
	subi r17,lo8(-(1))
	mov r24,r17
	ldi r25,0
	cp r24,r18
	cpc r25,r19
	brlt .L555
.L554:
	ldi r24,lo8(1)
	ldi r25,0
	rjmp .L546
	.size	uECC_compute_public_key, .-uECC_compute_public_key
	.data
	.type	g_rng_function, @object
	.size	g_rng_function, 2
g_rng_function:
	.word	gs(default_CSPRNG)
	.section	.rodata
	.type	curve_secp256r1, @object
	.size	curve_secp256r1, 90
curve_secp256r1:
	.byte	8
	.byte	32
	.word	256
	.word	-1
	.word	-1
	.word	-1
	.word	0
	.word	0
	.word	0
	.word	1
	.word	-1
	.word	9553
	.word	-13630
	.word	-24956
	.word	-1363
	.word	-1
	.word	-1
	.word	0
	.word	-1
	.word	-15722
	.word	14661
	.word	13216
	.word	32129
	.word	16626
	.word	-6427
	.word	16967
	.word	-11790
	.word	20981
	.word	16488
	.word	24270
	.word	13143
	.word	-25066
	.word	-5302
	.word	32667
	.word	17122
	.word	24651
	.word	15422
	.word	-20234
	.word	1712
	.word	-31044
	.word	-17067
	.word	-27673
	.word	13784
	.word	gs(double_jacobian_default)
	.word	gs(x_side_default)
	.word	gs(vli_mmod_fast_secp256r1)
	.ident	"GCC: (GNU) 7.3.0"
.global __do_copy_data
