	.file	"rsa_modular_exponentiation.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	__umoddi3
.global	__muldi3
.global	rsa_mod_exp
	.type	rsa_mod_exp, @function
rsa_mod_exp:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 24 */
/* stack size = 42 */
.L__stack_usage = 42
	std Y+1,r10
	std Y+10,r11
	std Y+11,r12
	std Y+12,r13
	std Y+13,r14
	std Y+14,r15
	std Y+15,r16
	std Y+16,r17
	ldd r30,Y+45
	std Y+17,r30
	ldd r30,Y+46
	std Y+18,r30
	ldd r30,Y+47
	std Y+19,r30
	ldd r30,Y+48
	std Y+20,r30
	ldd r30,Y+49
	std Y+21,r30
	ldd r30,Y+50
	std Y+22,r30
	ldd r30,Y+51
	std Y+23,r30
	ldd r30,Y+52
	std Y+24,r30
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	mov r17,r30
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldi r24,lo8(1)
	std Y+2,r24
	std Y+3,__zero_reg__
	std Y+4,__zero_reg__
	std Y+5,__zero_reg__
	std Y+6,__zero_reg__
	std Y+7,__zero_reg__
	std Y+8,__zero_reg__
	std Y+9,__zero_reg__
.L2:
	ldd r18,Y+1
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	ldi r26,0
	call __cmpdi2_s8
	brne .L4
	ldd r18,Y+2
	ldd r19,Y+3
	ldd r20,Y+4
	ldd r21,Y+5
	ldd r22,Y+6
	ldd r23,Y+7
	ldd r24,Y+8
	ldd r25,Y+9
/* epilogue start */
	adiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L4:
	ldd r18,Y+1
	andi r18,lo8(1)
	ldi r19,0
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,0
	ldi r26,0
	call __cmpdi2_s8
	breq .L3
	ldd r10,Y+2
	ldd r11,Y+3
	ldd r12,Y+4
	ldd r13,Y+5
	ldd r14,Y+6
	ldd r15,Y+7
	ldd r16,Y+8
	ldd r17,Y+9
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	call __umoddi3
	std Y+2,r18
	std Y+3,r19
	std Y+4,r20
	std Y+5,r21
	std Y+6,r22
	std Y+7,r23
	std Y+8,r24
	std Y+9,r25
.L3:
	mov r10,r3
	mov r11,r2
	mov r12,r9
	mov r13,r8
	mov r14,r7
	mov r15,r6
	mov r16,r5
	mov r17,r4
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldd r18,Y+1
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	ldi r16,lo8(1)
	call __lshrdi3
	std Y+1,r18
	std Y+10,r19
	std Y+11,r20
	std Y+12,r21
	std Y+13,r22
	std Y+14,r23
	std Y+15,r24
	std Y+16,r25
	rjmp .L2
	.size	rsa_mod_exp, .-rsa_mod_exp
	.ident	"GCC: (GNU) 7.3.0"
