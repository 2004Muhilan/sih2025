	.file	"custom_rsa.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	__umoddi3
.global	__muldi3
.global	mod_exp
	.type	mod_exp, @function
mod_exp:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 24 */
/* stack size = 42 */
.L__stack_usage = 42
	std Y+1,r10
	std Y+2,r11
	std Y+3,r12
	std Y+4,r13
	std Y+5,r14
	std Y+6,r15
	std Y+7,r16
	std Y+8,r17
	ldd r30,Y+45
	std Y+9,r30
	ldd r30,Y+46
	std Y+10,r30
	ldd r30,Y+47
	std Y+11,r30
	ldd r30,Y+48
	std Y+12,r30
	ldd r30,Y+49
	std Y+13,r30
	ldd r30,Y+50
	std Y+14,r30
	ldd r30,Y+51
	std Y+15,r30
	ldd r30,Y+52
	std Y+16,r30
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	mov r17,r30
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r26,0
	call __cmpdi2_s8
	brne .+2
	rjmp .L5
	ldi r24,lo8(1)
	std Y+17,r24
	std Y+18,__zero_reg__
	std Y+19,__zero_reg__
	std Y+20,__zero_reg__
	std Y+21,__zero_reg__
	std Y+22,__zero_reg__
	std Y+23,__zero_reg__
	std Y+24,__zero_reg__
.L4:
	andi r18,lo8(1)
	ldi r19,0
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,0
	ldi r26,0
	call __cmpdi2_s8
	breq .L3
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	call __umoddi3
	std Y+17,r18
	std Y+18,r19
	std Y+19,r20
	std Y+20,r21
	std Y+21,r22
	std Y+22,r23
	std Y+23,r24
	std Y+24,r25
.L3:
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r16,lo8(1)
	call __lshrdi3
	std Y+1,r18
	std Y+2,r19
	std Y+3,r20
	std Y+4,r21
	std Y+5,r22
	std Y+6,r23
	std Y+7,r24
	std Y+8,r25
	mov r10,r3
	mov r11,r2
	mov r12,r9
	mov r13,r8
	mov r14,r7
	mov r15,r6
	mov r16,r5
	mov r17,r4
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r26,0
	call __cmpdi2_s8
	breq .+2
	rjmp .L4
	ldd r18,Y+17
.L1:
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
/* epilogue start */
	adiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L5:
	ldi r30,lo8(1)
	std Y+18,__zero_reg__
	std Y+19,__zero_reg__
	std Y+20,__zero_reg__
	std Y+21,__zero_reg__
	std Y+22,__zero_reg__
	std Y+23,__zero_reg__
	std Y+24,__zero_reg__
	mov r18,r30
	rjmp .L1
	.size	mod_exp, .-mod_exp
.global	__moddi3
.global	__divdi3
.global	extended_gcd
	.type	extended_gcd, @function
extended_gcd:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,52
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 52 */
/* stack size = 70 */
.L__stack_usage = 70
	movw r2,r18
	std Y+17,r20
	std Y+18,r21
	std Y+19,r22
	std Y+20,r23
	std Y+21,r24
	std Y+22,r25
	std Y+23,r10
	std Y+24,r11
	std Y+25,r12
	std Y+26,r13
	std Y+27,r14
	std Y+28,r15
	std Y+29,r16
	std Y+30,r17
	movw r4,r8
	adiw r28,73-62
	ldd r6,Y+62
	ldd r7,Y+63
	sbiw r28,73-62
	ldi r26,0
	call __cmpdi2_s8
	brne .L9
	movw r30,r8
	st Z,__zero_reg__
	std Z+1,__zero_reg__
	std Z+2,__zero_reg__
	std Z+3,__zero_reg__
	std Z+4,__zero_reg__
	std Z+5,__zero_reg__
	std Z+6,__zero_reg__
	std Z+7,__zero_reg__
	ldi r24,lo8(1)
	movw r30,r6
	st Z,r24
	std Z+1,__zero_reg__
	std Z+2,__zero_reg__
	std Z+3,__zero_reg__
	std Z+4,__zero_reg__
	std Z+5,__zero_reg__
	std Z+6,__zero_reg__
	std Z+7,__zero_reg__
	movw r18,r10
	movw r20,r12
	movw r22,r14
	movw r24,r16
.L8:
/* epilogue start */
	adiw r28,52
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L9:
	movw r18,r10
	movw r20,r12
	movw r22,r14
	movw r24,r16
	movw r10,r2
	ldd r12,Y+17
	ldd r13,Y+18
	ldd r14,Y+19
	ldd r15,Y+20
	ldd r16,Y+21
	ldd r17,Y+22
	call __moddi3
	std Y+31,r18
	std Y+32,r19
	std Y+33,r20
	std Y+34,r21
	std Y+35,r22
	std Y+36,r23
	std Y+37,r24
	std Y+38,r25
	ldi r26,0
	call __cmpdi2_s8
	brne .L13
	ldi r18,lo8(1)
	ldi r19,0
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,0
.L11:
	movw r30,r4
	st Z,r18
	std Z+1,r19
	std Z+2,r20
	std Z+3,r21
	std Z+4,r22
	std Z+5,r23
	std Z+6,r24
	std Z+7,r25
	ldd r24,Y+31
	movw r30,r6
	st Z,r24
	ldd r24,Y+32
	std Z+1,r24
	ldd r24,Y+33
	std Z+2,r24
	ldd r24,Y+34
	std Z+3,r24
	ldd r24,Y+35
	std Z+4,r24
	ldd r24,Y+36
	std Z+5,r24
	ldd r24,Y+37
	std Z+6,r24
	ldd r24,Y+38
	std Z+7,r24
	movw r18,r2
	ldd r20,Y+17
	ldd r21,Y+18
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	rjmp .L8
.L13:
	movw r10,r18
	movw r12,r20
	movw r14,r22
	movw r16,r24
	movw r18,r2
	ldd r20,Y+17
	ldd r21,Y+18
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	call __moddi3
	movw r30,r28
	adiw r30,1
	push r31
	push r30
	adiw r30,8
	movw r8,r30
	ldd r10,Y+31
	ldd r11,Y+32
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r16,Y+37
	ldd r17,Y+38
	call extended_gcd
	std Y+45,r18
	std Y+46,r19
	std Y+47,r20
	std Y+48,r21
	std Y+49,r22
	std Y+50,r23
	std Y+51,r24
	std Y+52,r25
	ldd r8,Y+9
	ldd r9,Y+10
	ldd r31,Y+11
	std Y+39,r31
	ldd r24,Y+12
	std Y+40,r24
	ldd r30,Y+13
	std Y+41,r30
	ldd r31,Y+14
	std Y+42,r31
	ldd r24,Y+15
	std Y+43,r24
	ldd r30,Y+16
	std Y+44,r30
	ldd r10,Y+31
	ldd r11,Y+32
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r16,Y+37
	ldd r17,Y+38
	movw r18,r2
	ldd r20,Y+17
	ldd r21,Y+18
	ldd r22,Y+19
	ldd r23,Y+20
	ldd r24,Y+21
	ldd r25,Y+22
	call __divdi3
	movw r10,r8
	ldd r12,Y+39
	ldd r13,Y+40
	ldd r14,Y+41
	ldd r15,Y+42
	ldd r16,Y+43
	ldd r17,Y+44
	call __muldi3
	movw r10,r18
	movw r12,r20
	movw r14,r22
	movw r16,r24
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	call __subdi3
	std Y+31,r18
	std Y+32,r19
	std Y+33,r20
	std Y+34,r21
	std Y+35,r22
	std Y+36,r23
	std Y+37,r24
	std Y+38,r25
	movw r10,r2
	ldd r12,Y+17
	ldd r13,Y+18
	ldd r14,Y+19
	ldd r15,Y+20
	ldd r16,Y+21
	ldd r17,Y+22
	ldd r18,Y+23
	ldd r19,Y+24
	ldd r20,Y+25
	ldd r21,Y+26
	ldd r22,Y+27
	ldd r23,Y+28
	ldd r24,Y+29
	ldd r25,Y+30
	call __divdi3
	ldd r10,Y+31
	ldd r11,Y+32
	ldd r12,Y+33
	ldd r13,Y+34
	ldd r14,Y+35
	ldd r15,Y+36
	ldd r16,Y+37
	ldd r17,Y+38
	call __muldi3
	movw r10,r18
	movw r12,r20
	movw r14,r22
	movw r16,r24
	movw r18,r8
	ldd r20,Y+39
	ldd r21,Y+40
	ldd r22,Y+41
	ldd r23,Y+42
	ldd r24,Y+43
	ldd r25,Y+44
	call __subdi3
	pop __tmp_reg__
	pop __tmp_reg__
	ldd r2,Y+45
	ldd r3,Y+46
	ldd r31,Y+47
	std Y+17,r31
	ldd r30,Y+48
	std Y+18,r30
	ldd r31,Y+49
	std Y+19,r31
	ldd r30,Y+50
	std Y+20,r30
	ldd r31,Y+51
	std Y+21,r31
	ldd r30,Y+52
	std Y+22,r30
	rjmp .L11
	.size	extended_gcd, .-extended_gcd
.global	rsa_encrypt
	.type	rsa_encrypt, @function
rsa_encrypt:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 24 */
/* stack size = 42 */
.L__stack_usage = 42
	std Y+1,r10
	std Y+2,r11
	std Y+3,r12
	std Y+4,r13
	std Y+5,r14
	std Y+6,r15
	std Y+7,r16
	std Y+8,r17
	ldd r30,Y+45
	std Y+9,r30
	ldd r30,Y+46
	std Y+10,r30
	ldd r30,Y+47
	std Y+11,r30
	ldd r30,Y+48
	std Y+12,r30
	ldd r30,Y+49
	std Y+13,r30
	ldd r30,Y+50
	std Y+14,r30
	ldd r30,Y+51
	std Y+15,r30
	ldd r30,Y+52
	std Y+16,r30
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	mov r17,r30
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r26,0
	call __cmpdi2_s8
	brne .+2
	rjmp .L18
	ldi r24,lo8(1)
	std Y+17,r24
	std Y+18,__zero_reg__
	std Y+19,__zero_reg__
	std Y+20,__zero_reg__
	std Y+21,__zero_reg__
	std Y+22,__zero_reg__
	std Y+23,__zero_reg__
	std Y+24,__zero_reg__
.L17:
	andi r18,lo8(1)
	ldi r19,0
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,0
	ldi r26,0
	call __cmpdi2_s8
	breq .L16
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	call __umoddi3
	std Y+17,r18
	std Y+18,r19
	std Y+19,r20
	std Y+20,r21
	std Y+21,r22
	std Y+22,r23
	std Y+23,r24
	std Y+24,r25
.L16:
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r16,lo8(1)
	call __lshrdi3
	std Y+1,r18
	std Y+2,r19
	std Y+3,r20
	std Y+4,r21
	std Y+5,r22
	std Y+6,r23
	std Y+7,r24
	std Y+8,r25
	mov r10,r3
	mov r11,r2
	mov r12,r9
	mov r13,r8
	mov r14,r7
	mov r15,r6
	mov r16,r5
	mov r17,r4
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r26,0
	call __cmpdi2_s8
	breq .+2
	rjmp .L17
	ldd r18,Y+17
.L14:
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
/* epilogue start */
	adiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L18:
	ldi r30,lo8(1)
	std Y+18,__zero_reg__
	std Y+19,__zero_reg__
	std Y+20,__zero_reg__
	std Y+21,__zero_reg__
	std Y+22,__zero_reg__
	std Y+23,__zero_reg__
	std Y+24,__zero_reg__
	mov r18,r30
	rjmp .L14
	.size	rsa_encrypt, .-rsa_encrypt
.global	rsa_decrypt
	.type	rsa_decrypt, @function
rsa_decrypt:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 24 */
/* stack size = 42 */
.L__stack_usage = 42
	std Y+1,r10
	std Y+2,r11
	std Y+3,r12
	std Y+4,r13
	std Y+5,r14
	std Y+6,r15
	std Y+7,r16
	std Y+8,r17
	ldd r30,Y+45
	std Y+9,r30
	ldd r30,Y+46
	std Y+10,r30
	ldd r30,Y+47
	std Y+11,r30
	ldd r30,Y+48
	std Y+12,r30
	ldd r30,Y+49
	std Y+13,r30
	ldd r30,Y+50
	std Y+14,r30
	ldd r30,Y+51
	std Y+15,r30
	ldd r30,Y+52
	std Y+16,r30
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	mov r17,r30
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r26,0
	call __cmpdi2_s8
	brne .+2
	rjmp .L24
	ldi r24,lo8(1)
	std Y+17,r24
	std Y+18,__zero_reg__
	std Y+19,__zero_reg__
	std Y+20,__zero_reg__
	std Y+21,__zero_reg__
	std Y+22,__zero_reg__
	std Y+23,__zero_reg__
	std Y+24,__zero_reg__
.L23:
	andi r18,lo8(1)
	ldi r19,0
	ldi r20,0
	ldi r21,0
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,0
	ldi r26,0
	call __cmpdi2_s8
	breq .L22
	ldd r10,Y+17
	ldd r11,Y+18
	ldd r12,Y+19
	ldd r13,Y+20
	ldd r14,Y+21
	ldd r15,Y+22
	ldd r16,Y+23
	ldd r17,Y+24
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	call __umoddi3
	std Y+17,r18
	std Y+18,r19
	std Y+19,r20
	std Y+20,r21
	std Y+21,r22
	std Y+22,r23
	std Y+23,r24
	std Y+24,r25
.L22:
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r16,lo8(1)
	call __lshrdi3
	std Y+1,r18
	std Y+2,r19
	std Y+3,r20
	std Y+4,r21
	std Y+5,r22
	std Y+6,r23
	std Y+7,r24
	std Y+8,r25
	mov r10,r3
	mov r11,r2
	mov r12,r9
	mov r13,r8
	mov r14,r7
	mov r15,r6
	mov r16,r5
	mov r17,r4
	mov r18,r3
	mov r19,r2
	mov r20,r9
	mov r21,r8
	mov r22,r7
	mov r23,r6
	mov r24,r5
	mov r25,r4
	call __muldi3
	ldd r10,Y+9
	ldd r11,Y+10
	ldd r12,Y+11
	ldd r13,Y+12
	ldd r14,Y+13
	ldd r15,Y+14
	ldd r16,Y+15
	ldd r17,Y+16
	call __umoddi3
	mov r3,r18
	mov r2,r19
	mov r9,r20
	mov r8,r21
	mov r7,r22
	mov r6,r23
	mov r5,r24
	mov r4,r25
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	ldi r26,0
	call __cmpdi2_s8
	breq .+2
	rjmp .L23
	ldd r18,Y+17
.L20:
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
/* epilogue start */
	adiw r28,24
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
.L24:
	ldi r30,lo8(1)
	std Y+18,__zero_reg__
	std Y+19,__zero_reg__
	std Y+20,__zero_reg__
	std Y+21,__zero_reg__
	std Y+22,__zero_reg__
	std Y+23,__zero_reg__
	std Y+24,__zero_reg__
	mov r18,r30
	rjmp .L20
	.size	rsa_decrypt, .-rsa_decrypt
	.ident	"GCC: (GNU) 7.3.0"
