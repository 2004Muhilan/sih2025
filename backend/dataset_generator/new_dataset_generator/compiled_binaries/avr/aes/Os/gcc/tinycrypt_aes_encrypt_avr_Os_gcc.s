	.file	"tinycrypt_aes_encrypt.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
	.type	add_round_key, @function
add_round_key:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	movw r30,r24
	movw r26,r22
	adiw r26,1
	ld r25,X
	sbiw r26,1
	ldd r24,Z+2
	eor r24,r25
	std Z+2,r24
	ldd r24,Z+3
	ld r25,X
	eor r24,r25
	std Z+3,r24
	adiw r26,3
	ld r25,X
	sbiw r26,3
	ldd r24,Z+6
	eor r24,r25
	std Z+6,r24
	ldd r24,Z+7
	adiw r26,2
	ld r25,X
	sbiw r26,2
	eor r24,r25
	std Z+7,r24
	adiw r26,5
	ld r25,X
	sbiw r26,5
	ldd r24,Z+10
	eor r24,r25
	std Z+10,r24
	ldd r24,Z+11
	adiw r26,4
	ld r25,X
	sbiw r26,4
	eor r24,r25
	std Z+11,r24
	adiw r26,7
	ld r25,X
	sbiw r26,7
	ldd r24,Z+14
	eor r24,r25
	std Z+14,r24
	ldd r24,Z+15
	adiw r26,6
	ld r25,X
	eor r24,r25
	std Z+15,r24
/* epilogue start */
	ret
	.size	add_round_key, .-add_round_key
	.type	shift_rows, @function
shift_rows:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 16 */
/* stack size = 18 */
.L__stack_usage = 18
	movw r30,r24
	ld r24,Z
	std Y+1,r24
	ldd r24,Z+5
	std Y+2,r24
	ldd r24,Z+10
	std Y+3,r24
	ldd r24,Z+15
	std Y+4,r24
	ldd r24,Z+4
	std Y+5,r24
	ldd r24,Z+9
	std Y+6,r24
	ldd r24,Z+14
	std Y+7,r24
	ldd r24,Z+3
	std Y+8,r24
	ldd r24,Z+8
	std Y+9,r24
	ldd r24,Z+13
	std Y+10,r24
	ldd r24,Z+2
	std Y+11,r24
	ldd r24,Z+7
	std Y+12,r24
	ldd r24,Z+12
	std Y+13,r24
	ldd r24,Z+1
	std Y+14,r24
	ldd r24,Z+6
	std Y+15,r24
	ldd r24,Z+11
	std Y+16,r24
	ldi r18,lo8(16)
	ldi r19,0
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r30
	call _copy
/* epilogue start */
	adiw r28,16
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	shift_rows, .-shift_rows
	.type	mult_row_column, @function
mult_row_column:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 6 */
.L__stack_usage = 6
	movw r14,r24
	movw r28,r22
	ld r24,Y
	call _double_byte
	mov r17,r24
	ldd r24,Y+1
	call _double_byte
	ldd r25,Y+1
	ldd r18,Y+2
	eor r25,r18
	ldd r18,Y+3
	eor r25,r18
	eor r25,r17
	eor r24,r25
	movw r30,r14
	st Z,r24
	ld r17,Y
	ldd r24,Y+1
	call _double_byte
	mov r16,r24
	ldd r24,Y+2
	call _double_byte
	ldd r25,Y+2
	eor r17,r25
	ldd r25,Y+3
	eor r17,r25
	eor r17,r16
	eor r24,r17
	movw r30,r14
	std Z+1,r24
	ld r17,Y
	ldd r24,Y+1
	eor r17,r24
	ldd r24,Y+2
	call _double_byte
	mov r16,r24
	ldd r24,Y+3
	call _double_byte
	ldd r25,Y+3
	eor r17,r25
	eor r17,r16
	eor r17,r24
	movw r30,r14
	std Z+2,r17
	ld r24,Y
	call _double_byte
	ld r17,Y
	ldd r25,Y+1
	eor r17,r25
	ldd r25,Y+2
	eor r17,r25
	eor r17,r24
	ldd r24,Y+3
	call _double_byte
	eor r24,r17
	movw r30,r14
	std Z+3,r24
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	mult_row_column, .-mult_row_column
.global	tc_aes128_set_encrypt_key
	.type	tc_aes128_set_encrypt_key, @function
tc_aes128_set_encrypt_key:
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 2 */
.L__stack_usage = 2
	sbiw r24,0
	breq .L10
	cp r22,__zero_reg__
	cpc r23,__zero_reg__
	breq .L10
	movw r30,r22
	movw r26,r24
	movw r18,r22
	subi r18,-16
	sbci r19,-1
	movw r28,r24
.L6:
	ldd r24,Z+2
	ldd r25,Z+3
	eor r24,r25
	eor r25,r24
	eor r24,r25
	st Y+,r24
	st Y+,r25
	adiw r30,4
	cp r18,r30
	cpc r19,r31
	brne .L6
	ldi r24,lo8(4)
	ldi r25,0
.L8:
	movw r28,r26
	adiw r26,6
	ld r18,X+
	ld r19,X
	sbiw r26,6+1
	movw r20,r24
	andi r20,3
	clr r21
	or r20,r21
	brne .L7
	clr r19
	movw r30,r18
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r18,Z
	ldi r19,0
	mov r19,r18
	clr r18
	ori r18,99
.L7:
	adiw r26,2
	ld r20,Y
	ldd r21,Y+1
	eor r18,r20
	eor r19,r21
	adiw r26,6+1
	st X,r19
	st -X,r18
	sbiw r26,6
	adiw r24,1
	cpi r24,44
	cpc r25,__zero_reg__
	brne .L8
	ldi r24,lo8(1)
	ldi r25,0
.L4:
/* epilogue start */
	pop r29
	pop r28
	ret
.L10:
	ldi r25,0
	ldi r24,0
	rjmp .L4
	.size	tc_aes128_set_encrypt_key, .-tc_aes128_set_encrypt_key
.global	tc_aes_encrypt
	.type	tc_aes_encrypt, @function
tc_aes_encrypt:
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 32 */
/* stack size = 46 */
.L__stack_usage = 46
	sbiw r24,0
	brne .+2
	rjmp .L20
	cp r22,__zero_reg__
	cpc r23,__zero_reg__
	brne .+2
	rjmp .L20
	cp r20,__zero_reg__
	cpc r21,__zero_reg__
	brne .+2
	rjmp .L20
	movw r16,r20
	movw r20,r22
	movw r12,r24
	ldi r18,lo8(16)
	ldi r19,0
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r28
	adiw r24,17
	call _copy
	movw r22,r16
	movw r24,r28
	adiw r24,17
	call add_round_key
	movw r8,r16
	ldi r24,8
	add r8,r24
	adc r9,__zero_reg__
	subi r16,-80
	sbci r17,-1
	movw r6,r28
	ldi r25,33
	add r6,r25
	adc r7,__zero_reg__
.L15:
	movw r24,r28
	adiw r24,17
	movw r10,r24
	movw r14,r24
.L16:
	movw r26,r14
	ld r30,X+
	movw r14,r26
	sbiw r26,1
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r24,Z
	st X,r24
	cp r14,r6
	cpc r15,r7
	brne .L16
	movw r24,r28
	adiw r24,17
	call shift_rows
	movw r22,r28
	subi r22,-17
	sbci r23,-1
	movw r24,r28
	adiw r24,1
	call mult_row_column
	movw r22,r28
	subi r22,-21
	sbci r23,-1
	movw r24,r28
	adiw r24,5
	call mult_row_column
	movw r22,r28
	subi r22,-25
	sbci r23,-1
	movw r24,r28
	adiw r24,9
	call mult_row_column
	movw r22,r28
	subi r22,-29
	sbci r23,-1
	movw r24,r28
	adiw r24,13
	call mult_row_column
	ldi r18,lo8(16)
	ldi r19,0
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r28
	adiw r24,17
	call _copy
	movw r22,r8
	movw r24,r28
	adiw r24,17
	call add_round_key
	ldi r27,8
	add r8,r27
	adc r9,__zero_reg__
	cp r8,r16
	cpc r9,r17
	breq .+2
	rjmp .L15
.L17:
	movw r26,r10
	ld r30,X+
	movw r10,r26
	sbiw r26,1
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r24,Z
	st X,r24
	cp r14,r10
	cpc r15,r11
	brne .L17
	movw r24,r28
	adiw r24,17
	call shift_rows
	movw r22,r16
	movw r24,r28
	adiw r24,17
	call add_round_key
	ldi r18,lo8(16)
	ldi r19,0
	movw r20,r28
	subi r20,-17
	sbci r21,-1
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r12
	call _copy
	ldi r20,lo8(16)
	ldi r21,0
	ldi r22,0
	movw r24,r28
	adiw r24,17
	call _set
	ldi r24,lo8(1)
	ldi r25,0
.L13:
/* epilogue start */
	adiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	ret
.L20:
	ldi r25,0
	ldi r24,0
	rjmp .L13
	.size	tc_aes_encrypt, .-tc_aes_encrypt
	.section	.rodata
	.type	sbox, @object
	.size	sbox, 256
sbox:
	.byte	99
	.byte	124
	.byte	119
	.byte	123
	.byte	-14
	.byte	107
	.byte	111
	.byte	-59
	.byte	48
	.byte	1
	.byte	103
	.byte	43
	.byte	-2
	.byte	-41
	.byte	-85
	.byte	118
	.byte	-54
	.byte	-126
	.byte	-55
	.byte	125
	.byte	-6
	.byte	89
	.byte	71
	.byte	-16
	.byte	-83
	.byte	-44
	.byte	-94
	.byte	-81
	.byte	-100
	.byte	-92
	.byte	114
	.byte	-64
	.byte	-73
	.byte	-3
	.byte	-109
	.byte	38
	.byte	54
	.byte	63
	.byte	-9
	.byte	-52
	.byte	52
	.byte	-91
	.byte	-27
	.byte	-15
	.byte	113
	.byte	-40
	.byte	49
	.byte	21
	.byte	4
	.byte	-57
	.byte	35
	.byte	-61
	.byte	24
	.byte	-106
	.byte	5
	.byte	-102
	.byte	7
	.byte	18
	.byte	-128
	.byte	-30
	.byte	-21
	.byte	39
	.byte	-78
	.byte	117
	.byte	9
	.byte	-125
	.byte	44
	.byte	26
	.byte	27
	.byte	110
	.byte	90
	.byte	-96
	.byte	82
	.byte	59
	.byte	-42
	.byte	-77
	.byte	41
	.byte	-29
	.byte	47
	.byte	-124
	.byte	83
	.byte	-47
	.byte	0
	.byte	-19
	.byte	32
	.byte	-4
	.byte	-79
	.byte	91
	.byte	106
	.byte	-53
	.byte	-66
	.byte	57
	.byte	74
	.byte	76
	.byte	88
	.byte	-49
	.byte	-48
	.byte	-17
	.byte	-86
	.byte	-5
	.byte	67
	.byte	77
	.byte	51
	.byte	-123
	.byte	69
	.byte	-7
	.byte	2
	.byte	127
	.byte	80
	.byte	60
	.byte	-97
	.byte	-88
	.byte	81
	.byte	-93
	.byte	64
	.byte	-113
	.byte	-110
	.byte	-99
	.byte	56
	.byte	-11
	.byte	-68
	.byte	-74
	.byte	-38
	.byte	33
	.byte	16
	.byte	-1
	.byte	-13
	.byte	-46
	.byte	-51
	.byte	12
	.byte	19
	.byte	-20
	.byte	95
	.byte	-105
	.byte	68
	.byte	23
	.byte	-60
	.byte	-89
	.byte	126
	.byte	61
	.byte	100
	.byte	93
	.byte	25
	.byte	115
	.byte	96
	.byte	-127
	.byte	79
	.byte	-36
	.byte	34
	.byte	42
	.byte	-112
	.byte	-120
	.byte	70
	.byte	-18
	.byte	-72
	.byte	20
	.byte	-34
	.byte	94
	.byte	11
	.byte	-37
	.byte	-32
	.byte	50
	.byte	58
	.byte	10
	.byte	73
	.byte	6
	.byte	36
	.byte	92
	.byte	-62
	.byte	-45
	.byte	-84
	.byte	98
	.byte	-111
	.byte	-107
	.byte	-28
	.byte	121
	.byte	-25
	.byte	-56
	.byte	55
	.byte	109
	.byte	-115
	.byte	-43
	.byte	78
	.byte	-87
	.byte	108
	.byte	86
	.byte	-12
	.byte	-22
	.byte	101
	.byte	122
	.byte	-82
	.byte	8
	.byte	-70
	.byte	120
	.byte	37
	.byte	46
	.byte	28
	.byte	-90
	.byte	-76
	.byte	-58
	.byte	-24
	.byte	-35
	.byte	116
	.byte	31
	.byte	75
	.byte	-67
	.byte	-117
	.byte	-118
	.byte	112
	.byte	62
	.byte	-75
	.byte	102
	.byte	72
	.byte	3
	.byte	-10
	.byte	14
	.byte	97
	.byte	53
	.byte	87
	.byte	-71
	.byte	-122
	.byte	-63
	.byte	29
	.byte	-98
	.byte	-31
	.byte	-8
	.byte	-104
	.byte	17
	.byte	105
	.byte	-39
	.byte	-114
	.byte	-108
	.byte	-101
	.byte	30
	.byte	-121
	.byte	-23
	.byte	-50
	.byte	85
	.byte	40
	.byte	-33
	.byte	-116
	.byte	-95
	.byte	-119
	.byte	13
	.byte	-65
	.byte	-26
	.byte	66
	.byte	104
	.byte	65
	.byte	-103
	.byte	45
	.byte	15
	.byte	-80
	.byte	84
	.byte	-69
	.byte	22
	.ident	"GCC: (GNU) 7.3.0"
.global __do_copy_data
