	.file	"tinycrypt_aes_encrypt.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	tc_aes128_set_encrypt_key
	.type	tc_aes128_set_encrypt_key, @function
tc_aes128_set_encrypt_key:
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
/* prologue: function */
/* frame size = 0 */
/* stack size = 6 */
.L__stack_usage = 6
	movw r30,r24
	movw r26,r22
	or r24,r25
	brne .+2
	rjmp .L4
	sbiw r26,0
	brne .+2
	rjmp .L4
	adiw r26,2
	ld r20,X
	sbiw r26,2
	adiw r26,3
	ld r24,X
	sbiw r26,3
	mov r15,r20
	mov r14,r24
	std Z+1,r15
	st Z,r14
	adiw r26,6
	ld r22,X
	sbiw r26,6
	adiw r26,7
	ld r24,X
	sbiw r26,7
	mov r29,r22
	mov r28,r24
	std Z+3,r29
	std Z+2,r28
	adiw r26,10
	ld r18,X
	sbiw r26,10
	adiw r26,11
	ld r24,X
	sbiw r26,11
	mov r25,r18
	std Z+5,r25
	std Z+4,r24
	adiw r26,14
	ld r16,X
	sbiw r26,14
	adiw r26,15
	ld r18,X
	mov r17,r16
	mov r16,r18
	std Z+7,r17
	std Z+6,r16
	movw r26,r16
	clr r27
	subi r26,lo8(-(sbox))
	sbci r27,hi8(-(sbox))
	ld r20,X
	ldi r21,0
	mov r21,r20
	clr r20
	ori r20,99
	eor r20,r14
	eor r21,r15
	std Z+9,r21
	std Z+8,r20
	movw r18,r20
	eor r18,r28
	eor r19,r22
	std Z+11,r19
	std Z+10,r18
	eor r18,r24
	eor r19,r25
	std Z+13,r19
	std Z+12,r18
	movw r24,r16
	eor r24,r18
	eor r25,r19
	std Z+15,r25
	std Z+14,r24
	clr r25
	movw r26,r24
	subi r26,lo8(-(sbox))
	sbci r27,hi8(-(sbox))
	ld r25,X
	mov r22,r25
	ldi r23,0
	mov r23,r22
	clr r22
	ori r22,99
	eor r20,r22
	eor r21,r23
	std Z+17,r21
	std Z+16,r20
	eor r22,r28
	eor r23,r29
	std Z+19,r23
	std Z+18,r22
	movw r24,r18
	eor r24,r22
	eor r25,r23
	std Z+21,r25
	std Z+20,r24
	movw r28,r16
	eor r28,r22
	eor r29,r23
	std Z+23,r29
	std Z+22,r28
	movw r26,r28
	clr r27
	subi r26,lo8(-(sbox))
	sbci r27,hi8(-(sbox))
	ld r24,X
	ldi r25,0
	mov r25,r24
	clr r24
	ori r24,99
	eor r20,r24
	eor r21,r25
	std Z+25,r21
	std Z+24,r20
	movw r24,r22
	eor r24,r20
	eor r25,r21
	std Z+27,r25
	std Z+26,r24
	movw r24,r18
	eor r24,r20
	eor r25,r21
	std Z+29,r25
	std Z+28,r24
	eor r28,r24
	eor r29,r25
	std Z+31,r29
	std Z+30,r28
	clr r29
	subi r28,lo8(-(sbox))
	sbci r29,hi8(-(sbox))
	ld r18,Y
	ldi r19,0
	mov r19,r18
	clr r18
	ori r18,99
	eor r20,r18
	eor r21,r19
	std Z+33,r21
	std Z+32,r20
	eor r22,r18
	eor r23,r19
	std Z+35,r23
	std Z+34,r22
	movw r26,r24
	eor r26,r22
	eor r27,r23
	std Z+37,r27
	std Z+36,r26
	movw r26,r16
	eor r26,r18
	eor r27,r19
	std Z+39,r27
	std Z+38,r26
	movw r28,r26
	clr r29
	subi r28,lo8(-(sbox))
	sbci r29,hi8(-(sbox))
	ld r18,Y
	ldi r19,0
	mov r19,r18
	clr r18
	ori r18,99
	eor r20,r18
	eor r21,r19
	std Z+41,r21
	std Z+40,r20
	movw r18,r22
	eor r18,r20
	eor r19,r21
	std Z+43,r19
	std Z+42,r18
	eor r24,r20
	eor r25,r21
	std Z+45,r25
	std Z+44,r24
	movw r18,r26
	eor r18,r24
	eor r19,r25
	std Z+47,r19
	std Z+46,r18
	clr r19
	movw r28,r18
	subi r28,lo8(-(sbox))
	sbci r29,hi8(-(sbox))
	ld r18,Y
	ldi r19,0
	mov r19,r18
	clr r18
	ori r18,99
	eor r20,r18
	eor r21,r19
	std Z+49,r21
	std Z+48,r20
	eor r22,r18
	eor r23,r19
	std Z+51,r23
	std Z+50,r22
	movw r18,r24
	eor r18,r22
	eor r19,r23
	std Z+53,r19
	std Z+52,r18
	movw r18,r26
	eor r18,r22
	eor r19,r23
	std Z+55,r19
	std Z+54,r18
	movw r28,r18
	clr r29
	subi r28,lo8(-(sbox))
	sbci r29,hi8(-(sbox))
	ld r28,Y
	ldi r29,0
	mov r29,r28
	clr r28
	ori r28,99
	eor r20,r28
	eor r21,r29
	std Z+57,r21
	std Z+56,r20
	movw r28,r22
	eor r28,r20
	eor r29,r21
	std Z+59,r29
	std Z+58,r28
	eor r24,r20
	eor r25,r21
	std Z+61,r25
	std Z+60,r24
	eor r18,r24
	eor r19,r25
	std Z+63,r19
	std Z+62,r18
	clr r19
	movw r28,r18
	subi r28,lo8(-(sbox))
	sbci r29,hi8(-(sbox))
	ld r18,Y
	ldi r19,0
	mov r19,r18
	clr r18
	ori r18,99
	eor r20,r18
	eor r21,r19
	movw r28,r30
	subi r28,-64
	sbci r29,-1
	std Y+1,r21
	st Y,r20
	eor r22,r18
	eor r23,r19
	adiw r28,2
	std Y+1,r23
	st Y,r22
	adiw r28,2
	movw r16,r24
	eor r16,r22
	eor r17,r23
	std Y+1,r17
	st Y,r16
	eor r18,r26
	eor r19,r27
	movw r26,r30
	subi r26,-70
	sbci r27,-1
	st X+,r18
	st X,r19
	movw r26,r18
	clr r27
	subi r26,lo8(-(sbox))
	sbci r27,hi8(-(sbox))
	ld r26,X
	ldi r27,0
	mov r27,r26
	clr r26
	ori r26,99
	eor r20,r26
	eor r21,r27
	movw r26,r30
	subi r26,-72
	sbci r27,-1
	adiw r26,1
	st X,r21
	st -X,r20
	adiw r26,2
	movw r28,r20
	eor r28,r22
	eor r29,r23
	adiw r26,1
	st X,r29
	st -X,r28
	eor r24,r20
	eor r25,r21
	adiw r26,2
	st X+,r24
	st X,r25
	movw r26,r24
	eor r26,r18
	eor r27,r19
	movw r28,r30
	subi r28,-78
	sbci r29,-1
	std Y+1,r27
	st Y,r26
	clr r27
	subi r26,lo8(-(sbox))
	sbci r27,hi8(-(sbox))
	ld r26,X
	ldi r27,0
	mov r27,r26
	clr r26
	ori r26,99
	adiw r28,2
	eor r20,r26
	eor r21,r27
	std Y+1,r21
	st Y,r20
	eor r22,r26
	eor r23,r27
	movw r26,r30
	subi r26,-82
	sbci r27,-1
	adiw r26,1
	st X,r23
	st -X,r22
	adiw r26,2
	eor r24,r22
	eor r25,r23
	st X+,r24
	st X,r25
	subi r30,-86
	sbci r31,-1
	eor r22,r18
	eor r23,r19
	std Z+1,r23
	st Z,r22
	ldi r24,lo8(1)
	ldi r25,0
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
.L4:
	ldi r25,0
	ldi r24,0
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	ret
	.size	tc_aes128_set_encrypt_key, .-tc_aes128_set_encrypt_key
.global	tc_aes_encrypt
	.type	tc_aes_encrypt, @function
tc_aes_encrypt:
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 32 */
/* stack size = 48 */
.L__stack_usage = 48
	sbiw r24,0
	brne .+2
	rjmp .L11
	cp r22,__zero_reg__
	cpc r23,__zero_reg__
	brne .+2
	rjmp .L11
	cp r20,__zero_reg__
	cpc r21,__zero_reg__
	brne .+2
	rjmp .L11
	movw r6,r20
	movw r20,r22
	movw r4,r24
	ldi r18,lo8(16)
	ldi r19,0
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r28
	adiw r24,17
	call _copy
	movw r30,r6
	ld r24,Z
	ldd r25,Z+1
	ldd r30,Y+19
	mov r19,r30
	eor r19,r25
	ldd r30,Y+20
	mov r20,r30
	eor r20,r24
	movw r30,r6
	ldd r25,Z+2
	ldd r24,Z+3
	ldd r30,Y+23
	eor r24,r30
	ldd r30,Y+24
	mov r18,r30
	eor r18,r25
	movw r30,r6
	ldd r25,Z+4
	ldd r21,Z+5
	ldd r30,Y+27
	mov r26,r30
	eor r26,r21
	ldd r30,Y+28
	mov r14,r30
	eor r14,r25
	movw r30,r6
	ldd r21,Z+6
	ldd r12,Z+7
	ldd r25,Y+31
	eor r12,r25
	ldd r9,Y+32
	eor r9,r21
	movw r16,r6
	subi r16,-8
	sbci r17,-1
	movw r10,r6
	ldi r31,80
	add r10,r31
	adc r11,__zero_reg__
.L8:
	ldd r30,Y+17
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r15,Z
	std Y+17,r15
	ldd r30,Y+18
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r25,Z
	std Y+18,r25
	mov r30,r19
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r19,Z
	std Y+19,r19
	mov r30,r20
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r21,Z
	std Y+20,r21
	ldd r30,Y+21
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r23,Z
	std Y+21,r23
	ldd r30,Y+22
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r27,Z
	std Y+22,r27
	mov r30,r24
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r24,Z
	std Y+23,r24
	mov r30,r18
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r18,Z
	std Y+24,r18
	ldd r30,Y+25
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r20,Z
	std Y+25,r20
	ldd r30,Y+26
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r22,Z
	std Y+26,r22
	mov r30,r26
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r26,Z
	std Y+27,r26
	mov r30,r14
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r14,Z
	std Y+28,r14
	ldd r30,Y+29
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r13,Z
	std Y+29,r13
	ldd r30,Y+30
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r8,Z
	std Y+30,r8
	mov r30,r12
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r12,Z
	std Y+31,r12
	mov r30,r9
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r30,Z
	std Y+32,r30
	std Y+1,r15
	std Y+2,r27
	std Y+3,r26
	std Y+4,r30
	std Y+5,r23
	std Y+6,r22
	std Y+7,r12
	std Y+8,r21
	std Y+9,r20
	std Y+10,r8
	std Y+11,r19
	std Y+12,r18
	std Y+13,r13
	std Y+14,r25
	std Y+15,r24
	std Y+16,r14
	ldi r18,lo8(16)
	ldi r19,0
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r28
	adiw r24,17
	call _copy
	ldd r24,Y+17
	call _double_byte
	mov r15,r24
	ldd r24,Y+18
	call _double_byte
	ldd r18,Y+18
	ldd r25,Y+19
	eor r25,r18
	ldd r19,Y+20
	eor r25,r19
	eor r25,r15
	eor r24,r25
	std Y+1,r24
	ldd r15,Y+17
	mov r24,r18
	call _double_byte
	mov r14,r24
	ldd r24,Y+19
	call _double_byte
	ldd r25,Y+19
	eor r15,r25
	ldd r18,Y+20
	eor r15,r18
	eor r15,r14
	eor r24,r15
	std Y+2,r24
	ldd r15,Y+17
	ldd r24,Y+18
	eor r15,r24
	mov r24,r25
	call _double_byte
	mov r14,r24
	ldd r24,Y+20
	call _double_byte
	ldd r25,Y+20
	eor r15,r25
	eor r15,r14
	eor r15,r24
	std Y+3,r15
	ldd r24,Y+17
	call _double_byte
	ldd r15,Y+17
	ldd r25,Y+18
	eor r15,r25
	ldd r25,Y+19
	eor r15,r25
	eor r15,r24
	ldd r24,Y+20
	call _double_byte
	eor r24,r15
	std Y+4,r24
	ldd r24,Y+21
	call _double_byte
	mov r15,r24
	ldd r24,Y+22
	call _double_byte
	ldd r18,Y+22
	ldd r25,Y+23
	eor r25,r18
	ldd r19,Y+24
	eor r25,r19
	eor r25,r15
	eor r24,r25
	std Y+5,r24
	ldd r15,Y+21
	mov r24,r18
	call _double_byte
	mov r14,r24
	ldd r24,Y+23
	call _double_byte
	ldd r25,Y+23
	eor r15,r25
	ldd r18,Y+24
	eor r15,r18
	eor r15,r14
	eor r24,r15
	std Y+6,r24
	ldd r15,Y+21
	ldd r24,Y+22
	eor r15,r24
	mov r24,r25
	call _double_byte
	mov r14,r24
	ldd r24,Y+24
	call _double_byte
	ldd r25,Y+24
	eor r15,r25
	eor r15,r14
	eor r15,r24
	std Y+7,r15
	ldd r24,Y+21
	call _double_byte
	ldd r15,Y+21
	ldd r25,Y+22
	eor r15,r25
	ldd r25,Y+23
	eor r15,r25
	eor r15,r24
	ldd r24,Y+24
	call _double_byte
	eor r24,r15
	std Y+8,r24
	ldd r24,Y+25
	call _double_byte
	mov r15,r24
	ldd r24,Y+26
	call _double_byte
	ldd r18,Y+26
	ldd r25,Y+27
	eor r25,r18
	ldd r19,Y+28
	eor r25,r19
	eor r25,r15
	eor r24,r25
	std Y+9,r24
	ldd r15,Y+25
	mov r24,r18
	call _double_byte
	mov r14,r24
	ldd r24,Y+27
	call _double_byte
	ldd r25,Y+27
	eor r15,r25
	ldd r18,Y+28
	eor r15,r18
	eor r15,r14
	eor r24,r15
	std Y+10,r24
	ldd r15,Y+25
	ldd r24,Y+26
	eor r15,r24
	mov r24,r25
	call _double_byte
	mov r14,r24
	ldd r24,Y+28
	call _double_byte
	ldd r25,Y+28
	eor r15,r25
	eor r15,r14
	eor r15,r24
	std Y+11,r15
	ldd r24,Y+25
	call _double_byte
	ldd r15,Y+25
	ldd r25,Y+26
	eor r15,r25
	ldd r25,Y+27
	eor r15,r25
	eor r15,r24
	ldd r24,Y+28
	call _double_byte
	eor r24,r15
	std Y+12,r24
	ldd r24,Y+29
	call _double_byte
	mov r15,r24
	ldd r24,Y+30
	call _double_byte
	ldd r18,Y+30
	ldd r25,Y+31
	eor r25,r18
	ldd r19,Y+32
	eor r25,r19
	eor r25,r15
	eor r24,r25
	std Y+13,r24
	ldd r15,Y+29
	mov r24,r18
	call _double_byte
	mov r14,r24
	ldd r24,Y+31
	call _double_byte
	ldd r25,Y+31
	eor r15,r25
	ldd r18,Y+32
	eor r15,r18
	eor r15,r14
	eor r24,r15
	std Y+14,r24
	ldd r15,Y+29
	ldd r24,Y+30
	eor r15,r24
	mov r24,r25
	call _double_byte
	mov r14,r24
	ldd r24,Y+32
	call _double_byte
	ldd r25,Y+32
	eor r15,r25
	eor r15,r14
	eor r15,r24
	std Y+15,r15
	ldd r24,Y+29
	call _double_byte
	ldd r15,Y+29
	ldd r25,Y+30
	eor r15,r25
	ldd r25,Y+31
	eor r15,r25
	eor r15,r24
	ldd r24,Y+32
	call _double_byte
	eor r24,r15
	std Y+16,r24
	ldi r18,lo8(16)
	ldi r19,0
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r28
	adiw r24,17
	call _copy
	movw r30,r16
	ld r24,Z
	ldd r25,Z+1
	ldd r30,Y+19
	mov r19,r30
	eor r19,r25
	std Y+19,r19
	ldd r30,Y+20
	mov r20,r30
	eor r20,r24
	std Y+20,r20
	movw r30,r16
	ldd r25,Z+2
	ldd r24,Z+3
	ldd r30,Y+23
	eor r24,r30
	std Y+23,r24
	ldd r30,Y+24
	mov r18,r30
	eor r18,r25
	std Y+24,r18
	movw r30,r16
	ldd r25,Z+4
	ldd r21,Z+5
	ldd r30,Y+27
	mov r26,r30
	eor r26,r21
	std Y+27,r26
	ldd r30,Y+28
	mov r14,r30
	eor r14,r25
	std Y+28,r14
	movw r30,r16
	ldd r9,Z+6
	ldd r25,Z+7
	ldd r12,Y+31
	eor r12,r25
	ldd r30,Y+32
	eor r9,r30
	subi r16,-8
	sbci r17,-1
	cp r16,r10
	cpc r17,r11
	breq .+2
	rjmp .L8
	ldd r30,Y+17
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r21,Z
	std Y+17,r21
	ldd r30,Y+18
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r15,Z
	std Y+18,r15
	mov r30,r19
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r23,Z
	std Y+19,r23
	mov r30,r20
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r25,Z
	std Y+20,r25
	ldd r30,Y+21
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r19,Z
	std Y+21,r19
	ldd r30,Y+22
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r20,Z
	std Y+22,r20
	mov r30,r24
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r13,Z
	std Y+23,r13
	mov r30,r18
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r27,Z
	std Y+24,r27
	ldd r30,Y+25
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r24,Z
	std Y+25,r24
	ldd r30,Y+26
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r18,Z
	std Y+26,r18
	mov r30,r26
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r22,Z
	std Y+27,r22
	mov r30,r14
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r11,Z
	std Y+28,r11
	ldd r30,Y+29
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r26,Z
	std Y+29,r26
	ldd r30,Y+30
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r14,Z
	std Y+30,r14
	mov r30,r12
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r12,Z
	std Y+31,r12
	mov r30,r9
	ldi r31,0
	subi r30,lo8(-(sbox))
	sbci r31,hi8(-(sbox))
	ld r30,Z
	std Y+32,r30
	std Y+1,r21
	std Y+2,r20
	std Y+3,r22
	std Y+4,r30
	std Y+5,r19
	std Y+6,r18
	std Y+7,r12
	std Y+8,r25
	std Y+9,r24
	std Y+10,r14
	std Y+11,r23
	std Y+12,r27
	std Y+13,r26
	std Y+14,r15
	std Y+15,r13
	std Y+16,r11
	ldi r18,lo8(16)
	ldi r19,0
	movw r20,r28
	subi r20,-1
	sbci r21,-1
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r28
	adiw r24,17
	call _copy
	movw r30,r16
	ld r18,Z
	ldd r24,Z+1
	ldd r25,Y+19
	eor r25,r24
	std Y+19,r25
	ldd r24,Y+20
	eor r24,r18
	std Y+20,r24
	movw r30,r6
	subi r30,-82
	sbci r31,-1
	ld r18,Z
	ldd r24,Z+1
	ldd r25,Y+23
	eor r25,r24
	std Y+23,r25
	ldd r24,Y+24
	eor r24,r18
	std Y+24,r24
	adiw r30,2
	ld r18,Z
	ldd r24,Z+1
	ldd r25,Y+27
	eor r25,r24
	std Y+27,r25
	ldd r24,Y+28
	eor r24,r18
	std Y+28,r24
	adiw r30,2
	ld r18,Z
	ldd r24,Z+1
	ldd r25,Y+31
	eor r25,r24
	std Y+31,r25
	ldd r24,Y+32
	eor r24,r18
	std Y+32,r24
	ldi r18,lo8(16)
	ldi r19,0
	movw r20,r28
	subi r20,-17
	sbci r21,-1
	ldi r22,lo8(16)
	ldi r23,0
	movw r24,r4
	call _copy
	ldi r20,lo8(16)
	ldi r21,0
	ldi r22,0
	movw r24,r28
	adiw r24,17
	call _set
	ldi r24,lo8(1)
	ldi r25,0
	rjmp .L6
.L11:
	ldi r25,0
	ldi r24,0
.L6:
/* epilogue start */
	adiw r28,32
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	ret
	.size	tc_aes_encrypt, .-tc_aes_encrypt
	.section	.rodata
	.type	sbox, @object
	.size	sbox, 256
sbox:
	.byte	99
	.byte	124
	.byte	119
	.byte	123
	.byte	-14
	.byte	107
	.byte	111
	.byte	-59
	.byte	48
	.byte	1
	.byte	103
	.byte	43
	.byte	-2
	.byte	-41
	.byte	-85
	.byte	118
	.byte	-54
	.byte	-126
	.byte	-55
	.byte	125
	.byte	-6
	.byte	89
	.byte	71
	.byte	-16
	.byte	-83
	.byte	-44
	.byte	-94
	.byte	-81
	.byte	-100
	.byte	-92
	.byte	114
	.byte	-64
	.byte	-73
	.byte	-3
	.byte	-109
	.byte	38
	.byte	54
	.byte	63
	.byte	-9
	.byte	-52
	.byte	52
	.byte	-91
	.byte	-27
	.byte	-15
	.byte	113
	.byte	-40
	.byte	49
	.byte	21
	.byte	4
	.byte	-57
	.byte	35
	.byte	-61
	.byte	24
	.byte	-106
	.byte	5
	.byte	-102
	.byte	7
	.byte	18
	.byte	-128
	.byte	-30
	.byte	-21
	.byte	39
	.byte	-78
	.byte	117
	.byte	9
	.byte	-125
	.byte	44
	.byte	26
	.byte	27
	.byte	110
	.byte	90
	.byte	-96
	.byte	82
	.byte	59
	.byte	-42
	.byte	-77
	.byte	41
	.byte	-29
	.byte	47
	.byte	-124
	.byte	83
	.byte	-47
	.byte	0
	.byte	-19
	.byte	32
	.byte	-4
	.byte	-79
	.byte	91
	.byte	106
	.byte	-53
	.byte	-66
	.byte	57
	.byte	74
	.byte	76
	.byte	88
	.byte	-49
	.byte	-48
	.byte	-17
	.byte	-86
	.byte	-5
	.byte	67
	.byte	77
	.byte	51
	.byte	-123
	.byte	69
	.byte	-7
	.byte	2
	.byte	127
	.byte	80
	.byte	60
	.byte	-97
	.byte	-88
	.byte	81
	.byte	-93
	.byte	64
	.byte	-113
	.byte	-110
	.byte	-99
	.byte	56
	.byte	-11
	.byte	-68
	.byte	-74
	.byte	-38
	.byte	33
	.byte	16
	.byte	-1
	.byte	-13
	.byte	-46
	.byte	-51
	.byte	12
	.byte	19
	.byte	-20
	.byte	95
	.byte	-105
	.byte	68
	.byte	23
	.byte	-60
	.byte	-89
	.byte	126
	.byte	61
	.byte	100
	.byte	93
	.byte	25
	.byte	115
	.byte	96
	.byte	-127
	.byte	79
	.byte	-36
	.byte	34
	.byte	42
	.byte	-112
	.byte	-120
	.byte	70
	.byte	-18
	.byte	-72
	.byte	20
	.byte	-34
	.byte	94
	.byte	11
	.byte	-37
	.byte	-32
	.byte	50
	.byte	58
	.byte	10
	.byte	73
	.byte	6
	.byte	36
	.byte	92
	.byte	-62
	.byte	-45
	.byte	-84
	.byte	98
	.byte	-111
	.byte	-107
	.byte	-28
	.byte	121
	.byte	-25
	.byte	-56
	.byte	55
	.byte	109
	.byte	-115
	.byte	-43
	.byte	78
	.byte	-87
	.byte	108
	.byte	86
	.byte	-12
	.byte	-22
	.byte	101
	.byte	122
	.byte	-82
	.byte	8
	.byte	-70
	.byte	120
	.byte	37
	.byte	46
	.byte	28
	.byte	-90
	.byte	-76
	.byte	-58
	.byte	-24
	.byte	-35
	.byte	116
	.byte	31
	.byte	75
	.byte	-67
	.byte	-117
	.byte	-118
	.byte	112
	.byte	62
	.byte	-75
	.byte	102
	.byte	72
	.byte	3
	.byte	-10
	.byte	14
	.byte	97
	.byte	53
	.byte	87
	.byte	-71
	.byte	-122
	.byte	-63
	.byte	29
	.byte	-98
	.byte	-31
	.byte	-8
	.byte	-104
	.byte	17
	.byte	105
	.byte	-39
	.byte	-114
	.byte	-108
	.byte	-101
	.byte	30
	.byte	-121
	.byte	-23
	.byte	-50
	.byte	85
	.byte	40
	.byte	-33
	.byte	-116
	.byte	-95
	.byte	-119
	.byte	13
	.byte	-65
	.byte	-26
	.byte	66
	.byte	104
	.byte	65
	.byte	-103
	.byte	45
	.byte	15
	.byte	-80
	.byte	84
	.byte	-69
	.byte	22
	.ident	"GCC: (GNU) 7.3.0"
.global __do_copy_data
